// THIS FILE WAS GENERATED BY A SCRIPT AND SHOULD NOT BE UPDATED MANUALLY

import dynamic from "next/dynamic";
import type { ReactElement } from "react";

import { useCodeConfig } from "./CodeConfigProvider";

const A11YDark = dynamic(() => import("./prism-themes/A11YDark"));
const AtomDark = dynamic(() => import("./prism-themes/AtomDark"));
const Base16AteliersulphurpoolLight = dynamic(
  () => import("./prism-themes/Base16AteliersulphurpoolLight")
);
const Cb = dynamic(() => import("./prism-themes/Cb"));
const ColdarkCold = dynamic(() => import("./prism-themes/ColdarkCold"));
const ColdarkDark = dynamic(() => import("./prism-themes/ColdarkDark"));
const CoyWithoutShadows = dynamic(
  () => import("./prism-themes/CoyWithoutShadows")
);
const Darcula = dynamic(() => import("./prism-themes/Darcula"));
const Dracula = dynamic(() => import("./prism-themes/Dracula"));
const DuotoneDark = dynamic(() => import("./prism-themes/DuotoneDark"));
const DuotoneEarth = dynamic(() => import("./prism-themes/DuotoneEarth"));
const DuotoneForest = dynamic(() => import("./prism-themes/DuotoneForest"));
const DuotoneLight = dynamic(() => import("./prism-themes/DuotoneLight"));
const DuotoneSea = dynamic(() => import("./prism-themes/DuotoneSea"));
const DuotoneSpace = dynamic(() => import("./prism-themes/DuotoneSpace"));
const Ghcolors = dynamic(() => import("./prism-themes/Ghcolors"));
const GruvboxDark = dynamic(() => import("./prism-themes/GruvboxDark"));
const GruvboxLight = dynamic(() => import("./prism-themes/GruvboxLight"));
const HoliTheme = dynamic(() => import("./prism-themes/HoliTheme"));
const Hopscotch = dynamic(() => import("./prism-themes/Hopscotch"));
const Lucario = dynamic(() => import("./prism-themes/Lucario"));
const MaterialDark = dynamic(() => import("./prism-themes/MaterialDark"));
const MaterialLight = dynamic(() => import("./prism-themes/MaterialLight"));
const MaterialOceanic = dynamic(() => import("./prism-themes/MaterialOceanic"));
const NightOwl = dynamic(() => import("./prism-themes/NightOwl"));
const Nord = dynamic(() => import("./prism-themes/Nord"));
const OneDark = dynamic(() => import("./prism-themes/OneDark"));
const OneLight = dynamic(() => import("./prism-themes/OneLight"));
const Pojoaque = dynamic(() => import("./prism-themes/Pojoaque"));
const ShadesOfPurple = dynamic(() => import("./prism-themes/ShadesOfPurple"));
const SolarizedDarkAtom = dynamic(
  () => import("./prism-themes/SolarizedDarkAtom")
);
const Synthwave84 = dynamic(() => import("./prism-themes/Synthwave84"));
const Vs = dynamic(() => import("./prism-themes/Vs"));
const VscDarkPlus = dynamic(() => import("./prism-themes/VscDarkPlus"));
const Xonokai = dynamic(() => import("./prism-themes/Xonokai"));
const ZTouch = dynamic(() => import("./prism-themes/ZTouch"));
const Coy = dynamic(() => import("./prism-themes/Coy"));
const Dark = dynamic(() => import("./prism-themes/Dark"));
const Funky = dynamic(() => import("./prism-themes/Funky"));
const Okaidia = dynamic(() => import("./prism-themes/Okaidia"));
const Solarizedlight = dynamic(() => import("./prism-themes/Solarizedlight"));
const Tomorrow = dynamic(() => import("./prism-themes/Tomorrow"));
const Twilight = dynamic(() => import("./prism-themes/Twilight"));
const Default = dynamic(() => import("./prism-themes/Default"));
const VimSolarizedDark = dynamic(() => import("./VimSolarizedDark"));

export function LoadPrismTheme(): ReactElement {
  const { theme } = useCodeConfig();

  return (
    <>
      {theme === "a11y-dark" && <A11YDark />}
      {theme === "atom-dark" && <AtomDark />}
      {theme === "base16-ateliersulphurpool.light" && (
        <Base16AteliersulphurpoolLight />
      )}
      {theme === "cb" && <Cb />}
      {theme === "coldark-cold" && <ColdarkCold />}
      {theme === "coldark-dark" && <ColdarkDark />}
      {theme === "coy-without-shadows" && <CoyWithoutShadows />}
      {theme === "darcula" && <Darcula />}
      {theme === "dracula" && <Dracula />}
      {theme === "duotone-dark" && <DuotoneDark />}
      {theme === "duotone-earth" && <DuotoneEarth />}
      {theme === "duotone-forest" && <DuotoneForest />}
      {theme === "duotone-light" && <DuotoneLight />}
      {theme === "duotone-sea" && <DuotoneSea />}
      {theme === "duotone-space" && <DuotoneSpace />}
      {theme === "ghcolors" && <Ghcolors />}
      {theme === "gruvbox-dark" && <GruvboxDark />}
      {theme === "gruvbox-light" && <GruvboxLight />}
      {theme === "holi-theme" && <HoliTheme />}
      {theme === "hopscotch" && <Hopscotch />}
      {theme === "lucario" && <Lucario />}
      {theme === "material-dark" && <MaterialDark />}
      {theme === "material-light" && <MaterialLight />}
      {theme === "material-oceanic" && <MaterialOceanic />}
      {theme === "night-owl" && <NightOwl />}
      {theme === "nord" && <Nord />}
      {theme === "one-dark" && <OneDark />}
      {theme === "one-light" && <OneLight />}
      {theme === "pojoaque" && <Pojoaque />}
      {theme === "shades-of-purple" && <ShadesOfPurple />}
      {theme === "solarized-dark-atom" && <SolarizedDarkAtom />}
      {theme === "synthwave84" && <Synthwave84 />}
      {theme === "vs" && <Vs />}
      {theme === "vsc-dark-plus" && <VscDarkPlus />}
      {theme === "xonokai" && <Xonokai />}
      {theme === "z-touch" && <ZTouch />}
      {theme === "coy" && <Coy />}
      {theme === "dark" && <Dark />}
      {theme === "funky" && <Funky />}
      {theme === "okaidia" && <Okaidia />}
      {theme === "solarizedlight" && <Solarizedlight />}
      {theme === "tomorrow" && <Tomorrow />}
      {theme === "twilight" && <Twilight />}
      {theme === "default" && <Default />}
      {theme === "vim-solarized-dark" && <VimSolarizedDark />}
    </>
  );
}
