// THIS FILE WAS GENERATED BY A SCRIPT AND SHOULD NOT BE UPDATED MANUALLY

export const SCSS_LOOKUP: Record<string, string> = {
  "@react-md/app-bar/app-bar":
    '@use "sass:map";\n\n@use "../utils";\n@use "../box-shadows";\n@use "../interaction/interaction";\n@use "../theme/a11y";\n@use "../theme/theme";\n@use "../button/button";\n@use "../typography/typography";\n\n$disable-everything: false !default;\n$disable-fixed: false !default;\n$disable-sticky: false !default;\n$disable-surface-theme: $disable-everything !default;\n$disable-dense-theme: false !default;\n$disable-prominent-theme: false !default;\n$disable-prominent-dense-theme: false !default;\n$disable-scrollbar-offset: false !default;\n$disable-static-scrollbar-offset: false !default;\n$disable-primary-interaction-colors: interaction.$light-surface-base-background-color\n  == interaction.$dark-surface-base-background-color !default;\n$disable-secondary-interaction-colors: interaction.$light-surface-base-background-color\n  == interaction.$dark-surface-base-background-color !default;\n\n$disable-title: false !default;\n\n$gap: 0.25rem !default;\n$height: 3.5rem !default;\n$dense-height: 3rem !default;\n$prominent-height: $height * 2 !default;\n$prominent-dense-height: $dense-height * 2 !default;\n\n$fixed-z-index: 10 !default;\n$fixed-elevation: 2 !default;\n$fixed-positions: top bottom !default;\n\n$light-theme-surface-background-color: theme.$light-theme-surface-color !default;\n$light-theme-surface-color: a11y.contrast-color(\n  $light-theme-surface-background-color\n) !default;\n$dark-theme-surface-background-color: if(\n  theme.$disable-dark-elevation,\n  theme.$dark-theme-surface-color,\n  map.get(theme.$dark-elevation-colors, $fixed-elevation)\n) !default;\n$dark-theme-surface-color: #fff !default;\n\n$surface-background-color: theme.get-default-color(\n  $light-theme-surface-background-color,\n  $dark-theme-surface-background-color\n) !default;\n$surface-color: theme.get-default-color(\n  $light-theme-surface-color,\n  $dark-theme-surface-color\n) !default;\n\n$horizontal-padding: 0.25rem !default;\n$vertical-padding: 0 !default;\n\n$keyline: 1rem !default;\n$title-keyline: 4.5rem !default;\n\n$variables: (height, surface-background-color, surface-color);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "app-bar");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "app-bar")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-surface-theme {\n    @include set-var(\n      surface-background-color,\n      $light-theme-surface-background-color\n    );\n    @include set-var(surface-color, $light-theme-surface-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-surface-theme {\n    @include set-var(\n      surface-background-color,\n      $dark-theme-surface-background-color\n    );\n    @include set-var(surface-color, $dark-theme-surface-color);\n  }\n}\n\n@mixin dense {\n  @include set-var(height, $dense-height);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(height, $height);\n    @include set-var(surface-background-color, $surface-background-color);\n    @include set-var(surface-color, $surface-color);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include theme.default-system-theme {\n      @include use-dark-theme;\n    }\n\n    .rmd-app-bar {\n      @include use-var(height);\n\n      align-items: center;\n      display: flex;\n      // since app bars can appear a lot in full page dialogs, setting these flex\n      // values allows it be be a direct replacement of the `DialogHeader`\n      // component without all the offsets and additional styles needed for fixed\n      // app bars.\n      flex: 0 0 auto;\n      gap: $gap;\n      padding: $vertical-padding $horizontal-padding;\n      width: 100%;\n\n      @if not $disable-fixed or not $disable-sticky {\n        &--fixed {\n          left: 0;\n          position: fixed;\n          // Note: right and width were added to support the main navigation\n          // behavior with toggleable full-height navigation\n          right: 0;\n          width: auto;\n          z-index: $fixed-z-index;\n        }\n\n        @if $fixed-elevation and $fixed-elevation != 0 {\n          &--elevated {\n            @include box-shadows.box-shadow(\n              $fixed-elevation,\n              $disable-colors: true\n            );\n          }\n        }\n\n        @each $position in $fixed-positions {\n          &--#{$position} {\n            #{$position}: 0;\n          }\n        }\n\n        @if not $disable-sticky {\n          &--sticky {\n            position: sticky;\n          }\n        }\n      }\n\n      &--auto {\n        // do not set variable so that child AppBar can maintain their height as needed\n        height: auto;\n      }\n\n      &--stacked {\n        flex-direction: column;\n        gap: 0;\n        padding: 0;\n      }\n\n      @if not $disable-dense-theme {\n        &--dense {\n          @include set-var(height, $dense-height);\n        }\n      }\n\n      @if not $disable-prominent-theme {\n        &--prominent {\n          @include set-var(height, $prominent-height);\n        }\n      }\n\n      @if not $disable-prominent-dense-theme {\n        &--prominent-dense {\n          @include set-var(height, $prominent-dense-height);\n        }\n      }\n\n      @if not $disable-surface-theme {\n        &--surface {\n          @include use-var(background-color, surface-background-color);\n          @include use-var(color, surface-color);\n        }\n      }\n\n      @if not $disable-scrollbar-offset {\n        &--scrollbar-offset {\n          @include utils.rtl {\n            margin-right: calc(-1 * #{utils.scrollbar-size()});\n          }\n\n          padding-right: calc(\n            #{$horizontal-padding} + #{utils.scrollbar-size()}\n          );\n        }\n\n        @if not $disable-static-scrollbar-offset {\n          &--static-scrollbar-offset {\n            width: calc(100% + utils.scrollbar-size());\n          }\n        }\n      }\n    }\n\n    @if not $disable-title {\n      .rmd-app-bar-title {\n        @include utils.auto-rtl(margin-left, $keyline - $horizontal-padding);\n\n        flex: 1 1 auto;\n        margin-bottom: 0;\n        margin-top: 0;\n\n        &--keyline {\n          @include utils.auto-rtl(\n            margin-left,\n            $title-keyline - $horizontal-padding\n          );\n        }\n\n        &--nav-keyline {\n          @include utils.auto-rtl(\n            margin-left,\n            $title-keyline - $horizontal-padding - $gap - button.$icon-size\n          );\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/avatar/avatar":
    '@use "sass:map";\n@use "sass:math";\n@use "../utils";\n@use "../theme/colors";\n@use "../typography/typography";\n@use "../icon/icon";\n\n$disable-everything: false !default;\n$disable-icon: false !default;\n$disable-icon-size: false !default;\n$disable-image: false !default;\n$disable-auto-image: false !default;\n\n$color: colors.$grey-100 !default;\n$background-color: colors.$grey-700 !default;\n$line-height: map.get(typography.$subtitle-1-styles, line-height) !default;\n$border-color: transparent !default;\n$border-radius: 50% !default;\n$size: 2.5rem !default;\n$font-size: 1.5rem !default;\n$icon-sized-size: icon.get-var(size) !default;\n$icon-sized-font-size: 0.75rem !default;\n\n$default-colors: (\n  red: colors.$red-a-700 colors.$red-50,\n  pink: colors.$pink-600 colors.$white,\n  purple: colors.$purple-700 colors.$purple-100,\n  deep-purple: colors.$deep-purple-900 colors.$deep-purple-100,\n  indigo: colors.$indigo-600 colors.$indigo-100,\n  blue: colors.$blue-a-700 colors.$white,\n  light-blue: colors.$light-blue-300 colors.$deep-purple-900,\n  cyan: colors.$cyan-400 colors.$teal-900,\n  teal: colors.$teal-a-400 colors.$teal-900,\n  green: colors.$green-800 colors.$green-50,\n  light-green: colors.$light-green-300 colors.$green-900,\n  lime: colors.$lime-400 colors.$teal-800,\n  yellow: colors.$yellow-a-200 colors.$brown-500,\n  amber: colors.$amber-400 colors.$brown-800,\n  orange: colors.$orange-600 colors.$grey-900,\n  deep-orange: colors.$deep-orange-a-400 colors.$grey-900,\n  brown: colors.$brown-500 colors.$brown-50,\n  grey: colors.$grey-700 colors.$grey-100,\n  blue-grey: colors.$blue-grey-700 colors.$blue-grey-50,\n);\n\n$colors: $default-colors !default;\n\n$variables: (\n  background-color,\n  color,\n  border-color,\n  border-radius,\n  size,\n  font-size\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "avatar");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "avatar")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin custom-color($name, $color, $background-color, $disable-prefix: false) {\n  $class-name: if($disable-prefix, $name, ".rmd-avatar--#{$name}");\n\n  #{$class-name} {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n    @include set-var(border-color, $border-color);\n    @include set-var(border-radius, $border-radius);\n    @include set-var(size, $size);\n    @include set-var(font-size, $font-size);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-avatar {\n      @if not $disable-icon {\n        @include icon.set-var(color, currentcolor);\n      }\n      @include utils.map-to-styles(typography.$base-font-styles);\n      @include use-var(background-color);\n      @include use-var(border-radius);\n      @include use-var(color);\n      @include use-var(font-size);\n      @include use-var(height, size);\n      @include use-var(width, size);\n\n      align-items: center;\n      border: 1px solid get-var(border-color);\n      display: inline-flex;\n      flex-shrink: 0;\n      justify-content: center;\n      line-height: $line-height;\n      overflow: hidden;\n\n      @if not $disable-icon-size {\n        &--icon {\n          @include set-var(size, $icon-sized-size);\n\n          font-size: $icon-sized-font-size;\n        }\n      }\n\n      @if not $disable-image {\n        &__image {\n          height: 100%;\n          width: auto;\n        }\n      }\n\n      @if not $disable-auto-image {\n        img {\n          height: 100%;\n          width: auto;\n        }\n      }\n\n      @each $name, $values in $colors {\n        @if length($values) != 2 {\n          @error \'Unable to create an avatar color because the list of values is not of length 2. The first value should be the background-color and the second should be the text color. "#{$values}"\';\n        }\n\n        @include custom-color(\n          "&--#{$name}",\n          nth($values, 2),\n          nth($values, 1),\n          true\n        );\n      }\n    }\n  }\n}\n',
  "@react-md/badge/badge":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/a11y";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../typography/typography";\n\n$disable-everything: false !default;\n$disable-greyscale-theme: false !default;\n$disable-primary-theme: false !default;\n$disable-secondary-theme: false !default;\n\n$size: 1.5rem !default;\n$font-size: 0.625rem !default;\n$offset: 0 !default;\n$offset-top: $offset !default;\n$offset-right: $offset !default;\n$border-radius: 50% !default;\n$typography: map.merge(\n  map.remove(typography.$body-1-styles, line-height, font-size),\n  (\n    font-size: $font-size,\n  )\n) !default;\n\n$light-theme-greyscale-background-color: #ccc !default;\n$light-theme-greyscale-color: a11y.contrast-color(\n  $light-theme-greyscale-background-color\n) !default;\n$dark-theme-greyscale-background-color: colors.$grey-700 !default;\n$dark-theme-greyscale-color: a11y.contrast-color(\n  $dark-theme-greyscale-background-color\n) !default;\n$greyscale-background-color: theme.get-default-color(\n  $light-theme-greyscale-background-color,\n  $dark-theme-greyscale-background-color\n) !default;\n$greyscale-color: theme.get-default-color(\n  $light-theme-greyscale-color,\n  $dark-theme-greyscale-color\n) !default;\n\n$variables: (\n  greyscale-background-color,\n  greyscale-color,\n  size,\n  offset,\n  offset-top,\n  offset-right\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "badge");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "badge")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if $light-theme-greyscale-background-color !=\n    $dark-theme-greyscale-background-color\n  {\n    @include set-var(\n      greyscale-background-color,\n      $light-theme-greyscale-background-color\n    );\n  }\n  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {\n    @include set-var(greyscale-color, $light-theme-greyscale-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if $light-theme-greyscale-background-color !=\n    $dark-theme-greyscale-background-color\n  {\n    @include set-var(\n      greyscale-background-color,\n      $dark-theme-greyscale-background-color\n    );\n  }\n\n  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {\n    @include set-var(greyscale-color, $dark-theme-greyscale-color);\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(greyscale-background-color, $greyscale-background-color);\n    @include set-var(greyscale-color, $greyscale-color);\n    @include set-var(size, $size);\n    @include set-var(offset, $offset);\n    @if $offset != $offset-top {\n      @include set-var(offset-top, $offset-top);\n    }\n    @if $offset != $offset-right {\n      @include set-var(offset-right, $offset-right);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-badge {\n      @include utils.map-to-styles($typography);\n      @include use-var(height, size);\n      @include use-var(width, size);\n      @include utils.auto-rtl(right, get-var(offset-right, get-var(offset)));\n      @include use-var(top, offset-top, get-var(offset));\n\n      align-items: center;\n      border-radius: $border-radius;\n      display: inline-flex;\n      justify-content: center;\n      pointer-events: none; // badges are _kind_ of presentational and shouldn\'t trigger mouse events\n      position: absolute;\n\n      @if not $disable-greyscale-theme {\n        &--greyscale {\n          @include use-var(background-color, greyscale-background-color);\n          @include use-var(color, greyscale-color);\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/box-shadows":
    '@use "sass:map";\n@use "sass:string";\n@use "theme/theme";\n@use "transition/transition";\n@use "utils";\n\n$box-shadow-color: #000 !default;\n\n$box-shadow-1-opacity: 0.2 !default;\n$box-shadow-1-layers: (\n  0: "0px 0px 0px 0px",\n  1: "0px 2px 1px -1px",\n  2: "0px 3px 1px -2px",\n  3: "0px 3px 3px -2px",\n  4: "0px 2px 4px -1px",\n  5: "0px 3px 5px -1px",\n  6: "0px 3px 5px -1px",\n  7: "0px 4px 5px -2px",\n  8: "0px 5px 5px -3px",\n  9: "0px 5px 6px -3px",\n  10: "0px 6px 6px -3px",\n  11: "0px 6px 7px -4px",\n  12: "0px 7px 8px -4px",\n  13: "0px 7px 8px -4px",\n  14: "0px 7px 9px -4px",\n  15: "0px 8px 9px -5px",\n  16: "0px 8px 10px -5px",\n  17: "0px 8px 11px -5px",\n  18: "0px 9px 11px -5px",\n  19: "0px 9px 12px -6px",\n  20: "0px 10px 13px -6px",\n  21: "0px 10px 13px -6px",\n  22: "0px 10px 14px -6px",\n  23: "0px 11px 14px -7px",\n  24: "0px 11px 15px -7px",\n) !default;\n$box-shadow-2-opacity: 0.14 !default;\n$box-shadow-2-layers: (\n  0: "0px 0px 0px 0px",\n  1: "0px 1px 1px 0px",\n  2: "0px 2px 2px 0px",\n  3: "0px 3px 4px 0px",\n  4: "0px 4px 5px 0px",\n  5: "0px 5px 8px 0px",\n  6: "0px 6px 10px 0px",\n  7: "0px 7px 10px 1px",\n  8: "0px 8px 10px 1px",\n  9: "0px 9px 12px 1px",\n  10: "0px 10px 14px 1px",\n  11: "0px 11px 15px 1px",\n  12: "0px 12px 17px 2px",\n  13: "0px 13px 19px 2px",\n  14: "0px 14px 21px 2px",\n  15: "0px 15px 22px 2px",\n  16: "0px 16px 24px 2px",\n  17: "0px 17px 26px 2px",\n  18: "0px 18px 28px 2px",\n  19: "0px 19px 29px 2px",\n  20: "0px 20px 31px 3px",\n  21: "0px 21px 33px 3px",\n  22: "0px 22px 35px 3px",\n  23: "0px 23px 36px 3px",\n  24: "0px 24px 38px 3px",\n) !default;\n$box-shadow-3-opacity: 0.12 !default;\n$box-shadow-3-layers: (\n  0: "0px 0px 0px 0px",\n  1: "0px 1px 3px 0px",\n  2: "0px 1px 5px 0px",\n  3: "0px 1px 8px 0px",\n  4: "0px 1px 10px 0px",\n  5: "0px 1px 14px 0px",\n  6: "0px 1px 18px 0px",\n  7: "0px 2px 16px 1px",\n  8: "0px 3px 14px 2px",\n  9: "0px 3px 16px 2px",\n  10: "0px 4px 18px 3px",\n  11: "0px 4px 20px 3px",\n  12: "0px 5px 22px 4px",\n  13: "0px 5px 24px 4px",\n  14: "0px 5px 26px 4px",\n  15: "0px 6px 28px 5px",\n  16: "0px 6px 30px 5px",\n  17: "0px 6px 32px 5px",\n  18: "0px 7px 34px 6px",\n  19: "0px 7px 36px 6px",\n  20: "0px 8px 38px 7px",\n  21: "0px 8px 40px 7px",\n  22: "0px 8px 42px 7px",\n  23: "0px 9px 44px 8px",\n  24: "0px 9px 46px 8px",\n) !default;\n\n@function box-shadow($z-value, $color: $box-shadow-color, $opacity-boost: 0) {\n  @if type-of($z-value) != "number" or not unitless($z-value) {\n    @error "$z-value must be a unitless number, but received \'#{$z-value}\'";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error "$z-value must be between 0 and 24, but received \'#{$z-value}\'";\n  }\n\n  $shadow-1-value: map.get($box-shadow-1-layers, $z-value);\n  $shadow-1-color: rgba($color, $box-shadow-1-opacity + $opacity-boost);\n\n  $shadow-2-value: map.get($box-shadow-2-layers, $z-value);\n  $shadow-2-color: rgba($color, $box-shadow-2-opacity + $opacity-boost);\n\n  $shadow-3-value: map.get($box-shadow-3-layers, $z-value);\n  $shadow-3-color: rgba($color, $box-shadow-3-opacity + $opacity-boost);\n\n  @return #{"#{$shadow-1-value} #{$shadow-1-color}"},\n    #{"#{$shadow-2-value} #{$shadow-2-color}"},\n    #{"#{$shadow-3-value} #{$shadow-3-color}"};\n}\n\n@mixin box-shadow(\n  $z-value,\n  $color: $box-shadow-color,\n  $opacity-boost: 0,\n  $disable-colors: theme.$disable-dark-elevation\n) {\n  @include theme.create-surface($z-value, $disable-colors);\n\n  box-shadow: box-shadow($z-value, $color, $opacity-boost);\n}\n\n@mixin box-shadow-transition(\n  $start-shadow,\n  $end-shadow,\n  $active-selectors,\n  $duration: transition.$linear-duration,\n  $pseudo-before: true,\n  $pseudo-z-index: 0,\n  $pseudo-fixed: false,\n  $create-pseudo: true,\n  $position-relative: true\n) {\n  $pseudo-selector: if($pseudo-before, "&::before", "&::after");\n  $suffix: string.slice($pseudo-selector, 2);\n  $active-string: "";\n\n  box-shadow: $start-shadow;\n\n  @if $end-shadow {\n    @if $position-relative {\n      position: relative;\n    }\n\n    #{$pseudo-selector} {\n      @if $create-pseudo {\n        @include utils.pseudo-element($pseudo-z-index, $pseudo-fixed);\n      }\n\n      box-shadow: $end-shadow;\n      opacity: 0;\n      transition: opacity $duration transition.$linear-timing-function;\n    }\n\n    @if type-of($active-selectors) == string {\n      $active-string: $active-selectors + $suffix;\n    } @else if type-of($active-selectors) == list {\n      @for $i from 1 to length($active-selectors) + 1 {\n        $selector: list.nth($active-selectors, $i);\n\n        $prefix: $active-string + if($i > 1, ", ", "");\n        $active-string: $prefix + $selector + $suffix;\n      }\n    }\n\n    #{$active-string} {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin elevation-transition(\n  $start-z-value,\n  $end-z-value,\n  $active-selectors,\n  $pseudo-before: true,\n  $duration: transition.$linear-duration,\n  $color: $box-shadow-color,\n  $opacity-boost: 0,\n  $position-relative: true\n) {\n  $start-shadow: if(\n    $start-z-value == none or $start-z-value == 0,\n    none,\n    box-shadow($start-z-value, $color, $opacity-boost)\n  );\n  $end-shadow: if(\n    $end-z-value == none or $end-z-value == 0,\n    none,\n    if($end-z-value, box-shadow($end-z-value, $color, $opacity-boost), null)\n  );\n\n  @include box-shadow-transition(\n    $start-shadow,\n    $end-shadow,\n    $active-selectors,\n    $duration,\n    $pseudo-before,\n    $position-relative: $position-relative\n  );\n}\n',
  "@react-md/box/box":
    '@use "sass:map";\n@use "../utils";\n\n$default-align-items: center !default;\n\n$disable-everything: false !default;\n$disable-stacked: false !default;\n$disable-reversed: false !default;\n$disable-grid: false !default;\n$disable-grid-columns: false !default;\n\n$align-items: (start end stretch) !default;\n$justify-content: (\n  start center end stretch space-around space-between space-evenly\n) !default;\n\n$gap: 1rem !default;\n$padding: $gap !default;\n$item-min-size: 8rem !default;\n\n/// This should look like:\n/// ```scss\n/// $grids: (\n///   small: (\n///     min: 5rem\n///   ),\n///   medium: (\n///     min: 7rem,\n///     padding: 2rem,\n///     gap: 0.5rem\n///   )\n/// );\n/// ```\n$grids: () !default;\n\n$variables: (gap, padding, item-min-size, columns);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "box");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "box")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin custom-grid($min: null, $padding: null, $gap: null) {\n  @if $min {\n    @include set-var(min-size, $min);\n  }\n\n  @if $padding {\n    @include set-var(padding, $padding);\n  }\n\n  @if $gap {\n    @include set-var(gap, $gap);\n  }\n}\n\n@mixin custom-grid-class($selector, $min: null, $padding: null, $gap: null) {\n  #{$selector} {\n    @include custom-grid($min, $padding, $gap);\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(gap, $gap);\n    @include set-var(padding, $padding);\n    @include set-var(item-min-size, $item-min-size);\n    @include set-var(columns, auto-fit);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-box {\n      @include use-var(gap, gap);\n\n      align-items: $default-align-items;\n      display: flex;\n\n      &--padded {\n        @include use-var(padding);\n      }\n\n      &--wrap {\n        flex-wrap: wrap;\n      }\n\n      &--full-width {\n        width: 100%;\n      }\n\n      @if not $disable-stacked {\n        &--column {\n          flex-direction: column;\n        }\n      }\n\n      @if not $disable-reversed {\n        &--reverse {\n          flex-direction: row-reverse;\n        }\n\n        @if not $disable-stacked {\n          &--column-reverse {\n            flex-direction: column-reverse;\n          }\n        }\n      }\n\n      @each $value in $align-items {\n        &--align-#{$value} {\n          align-items: $value;\n        }\n      }\n\n      @each $value in $justify-content {\n        &--justify-#{utils.str-replace($value, "space-", "")} {\n          justify-content: $value;\n        }\n      }\n\n      @if not $disable-grid {\n        &--grid {\n          display: grid;\n          grid-template-columns: repeat(\n            get-var(columns),\n            minmax(get-var(item-min-size), 1fr)\n          );\n        }\n\n        &--grid-fill {\n          @include set-var(columns, auto-fill);\n        }\n\n        @if not $disable-grid-columns {\n          &--grid-columns {\n            @include set-var(item-min-size, 0);\n          }\n        }\n\n        @each $name, $values in $grids {\n          @include custom-grid-class(\n            "&--#{$name}",\n            $min: map.get($values, min),\n            $gap: map.get($values, gap),\n            $padding: map.get($values, padding)\n          );\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/button/button":
    '@use "sass:list";\n@use "sass:map";\n@use "../utils";\n@use "../theme/a11y";\n@use "../theme/theme";\n@use "../icon/icon";\n@use "../box-shadows";\n@use "../media-queries/media-queries";\n@use "../interaction/interaction";\n@use "../progress/progress";\n@use "../overlay/overlay";\n@use "../typography/typography";\n\n$disable-everything: false !default;\n$disable-text: false !default;\n$disable-icon: false !default;\n$disable-icon-square: false !default;\n$disable-contained: false !default;\n$disable-contained-pressed-elevation: false !default;\n$disable-contained-interaction-colors: interaction.$light-surface-base-background-color\n  == interaction.$dark-surface-base-background-color !default;\n$disable-floating: false !default;\n$disable-floating-absolute-position: false !default;\n$disable-circular-progress: progress.$disable-circular !default;\n$disable-async: $disable-circular-progress !default;\n$disable-unstyled-utility-class: false !default;\n\n$text-border-radius: 0.5rem !default;\n$text-horizontal-padding: 1rem !default;\n$text-vertical-padding: 0 !default;\n$text-min-height: 2.25rem !default;\n$text-min-width: 4rem !default;\n$text-icon-size: 1.125rem !default;\n\n$icon-border-radius: 50% !default;\n$icon-square-border-radius: $text-border-radius !default;\n$icon-size: auto !default;\n$icon-small-size: icon.$size - 0.25rem !default;\n$icon-large-size: icon.$size + 0.25rem !default;\n$icon-font-size: icon.$size !default;\n$icon-padding: 0.5em !default;\n\n$contained-elevation: 2 !default;\n$contained-pressed-elevation: 4 !default;\n$clear-contained-background-color: theme.$light-theme-surface-color !default;\n$clear-contained-color: a11y.contrast-color(\n  $clear-contained-background-color\n) !default;\n\n$circular-progress-size: icon.get-var(size) !default;\n\n$floating-margin: 1.5rem !default;\n$floating-z-index: utils.$temporary-element-z-index !default;\n// set this below the app bar\n$floating-absolute-z-index: 5 !default;\n$floating-positions: (\n  tl: (\n    left: $floating-margin,\n    top: $floating-margin,\n  ),\n  tr: (\n    right: $floating-margin,\n    top: $floating-margin,\n  ),\n  bl: (\n    bottom: $floating-margin,\n    left: $floating-margin,\n  ),\n  br: (\n    bottom: $floating-margin,\n    right: $floating-margin,\n  ),\n) !default;\n\n$variables: (\n  background-color,\n  color,\n  border-radius,\n  contained-background-color,\n  contained-color,\n  text-horizontal-padding,\n  text-vertical-padding,\n  text-min-height,\n  text-min-width,\n  icon-size,\n  icon-font-size,\n  icon-border-radius,\n  fab-offset\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "button");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "button")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin unstyled(\n  $hoverable: false,\n  $css-modules: false,\n  $box-shadow: interaction.$focus-box-shadow\n) {\n  @include interaction.surface(\n    $hoverable: $hoverable,\n    $css-modules: $css-modules,\n    $box-shadow: $box-shadow\n  );\n\n  background-color: transparent;\n  border-width: 0;\n  display: inline-flex;\n}\n\n@mixin text-styles {\n  @include icon.set-var(size, $text-icon-size);\n  @include set-var(border-radius, $text-border-radius);\n  @include utils.map-to-styles(typography.$button-styles);\n  @include use-var(min-height, text-min-height);\n  @include use-var(min-width, text-min-width);\n\n  border: 0;\n  padding: get-var(text-vertical-padding) get-var(text-horizontal-padding);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, transparent);\n    @if not $disable-contained {\n      @include set-var(\n        contained-background-color,\n        $clear-contained-background-color\n      );\n      @include set-var(contained-color, $clear-contained-color);\n    }\n\n    @if not $disable-text {\n      @include set-var(text-horizontal-padding, $text-horizontal-padding);\n      @include set-var(text-vertical-padding, $text-vertical-padding);\n      @include set-var(text-min-height, $text-min-height);\n      @include set-var(text-min-width, $text-min-width);\n    }\n\n    @if not $disable-icon {\n      @include set-var(icon-size, $icon-size);\n      @include set-var(icon-font-size, $icon-font-size);\n      @include set-var(icon-border-radius, $icon-border-radius);\n    }\n\n    @if not $disable-floating {\n      @include set-var(fab-offset, utils.scrollbar-size());\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-button {\n      @if not $disable-circular-progress {\n        @include progress.set-var(circular-size, $circular-progress-size);\n      }\n\n      @include icon.set-var(color, currentcolor);\n      @include icon.use-var(gap, spacing);\n      @include use-var(background-color);\n      @include use-var(color);\n      @include use-var(border-radius);\n\n      align-items: center;\n      border-width: 0;\n      display: inline-flex;\n      flex-shrink: 0;\n      justify-content: center;\n\n      @if not $disable-text {\n        &--text {\n          @include text-styles;\n        }\n      }\n\n      @if not $disable-icon {\n        &--icon {\n          @include icon.set-var(size, 1em);\n          @include set-var(border-radius, get-var(icon-border-radius));\n          @include use-var(font-size, icon-font-size);\n          @include use-var(height, icon-size);\n          @include use-var(width, icon-size);\n\n          padding: $icon-padding;\n        }\n\n        @if not $disable-icon-square {\n          &--icon-square {\n            @include set-var(icon-border-radius, $icon-square-border-radius);\n          }\n        }\n\n        @if $icon-small-size {\n          &--small {\n            font-size: $icon-small-size;\n          }\n        }\n\n        @if $icon-large-size {\n          &--large {\n            font-size: $icon-large-size;\n          }\n        }\n      }\n\n      &--responsive {\n        @include media-queries.tablet-media {\n          @include text-styles;\n\n          height: auto;\n          width: auto;\n        }\n      }\n\n      &:disabled,\n      &--disabled {\n        @include theme.theme-set-var(outline-color, currentcolor);\n        // this was added for the file input\n        @include interaction.surface-disabled($clickable: false);\n      }\n\n      @if not $disable-contained {\n        &--contained {\n          @include box-shadows.elevation-transition(\n            $contained-elevation,\n            if(\n              $disable-contained-pressed-elevation,\n              null,\n              $contained-pressed-elevation\n            ),\n            "&.rmd-button--pressed",\n            $pseudo-before: false,\n            $position-relative: false\n          );\n\n          // contained buttons should _normally_ always force dark background\n          // colors for the interaction states This means use the default light\n          // theme since it is based off of the root background color\n          @if not $disable-contained-interaction-colors {\n            @include interaction.use-light-surface;\n          }\n\n          @include set-var(\n            background-color,\n            get-var(contained-background-color)\n          );\n          @include set-var(color, get-var(contained-color));\n        }\n      }\n\n      @if not $disable-async {\n        &--async {\n          @include overlay.set-var(background-color, transparent);\n          @include progress.set-var(color, currentcolor);\n          // @include progress.set-var(background-color, currentcolor);\n        }\n\n        &--async-overlay {\n          > * {\n            opacity: 0;\n          }\n        }\n      }\n    }\n\n    @if not $disable-unstyled-utility-class {\n      .rmd-button-unstyled {\n        @include unstyled;\n      }\n    }\n\n    @if not $disable-floating {\n      .rmd-fab {\n        position: fixed;\n        z-index: $floating-z-index;\n\n        @if not $disable-floating-absolute-position {\n          &--absolute {\n            @include set-var(fab-offset, 0px);\n\n            position: absolute;\n            z-index: $floating-absolute-z-index;\n          }\n        }\n\n        @each $suffix, $styles in $floating-positions {\n          &--#{$suffix} {\n            @each $property, $value in $styles {\n              @if $property == left {\n                @include utils.rtl {\n                  left: auto;\n                  right: calc(#{$value} + #{get-var(fab-offset)});\n                }\n\n                left: $value;\n              } @else if $property == right {\n                @include utils.rtl {\n                  left: $value;\n                  right: auto;\n                }\n\n                right: calc(#{$value} + #{get-var(fab-offset)});\n              } @else {\n                #{$property}: #{$value};\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/card/card":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/theme";\n@use "../box-shadows";\n@use "../typography/typography";\n@use "../divider/divider";\n\n$disable-everything: false !default;\n$disable-bordered: false !default;\n$disable-shadowed: false !default;\n$disable-raisable: false !default;\n$disable-full-width: false !default;\n$disable-content-secondary-color: false !default;\n$disable-content-last-child-padding: false !default;\n\n$elevation: 2 !default;\n$raisable-start-elevation: 1 !default;\n$raisable-end-elevation: 8 !default;\n\n$light-theme-background-color: theme.theme-get-var(surface-color) !default;\n$dark-theme-background-color: if(\n  theme.$disable-dark-elevation,\n  theme.$dark-theme-surface-color,\n  map.get(theme.$dark-elevation-colors, $elevation)\n) !default;\n\n$background-color: theme.get-default-color(\n  $light-theme-background-color,\n  $dark-theme-background-color\n) !default;\n$color: theme.theme-get-var(text-primary-color) !default;\n\n$border-color: divider.get-var(color) !default;\n$border-width: divider.get-var(size) !default;\n$border-radius: 0.25rem !default;\n\n$header-padding: 1rem !default;\n$header-padding-top: 1.5rem !default;\n\n$header-spacing: 1rem !default;\n\n$content-padding: 1rem !default;\n$content-padding-bottom: 1.5rem !default;\n\n$footer-padding: 0.5rem !default;\n\n$variables: (background-color, color, secondary-color);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "card");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "card")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-everything {\n    @include set-var(background-color, $light-theme-background-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-everything {\n    @include set-var(background-color, $dark-theme-background-color);\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include theme.default-system-theme {\n      @include use-dark-theme;\n    }\n\n    .rmd-card {\n      @include use-var(background-color);\n      @include use-var(color);\n\n      border-radius: $border-radius;\n      display: inline-block;\n      max-width: 100%;\n\n      @if not $disable-raisable {\n        @include utils.mouse-only {\n          &--raisable {\n            @include box-shadows.elevation-transition(\n              $raisable-start-elevation,\n              $raisable-end-elevation,\n              "&:hover"\n            );\n          }\n        }\n      }\n\n      @if not $disable-shadowed {\n        &--shadowed {\n          @include box-shadows.box-shadow($elevation);\n        }\n      }\n\n      @if not $disable-bordered {\n        &--bordered {\n          border: $border-width inset $border-color;\n        }\n      }\n\n      @if not $disable-full-width {\n        &--full-width {\n          display: block;\n          width: 100%;\n        }\n      }\n\n      &__header {\n        align-items: center;\n        column-gap: $header-spacing;\n        display: flex;\n        padding: $header-padding-top $header-padding $header-padding;\n      }\n\n      &__header-content {\n        @include typography.text-overflow;\n\n        flex: 1 1 auto;\n        min-width: 1;\n      }\n\n      // does not require custom styles\n      // &__title {\n      // }\n\n      // does not require custom styles\n      // &__subtitle {\n      // }\n\n      &__content {\n        @if not $disable-content-secondary-color {\n          &--secondary {\n            @include theme.theme-use-var(color, text-secondary-color);\n          }\n        }\n\n        @if $content-padding {\n          &--padded {\n            padding: $content-padding;\n          }\n        }\n\n        @if not $disable-content-last-child-padding {\n          &--padded-bottom:last-child {\n            padding-bottom: $content-padding-bottom;\n          }\n        }\n      }\n\n      @if $footer-padding {\n        &__footer {\n          padding: $footer-padding;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/chip/chip":
    '@use "sass:color";\n@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../theme/a11y";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../typography/typography";\n@use "../transition/transition";\n@use "../interaction/interaction";\n@use "../icon/icon";\n@use "../avatar/avatar";\n@use "../progress/progress";\n\n$disable-everything: false !default;\n$disable-icon: false !default;\n$disable-avatar: false !default;\n$disable-progress: false !default;\n$disable-content: false !default;\n$disable-solid-theme: $disable-everything !default;\n$disable-solid-raisable: false !default;\n$disable-outline-theme: $disable-everything !default;\n$disable-outline-raisable: false !default;\n$disable-left-addon: false !default;\n$disable-right-addon: false !default;\n$disable-selected-theme: false !default;\n$disable-selected-icon-transition: false !default;\n\n$gap: icon.$spacing !default;\n$height: 2rem !default;\n$border-radius: 1rem !default;\n$icon-size: 1.125rem !default;\n$avatar-size: 1.5rem !default;\n$progress-size: $icon-size !default;\n$progress-width: 12 !default;\n$typography: map.merge(\n  typography.$base-font-styles,\n  typography.$body-2-styles\n) !default;\n$horizontal-padding: 0.75rem !default;\n$vertical-padding: 0 !default;\n$addon-left-padding: 0.25rem !default;\n$addon-right-padding: 0.5rem !default;\n\n$selected-transition-duration: transition.$linear-duration;\n$selected-transition-timing-function: transition.$linear-timing-function !default;\n$theme-background-color: theme.get-swatch(\n  theme.$primary-color,\n  300,\n  false,\n  color.adjust(theme.$primary-color, $lightness: -20%)\n) !default;\n$theme-color: a11y.contrast-color($theme-background-color) !default;\n\n$solid-light-background-color: colors.$grey-300 !default;\n$solid-light-disabled-background-color: colors.$grey-100 !default;\n$solid-light-color: a11y.contrast-color($solid-light-background-color) !default;\n$solid-dark-background-color: if(\n  theme.$disable-dark-elevation,\n  colors.$grey-900,\n  map.get(theme.$dark-elevation-colors, 12)\n) !default;\n$solid-dark-disabled-background-color: color.adjust(\n  colors.$grey-900,\n  $lightness: 2%\n) !default;\n$solid-dark-color: a11y.contrast-color($solid-dark-background-color) !default;\n$solid-background-color: theme.get-default-color(\n  $solid-light-background-color,\n  $solid-dark-background-color\n) !default;\n$solid-disabled-background-color: theme.get-default-color(\n  $solid-light-disabled-background-color,\n  $solid-dark-disabled-background-color\n) !default;\n$solid-color: theme.get-default-color(\n  $solid-light-color,\n  $solid-dark-color\n) !default;\n$solid-raisable-box-shadow-z-value: 4 !default;\n$solid-raisable-transition-duration: transition.$linear-duration !default;\n\n$outline-width: 0.0625rem !default;\n$outline-light-color: colors.$grey-300 !default;\n$outline-light-background-color: theme.$light-theme-surface-color !default;\n$outline-light-text-color: a11y.contrast-color(\n  $outline-light-background-color\n) !default;\n$outline-dark-color: $outline-light-color !default;\n$outline-dark-background-color: if(\n  theme.$disable-dark-elevation,\n  theme.$dark-theme-surface-color,\n  map.get(theme.$dark-elevation-colors, 8)\n) !default;\n$outline-dark-text-color: a11y.contrast-color(\n  $outline-dark-background-color\n) !default;\n\n$outline-color: theme.get-default-color(\n  $outline-light-color,\n  $outline-dark-color\n) !default;\n$outline-background-color: theme.get-default-color(\n  $outline-light-background-color,\n  $outline-dark-background-color\n) !default;\n$outline-text-color: theme.get-default-color(\n  $outline-light-text-color,\n  $outline-dark-text-color\n) !default;\n$outline-raisable-box-shadow-z-value: 8 !default;\n$outline-raisable-transition-duration: transition.$linear-duration !default;\n\n$variables: (\n  solid-background-color,\n  solid-disabled-background-color,\n  solid-color,\n  theme-background-color,\n  theme-color,\n  outline-color,\n  outline-width,\n  outline-background-color,\n  outline-text-color\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "chip");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "chip")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-solid-theme {\n    @include set-var(solid-background-color, $solid-light-background-color);\n    @include set-var(solid-color, $solid-light-color);\n  }\n\n  @if not $disable-outline-theme {\n    @if $outline-light-color != $outline-dark-color {\n      @include set-var(outline-color, $outline-light-color);\n    }\n    @include set-var(outline-background-color, $outline-light-background-color);\n    @include set-var(outline-text-color, $outline-light-text-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-solid-theme {\n    @include set-var(solid-background-color, $solid-dark-background-color);\n    @include set-var(solid-color, $solid-dark-color);\n  }\n\n  @if not $disable-outline-theme {\n    @if $outline-light-color != $outline-dark-color {\n      @include set-var(outline-color, $outline-dark-color);\n    }\n    @include set-var(outline-background-color, $outline-dark-background-color);\n    @include set-var(outline-text-color, $outline-dark-text-color);\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(solid-background-color, $solid-background-color);\n    @include set-var(\n      solid-disabled-background-color,\n      $solid-disabled-background-color\n    );\n    @include set-var(solid-color, $solid-color);\n    @include set-var(theme-background-color, $theme-background-color);\n    @include set-var(theme-color, $theme-color);\n    @include set-var(outline-color, $outline-color);\n    @include set-var(outline-width, $outline-width);\n    @include set-var(outline-background-color, $outline-background-color);\n    @include set-var(outline-text-color, $outline-text-color);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include theme.default-system-theme {\n      @include use-dark-theme;\n    }\n\n    .rmd-chip {\n      @if not $disable-icon {\n        @include icon.set-var(size, $icon-size);\n      }\n\n      @if not $disable-avatar {\n        @include avatar.set-var(size, $avatar-size);\n      }\n\n      @if not $disable-progress {\n        @include progress.set-var(circular-size, $progress-size);\n        @include progress.set-var(circular-stroke-width, $progress-width);\n      }\n\n      @if not $disable-selected-icon-transition and $gap {\n        @include transition.transition-set-var(max-width, icon.get-var(size));\n        @include transition.transition-set-var(max-width-gap, $gap);\n      }\n      @include utils.map-to-styles($typography);\n\n      align-items: center;\n      border-radius: $border-radius;\n      border-width: 0;\n      display: inline-flex;\n      flex-shrink: 0;\n      gap: $gap;\n      height: $height;\n      justify-content: center;\n      max-width: 100%;\n      padding: $vertical-padding $horizontal-padding;\n\n      @if not $disable-solid-theme {\n        &--solid {\n          @if not $disable-solid-raisable {\n            @include box-shadows.elevation-transition(\n              $start-z-value: 0,\n              $end-z-value: $solid-raisable-box-shadow-z-value,\n              $duration: $solid-raisable-transition-duration,\n              $active-selectors: "&.rmd-chip--pressed",\n              $pseudo-before: false,\n              $position-relative: false\n            );\n          }\n          @include use-var(background-color, solid-background-color);\n          @include use-var(color, solid-color);\n        }\n      }\n\n      @if not $disable-outline-theme {\n        &--outline {\n          @if not $disable-outline-raisable {\n            $outline-box-shadow: inset\n              0\n              0\n              0\n              #{get-var(outline-width)}\n              #{get-var(outline-color)};\n\n            @include box-shadows.box-shadow-transition(\n              $start-shadow: $outline-box-shadow,\n              $end-shadow:\n                box-shadows.box-shadow($outline-raisable-box-shadow-z-value),\n              $duration: $outline-raisable-transition-duration,\n              $active-selectors: "&.rmd-chip--pressed",\n              $pseudo-before: false,\n              $position-relative: false\n            );\n          }\n          @include use-var(background-color, outline-background-color);\n          @include use-var(color, outline-text-color);\n        }\n      }\n\n      @if not $disable-selected-theme {\n        &--themed {\n          @include use-var(background-color, theme-background-color);\n          @include use-var(color, theme-color);\n          @if not $disable-icon {\n            @include icon.set-var(color, currentcolor);\n          }\n        }\n      }\n\n      &--disabled {\n        @if not $disable-icon {\n          @include icon.set-var(color, currentcolor);\n        }\n      }\n\n      @if not $disable-solid-theme {\n        &--solid-disabled {\n          @include use-var(background-color, solid-disabled-background-color);\n        }\n      }\n\n      @if not $disable-left-addon {\n        &--left-addon {\n          @include utils.auto-rtl(\n            padding-left,\n            $addon-left-padding,\n            $horizontal-padding\n          );\n        }\n      }\n\n      @if not $disable-right-addon {\n        &--right-addon {\n          @include utils.auto-rtl(\n            padding-right,\n            $addon-right-padding,\n            $horizontal-padding\n          );\n        }\n      }\n\n      @if not $disable-content {\n        &__content {\n          @include typography.text-overflow;\n\n          flex: 1 1 auto;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/colors":
    '/// @type Color\n$red-50: #ffebee;\n\n/// @type Color\n$red-100: #ffcdd2;\n\n/// @type Color\n$red-200: #ef9a9a;\n\n/// @type Color\n$red-300: #e57373;\n\n/// @type Color\n$red-400: #ef5350;\n\n/// @type Color\n$red-500: #f44336;\n\n/// @type Color\n$red-600: #e53935;\n\n/// @type Color\n$red-700: #d32f2f;\n\n/// @type Color\n$red-800: #c62828;\n\n/// @type Color\n$red-900: #b71c1c;\n\n/// @type Color\n$red-a-100: #ff8a80;\n\n/// @type Color\n$red-a-200: #ff5252;\n\n/// @type Color\n$red-a-400: #ff1744;\n\n/// @type Color\n$red-a-700: #d50000;\n\n/// @type Color\n$pink-50: #fce4ec;\n\n/// @type Color\n$pink-100: #f8bbd0;\n\n/// @type Color\n$pink-200: #f48fb1;\n\n/// @type Color\n$pink-300: #f06292;\n\n/// @type Color\n$pink-400: #ec407a;\n\n/// @type Color\n$pink-500: #e91e63;\n\n/// @type Color\n$pink-600: #d81b60;\n\n/// @type Color\n$pink-700: #c2185b;\n\n/// @type Color\n$pink-800: #ad1457;\n\n/// @type Color\n$pink-900: #880e4f;\n\n/// @type Color\n$pink-a-100: #ff80ab;\n\n/// @type Color\n$pink-a-200: #ff4081;\n\n/// @type Color\n$pink-a-400: #f50057;\n\n/// @type Color\n$pink-a-700: #c51162;\n\n/// @type Color\n$purple-50: #f3e5f5;\n\n/// @type Color\n$purple-100: #e1bee7;\n\n/// @type Color\n$purple-200: #ce93d8;\n\n/// @type Color\n$purple-300: #ba68c8;\n\n/// @type Color\n$purple-400: #ab47bc;\n\n/// @type Color\n$purple-500: #9c27b0;\n\n/// @type Color\n$purple-600: #8e24aa;\n\n/// @type Color\n$purple-700: #7b1fa2;\n\n/// @type Color\n$purple-800: #6a1b9a;\n\n/// @type Color\n$purple-900: #4a148c;\n\n/// @type Color\n$purple-a-100: #ea80fc;\n\n/// @type Color\n$purple-a-200: #e040fb;\n\n/// @type Color\n$purple-a-400: #d500f9;\n\n/// @type Color\n$purple-a-700: #a0f;\n\n/// @type Color\n$deep-purple-50: #ede7f6;\n\n/// @type Color\n$deep-purple-100: #d1c4e9;\n\n/// @type Color\n$deep-purple-200: #b39ddb;\n\n/// @type Color\n$deep-purple-300: #9575cd;\n\n/// @type Color\n$deep-purple-400: #7e57c2;\n\n/// @type Color\n$deep-purple-500: #673ab7;\n\n/// @type Color\n$deep-purple-600: #5e35b1;\n\n/// @type Color\n$deep-purple-700: #512da8;\n\n/// @type Color\n$deep-purple-800: #4527a0;\n\n/// @type Color\n$deep-purple-900: #311b92;\n\n/// @type Color\n$deep-purple-a-100: #b388ff;\n\n/// @type Color\n$deep-purple-a-200: #7c4dff;\n\n/// @type Color\n$deep-purple-a-400: #651fff;\n\n/// @type Color\n$deep-purple-a-700: #6200ea;\n\n/// @type Color\n$indigo-50: #e8eaf6;\n\n/// @type Color\n$indigo-100: #c5cae9;\n\n/// @type Color\n$indigo-200: #9fa8da;\n\n/// @type Color\n$indigo-300: #7986cb;\n\n/// @type Color\n$indigo-400: #5c6bc0;\n\n/// @type Color\n$indigo-500: #3f51b5;\n\n/// @type Color\n$indigo-600: #3949ab;\n\n/// @type Color\n$indigo-700: #303f9f;\n\n/// @type Color\n$indigo-800: #283593;\n\n/// @type Color\n$indigo-900: #1a237e;\n\n/// @type Color\n$indigo-a-100: #8c9eff;\n\n/// @type Color\n$indigo-a-200: #536dfe;\n\n/// @type Color\n$indigo-a-400: #3d5afe;\n\n/// @type Color\n$indigo-a-700: #304ffe;\n\n/// @type Color\n$blue-50: #e3f2fd;\n\n/// @type Color\n$blue-100: #bbdefb;\n\n/// @type Color\n$blue-200: #90caf9;\n\n/// @type Color\n$blue-300: #64b5f6;\n\n/// @type Color\n$blue-400: #42a5f5;\n\n/// @type Color\n$blue-500: #2196f3;\n\n/// @type Color\n$blue-600: #1e88e5;\n\n/// @type Color\n$blue-700: #1976d2;\n\n/// @type Color\n$blue-800: #1565c0;\n\n/// @type Color\n$blue-900: #0d47a1;\n\n/// @type Color\n$blue-a-100: #82b1ff;\n\n/// @type Color\n$blue-a-200: #448aff;\n\n/// @type Color\n$blue-a-400: #2979ff;\n\n/// @type Color\n$blue-a-700: #2962ff;\n\n/// @type Color\n$light-blue-50: #e1f5fe;\n\n/// @type Color\n$light-blue-100: #b3e5fc;\n\n/// @type Color\n$light-blue-200: #81d4fa;\n\n/// @type Color\n$light-blue-300: #4fc3f7;\n\n/// @type Color\n$light-blue-400: #29b6f6;\n\n/// @type Color\n$light-blue-500: #03a9f4;\n\n/// @type Color\n$light-blue-600: #039be5;\n\n/// @type Color\n$light-blue-700: #0288d1;\n\n/// @type Color\n$light-blue-800: #0277bd;\n\n/// @type Color\n$light-blue-900: #01579b;\n\n/// @type Color\n$light-blue-a-100: #80d8ff;\n\n/// @type Color\n$light-blue-a-200: #40c4ff;\n\n/// @type Color\n$light-blue-a-400: #00b0ff;\n\n/// @type Color\n$light-blue-a-700: #0091ea;\n\n/// @type Color\n$cyan-50: #e0f7fa;\n\n/// @type Color\n$cyan-100: #b2ebf2;\n\n/// @type Color\n$cyan-200: #80deea;\n\n/// @type Color\n$cyan-300: #4dd0e1;\n\n/// @type Color\n$cyan-400: #26c6da;\n\n/// @type Color\n$cyan-500: #00bcd4;\n\n/// @type Color\n$cyan-600: #00acc1;\n\n/// @type Color\n$cyan-700: #0097a7;\n\n/// @type Color\n$cyan-800: #00838f;\n\n/// @type Color\n$cyan-900: #006064;\n\n/// @type Color\n$cyan-a-100: #84ffff;\n\n/// @type Color\n$cyan-a-200: #18ffff;\n\n/// @type Color\n$cyan-a-400: #00e5ff;\n\n/// @type Color\n$cyan-a-700: #00b8d4;\n\n/// @type Color\n$teal-50: #e0f2f1;\n\n/// @type Color\n$teal-100: #b2dfdb;\n\n/// @type Color\n$teal-200: #80cbc4;\n\n/// @type Color\n$teal-300: #4db6ac;\n\n/// @type Color\n$teal-400: #26a69a;\n\n/// @type Color\n$teal-500: #009688;\n\n/// @type Color\n$teal-600: #00897b;\n\n/// @type Color\n$teal-700: #00796b;\n\n/// @type Color\n$teal-800: #00695c;\n\n/// @type Color\n$teal-900: #004d40;\n\n/// @type Color\n$teal-a-100: #a7ffeb;\n\n/// @type Color\n$teal-a-200: #64ffda;\n\n/// @type Color\n$teal-a-400: #1de9b6;\n\n/// @type Color\n$teal-a-700: #00bfa5;\n\n/// @type Color\n$green-50: #e8f5e9;\n\n/// @type Color\n$green-100: #c8e6c9;\n\n/// @type Color\n$green-200: #a5d6a7;\n\n/// @type Color\n$green-300: #81c784;\n\n/// @type Color\n$green-400: #66bb6a;\n\n/// @type Color\n$green-500: #4caf50;\n\n/// @type Color\n$green-600: #43a047;\n\n/// @type Color\n$green-700: #388e3c;\n\n/// @type Color\n$green-800: #2e7d32;\n\n/// @type Color\n$green-900: #1b5e20;\n\n/// @type Color\n$green-a-100: #b9f6ca;\n\n/// @type Color\n$green-a-200: #69f0ae;\n\n/// @type Color\n$green-a-400: #00e676;\n\n/// @type Color\n$green-a-700: #00c853;\n\n/// @type Color\n$light-green-50: #f1f8e9;\n\n/// @type Color\n$light-green-100: #dcedc8;\n\n/// @type Color\n$light-green-200: #c5e1a5;\n\n/// @type Color\n$light-green-300: #aed581;\n\n/// @type Color\n$light-green-400: #9ccc65;\n\n/// @type Color\n$light-green-500: #8bc34a;\n\n/// @type Color\n$light-green-600: #7cb342;\n\n/// @type Color\n$light-green-700: #689f38;\n\n/// @type Color\n$light-green-800: #558b2f;\n\n/// @type Color\n$light-green-900: #33691e;\n\n/// @type Color\n$light-green-a-100: #ccff90;\n\n/// @type Color\n$light-green-a-200: #b2ff59;\n\n/// @type Color\n$light-green-a-400: #76ff03;\n\n/// @type Color\n$light-green-a-700: #64dd17;\n\n/// @type Color\n$lime-50: #f9fbe7;\n\n/// @type Color\n$lime-100: #f0f4c3;\n\n/// @type Color\n$lime-200: #e6ee9c;\n\n/// @type Color\n$lime-300: #dce775;\n\n/// @type Color\n$lime-400: #d4e157;\n\n/// @type Color\n$lime-500: #cddc39;\n\n/// @type Color\n$lime-600: #c0ca33;\n\n/// @type Color\n$lime-700: #afb42b;\n\n/// @type Color\n$lime-800: #9e9d24;\n\n/// @type Color\n$lime-900: #827717;\n\n/// @type Color\n$lime-a-100: #f4ff81;\n\n/// @type Color\n$lime-a-200: #eeff41;\n\n/// @type Color\n$lime-a-400: #c6ff00;\n\n/// @type Color\n$lime-a-700: #aeea00;\n\n/// @type Color\n$yellow-50: #fffde7;\n\n/// @type Color\n$yellow-100: #fff9c4;\n\n/// @type Color\n$yellow-200: #fff59d;\n\n/// @type Color\n$yellow-300: #fff176;\n\n/// @type Color\n$yellow-400: #ffee58;\n\n/// @type Color\n$yellow-500: #ffeb3b;\n\n/// @type Color\n$yellow-600: #fdd835;\n\n/// @type Color\n$yellow-700: #fbc02d;\n\n/// @type Color\n$yellow-800: #f9a825;\n\n/// @type Color\n$yellow-900: #f57f17;\n\n/// @type Color\n$yellow-a-100: #ffff8d;\n\n/// @type Color\n$yellow-a-200: #ff0;\n\n/// @type Color\n$yellow-a-400: #ffea00;\n\n/// @type Color\n$yellow-a-700: #ffd600;\n\n/// @type Color\n$amber-50: #fff8e1;\n\n/// @type Color\n$amber-100: #ffecb3;\n\n/// @type Color\n$amber-200: #ffe082;\n\n/// @type Color\n$amber-300: #ffd54f;\n\n/// @type Color\n$amber-400: #ffca28;\n\n/// @type Color\n$amber-500: #ffc107;\n\n/// @type Color\n$amber-600: #ffb300;\n\n/// @type Color\n$amber-700: #ffa000;\n\n/// @type Color\n$amber-800: #ff8f00;\n\n/// @type Color\n$amber-900: #ff6f00;\n\n/// @type Color\n$amber-a-100: #ffe57f;\n\n/// @type Color\n$amber-a-200: #ffd740;\n\n/// @type Color\n$amber-a-400: #ffc400;\n\n/// @type Color\n$amber-a-700: #ffab00;\n\n/// @type Color\n$orange-50: #fff3e0;\n\n/// @type Color\n$orange-100: #fff0b2;\n\n/// @type Color\n$orange-200: #ffcc80;\n\n/// @type Color\n$orange-300: #ffb74d;\n\n/// @type Color\n$orange-400: #ffa726;\n\n/// @type Color\n$orange-500: #ff9800;\n\n/// @type Color\n$orange-600: #fb8c00;\n\n/// @type Color\n$orange-700: #f57c00;\n\n/// @type Color\n$orange-800: #ef6c00;\n\n/// @type Color\n$orange-900: #e65100;\n\n/// @type Color\n$orange-a-100: #ffd180;\n\n/// @type Color\n$orange-a-200: #ffab40;\n\n/// @type Color\n$orange-a-400: #ff9100;\n\n/// @type Color\n$orange-a-700: #ff6d00;\n\n/// @type Color\n$deep-orange-50: #fbe9e7;\n\n/// @type Color\n$deep-orange-100: #ffccbc;\n\n/// @type Color\n$deep-orange-200: #ffab91;\n\n/// @type Color\n$deep-orange-300: #ff8a65;\n\n/// @type Color\n$deep-orange-400: #ff7043;\n\n/// @type Color\n$deep-orange-500: #ff5722;\n\n/// @type Color\n$deep-orange-600: #f4511e;\n\n/// @type Color\n$deep-orange-700: #e64a19;\n\n/// @type Color\n$deep-orange-800: #d84315;\n\n/// @type Color\n$deep-orange-900: #bf360c;\n\n/// @type Color\n$deep-orange-a-100: #ff9e80;\n\n/// @type Color\n$deep-orange-a-200: #ff6e40;\n\n/// @type Color\n$deep-orange-a-400: #ff3d00;\n\n/// @type Color\n$deep-orange-a-700: #dd2c00;\n\n/// @type Color\n$brown-50: #efebe9;\n\n/// @type Color\n$brown-100: #d7ccc8;\n\n/// @type Color\n$brown-200: #bcaaa4;\n\n/// @type Color\n$brown-300: #a1887f;\n\n/// @type Color\n$brown-400: #8d6e63;\n\n/// @type Color\n$brown-500: #795548;\n\n/// @type Color\n$brown-600: #6d4c41;\n\n/// @type Color\n$brown-700: #5d4037;\n\n/// @type Color\n$brown-800: #4e342e;\n\n/// @type Color\n$brown-900: #3e2723;\n\n/// @type Color\n$grey-50: #fafafa;\n\n/// @type Color\n$grey-100: #f5f5f5;\n\n/// @type Color\n$grey-200: #eee;\n\n/// @type Color\n$grey-300: #e0e0e0;\n\n/// @type Color\n$grey-400: #bdbdbd;\n\n/// @type Color\n$grey-500: #9e9e9e;\n\n/// @type Color\n$grey-600: #757575;\n\n/// @type Color\n$grey-700: #616161;\n\n/// @type Color\n$grey-800: #424242;\n\n/// @type Color\n$grey-900: #212121;\n\n/// @type Color\n$blue-grey-50: #eceff1;\n\n/// @type Color\n$blue-grey-100: #cfd8dc;\n\n/// @type Color\n$blue-grey-200: #b0bec5;\n\n/// @type Color\n$blue-grey-300: #90a4ae;\n\n/// @type Color\n$blue-grey-400: #78909c;\n\n/// @type Color\n$blue-grey-500: #607d8b;\n\n/// @type Color\n$blue-grey-600: #546e7a;\n\n/// @type Color\n$blue-grey-700: #455a64;\n\n/// @type Color\n$blue-grey-800: #37474f;\n\n/// @type Color\n$blue-grey-900: #263238;\n\n/// @type Color\n$black: #000;\n\n/// @type Color\n$white: #fff;\n\n/// This is a map of all the material design base colors so that you can\n/// programmatically get variables with the neat sass-map functions.\n///\n/// @example scss - Example Usage SCSS\n///   .error-field {\n///     background: map-get($color-map, red-50);\n///   }\n///\n/// @type Map\n$color-map: (\n  red-50: $red-50,\n  red-100: $red-100,\n  red-200: $red-200,\n  red-300: $red-300,\n  red-400: $red-400,\n  red-500: $red-500,\n  red-600: $red-600,\n  red-700: $red-700,\n  red-800: $red-800,\n  red-900: $red-900,\n  red-a-100: $red-a-100,\n  red-a-200: $red-a-200,\n  red-a-400: $red-a-400,\n  red-a-700: $red-a-700,\n  pink-50: $pink-50,\n  pink-100: $pink-100,\n  pink-200: $pink-200,\n  pink-300: $pink-300,\n  pink-400: $pink-400,\n  pink-500: $pink-500,\n  pink-600: $pink-600,\n  pink-700: $pink-700,\n  pink-800: $pink-800,\n  pink-900: $pink-900,\n  pink-a-100: $pink-a-100,\n  pink-a-200: $pink-a-200,\n  pink-a-400: $pink-a-400,\n  pink-a-700: $pink-a-700,\n  purple-50: $purple-50,\n  purple-100: $purple-100,\n  purple-200: $purple-200,\n  purple-300: $purple-300,\n  purple-400: $purple-400,\n  purple-500: $purple-500,\n  purple-600: $purple-600,\n  purple-700: $purple-700,\n  purple-800: $purple-800,\n  purple-900: $purple-900,\n  purple-a-100: $purple-a-100,\n  purple-a-200: $purple-a-200,\n  purple-a-400: $purple-a-400,\n  purple-a-700: $purple-a-700,\n  deep-purple-50: $deep-purple-50,\n  deep-purple-100: $deep-purple-100,\n  deep-purple-200: $deep-purple-200,\n  deep-purple-300: $deep-purple-300,\n  deep-purple-400: $deep-purple-400,\n  deep-purple-500: $deep-purple-500,\n  deep-purple-600: $deep-purple-600,\n  deep-purple-700: $deep-purple-700,\n  deep-purple-800: $deep-purple-800,\n  deep-purple-900: $deep-purple-900,\n  deep-purple-a-100: $deep-purple-a-100,\n  deep-purple-a-200: $deep-purple-a-200,\n  deep-purple-a-400: $deep-purple-a-400,\n  deep-purple-a-700: $deep-purple-a-700,\n  indigo-50: $indigo-50,\n  indigo-100: $indigo-100,\n  indigo-200: $indigo-200,\n  indigo-300: $indigo-300,\n  indigo-400: $indigo-400,\n  indigo-500: $indigo-500,\n  indigo-600: $indigo-600,\n  indigo-700: $indigo-700,\n  indigo-800: $indigo-800,\n  indigo-900: $indigo-900,\n  indigo-a-100: $indigo-a-100,\n  indigo-a-200: $indigo-a-200,\n  indigo-a-400: $indigo-a-400,\n  indigo-a-700: $indigo-a-700,\n  blue-50: $blue-50,\n  blue-100: $blue-100,\n  blue-200: $blue-200,\n  blue-300: $blue-300,\n  blue-400: $blue-400,\n  blue-500: $blue-500,\n  blue-600: $blue-600,\n  blue-700: $blue-700,\n  blue-800: $blue-800,\n  blue-900: $blue-900,\n  blue-a-100: $blue-a-100,\n  blue-a-200: $blue-a-200,\n  blue-a-400: $blue-a-400,\n  blue-a-700: $blue-a-700,\n  light-blue-50: $light-blue-50,\n  light-blue-100: $light-blue-100,\n  light-blue-200: $light-blue-200,\n  light-blue-300: $light-blue-300,\n  light-blue-400: $light-blue-400,\n  light-blue-500: $light-blue-500,\n  light-blue-600: $light-blue-600,\n  light-blue-700: $light-blue-700,\n  light-blue-800: $light-blue-800,\n  light-blue-900: $light-blue-900,\n  light-blue-a-100: $light-blue-a-100,\n  light-blue-a-200: $light-blue-a-200,\n  light-blue-a-400: $light-blue-a-400,\n  light-blue-a-700: $light-blue-a-700,\n  cyan-50: $cyan-50,\n  cyan-100: $cyan-100,\n  cyan-200: $cyan-200,\n  cyan-300: $cyan-300,\n  cyan-400: $cyan-400,\n  cyan-500: $cyan-500,\n  cyan-600: $cyan-600,\n  cyan-700: $cyan-700,\n  cyan-800: $cyan-800,\n  cyan-900: $cyan-900,\n  cyan-a-100: $cyan-a-100,\n  cyan-a-200: $cyan-a-200,\n  cyan-a-400: $cyan-a-400,\n  cyan-a-700: $cyan-a-700,\n  teal-50: $teal-50,\n  teal-100: $teal-100,\n  teal-200: $teal-200,\n  teal-300: $teal-300,\n  teal-400: $teal-400,\n  teal-500: $teal-500,\n  teal-600: $teal-600,\n  teal-700: $teal-700,\n  teal-800: $teal-800,\n  teal-900: $teal-900,\n  teal-a-100: $teal-a-100,\n  teal-a-200: $teal-a-200,\n  teal-a-400: $teal-a-400,\n  teal-a-700: $teal-a-700,\n  green-50: $green-50,\n  green-100: $green-100,\n  green-200: $green-200,\n  green-300: $green-300,\n  green-400: $green-400,\n  green-500: $green-500,\n  green-600: $green-600,\n  green-700: $green-700,\n  green-800: $green-800,\n  green-900: $green-900,\n  green-a-100: $green-a-100,\n  green-a-200: $green-a-200,\n  green-a-400: $green-a-400,\n  green-a-700: $green-a-700,\n  light-green-50: $light-green-50,\n  light-green-100: $light-green-100,\n  light-green-200: $light-green-200,\n  light-green-300: $light-green-300,\n  light-green-400: $light-green-400,\n  light-green-500: $light-green-500,\n  light-green-600: $light-green-600,\n  light-green-700: $light-green-700,\n  light-green-800: $light-green-800,\n  light-green-900: $light-green-900,\n  light-green-a-100: $light-green-a-100,\n  light-green-a-200: $light-green-a-200,\n  light-green-a-400: $light-green-a-400,\n  light-green-a-700: $light-green-a-700,\n  lime-50: $lime-50,\n  lime-100: $lime-100,\n  lime-200: $lime-200,\n  lime-300: $lime-300,\n  lime-400: $lime-400,\n  lime-500: $lime-500,\n  lime-600: $lime-600,\n  lime-700: $lime-700,\n  lime-800: $lime-800,\n  lime-900: $lime-900,\n  lime-a-100: $lime-a-100,\n  lime-a-200: $lime-a-200,\n  lime-a-400: $lime-a-400,\n  lime-a-700: $lime-a-700,\n  yellow-50: $yellow-50,\n  yellow-100: $yellow-100,\n  yellow-200: $yellow-200,\n  yellow-300: $yellow-300,\n  yellow-400: $yellow-400,\n  yellow-500: $yellow-500,\n  yellow-600: $yellow-600,\n  yellow-700: $yellow-700,\n  yellow-800: $yellow-800,\n  yellow-900: $yellow-900,\n  yellow-a-100: $yellow-a-100,\n  yellow-a-200: $yellow-a-200,\n  yellow-a-400: $yellow-a-400,\n  yellow-a-700: $yellow-a-700,\n  amber-50: $amber-50,\n  amber-100: $amber-100,\n  amber-200: $amber-200,\n  amber-300: $amber-300,\n  amber-400: $amber-400,\n  amber-500: $amber-500,\n  amber-600: $amber-600,\n  amber-700: $amber-700,\n  amber-800: $amber-800,\n  amber-900: $amber-900,\n  amber-a-100: $amber-a-100,\n  amber-a-200: $amber-a-200,\n  amber-a-400: $amber-a-400,\n  amber-a-700: $amber-a-700,\n  orange-50: $orange-50,\n  orange-100: $orange-100,\n  orange-200: $orange-200,\n  orange-300: $orange-300,\n  orange-400: $orange-400,\n  orange-500: $orange-500,\n  orange-600: $orange-600,\n  orange-700: $orange-700,\n  orange-800: $orange-800,\n  orange-900: $orange-900,\n  orange-a-100: $orange-a-100,\n  orange-a-200: $orange-a-200,\n  orange-a-400: $orange-a-400,\n  orange-a-700: $orange-a-700,\n  deep-orange-50: $deep-orange-50,\n  deep-orange-100: $deep-orange-100,\n  deep-orange-200: $deep-orange-200,\n  deep-orange-300: $deep-orange-300,\n  deep-orange-400: $deep-orange-400,\n  deep-orange-500: $deep-orange-500,\n  deep-orange-600: $deep-orange-600,\n  deep-orange-700: $deep-orange-700,\n  deep-orange-800: $deep-orange-800,\n  deep-orange-900: $deep-orange-900,\n  deep-orange-a-100: $deep-orange-a-100,\n  deep-orange-a-200: $deep-orange-a-200,\n  deep-orange-a-400: $deep-orange-a-400,\n  deep-orange-a-700: $deep-orange-a-700,\n  brown-50: $brown-50,\n  brown-100: $brown-100,\n  brown-200: $brown-200,\n  brown-300: $brown-300,\n  brown-400: $brown-400,\n  brown-500: $brown-500,\n  brown-600: $brown-600,\n  brown-700: $brown-700,\n  brown-800: $brown-800,\n  brown-900: $brown-900,\n  grey-50: $grey-50,\n  grey-100: $grey-100,\n  grey-200: $grey-200,\n  grey-300: $grey-300,\n  grey-400: $grey-400,\n  grey-500: $grey-500,\n  grey-600: $grey-600,\n  grey-700: $grey-700,\n  grey-800: $grey-800,\n  grey-900: $grey-900,\n  blue-grey-50: $blue-grey-50,\n  blue-grey-100: $blue-grey-100,\n  blue-grey-200: $blue-grey-200,\n  blue-grey-300: $blue-grey-300,\n  blue-grey-400: $blue-grey-400,\n  blue-grey-500: $blue-grey-500,\n  blue-grey-600: $blue-grey-600,\n  blue-grey-700: $blue-grey-700,\n  blue-grey-800: $blue-grey-800,\n  blue-grey-900: $blue-grey-900,\n  black: $black,\n  white: $white,\n);\n\n/// The "primary" color suffix numbers that are available for use. This is\n/// really just created for the `get-swatch` mixin, but might be\n/// useful since it also gets added to the scssVariables export.\n/// @type List\n$primary-suffixes: 50 100 200 300 400 500 600 700 800 900;\n\n/// The "accent" color suffix numbers that are available for use. This is really\n/// just created for the `get-swatch` mixin, but might be useful since\n/// it also gets added to the scssVariables export.\n/// @type List\n$accent-suffixes: 100 200 400 700;\n\n/// A list of all the available colors within material design. This is really\n/// just created for the `get-swatch` mixin, but might be useful since\n/// it also gets added to the scssVariables export.\n/// @type List\n$available-color-names: (\n  "red" "pink" "purple" "deep-purple" "indigo" "blue" "light-blue" "cyan" "teal"\n    "green" "light-green" "lime" "yellow" "amber" "orange" "deep-orange" "brown"\n    "grey" "blue-grey"\n);\n',
  "@react-md/core":
    '@use "sass:list" as sassList;\n\n@forward "utils";\n@forward "media-queries/media-queries";\n@forward "box/box" as box-*;\n@forward "theme/a11y";\n@forward "theme/colors";\n@forward "theme/theme";\n@forward "typography/typography";\n@forward "transition/transition";\n@forward "box-shadows";\n@forward "interaction/interaction" as interaction-*;\n@forward "draggable/draggable" as draggable-*;\n@forward "window-splitter/window-splitter" as window-splitter-*;\n@forward "icon/icon" as icon-*;\n@forward "divider/divider" as divider-*;\n@forward "progress/progress" as progress-*;\n@forward "button/button" as button-*;\n@forward "badge/badge" as badge-*;\n@forward "tabs/tabs" as tabs-*;\n@forward "chip/chip" as chip-*;\n@forward "table/table" as table-*;\n@forward "app-bar/app-bar" as app-bar-*;\n@forward "responsive-item/responsive-item" as responsive-item-*;\n@forward "overlay/overlay" as overlay-*;\n@forward "avatar/avatar" as avatar-*;\n@forward "card/card" as card-*;\n@forward "link/link" as link-*;\n@forward "list/list" as list-*;\n@forward "tree/tree" as tree-*;\n@forward "dialog/dialog" as dialog-*;\n@forward "sheet/sheet" as sheet-*;\n@forward "tooltip/tooltip" as tooltip-*;\n@forward "snackbar/snackbar" as snackbar-*;\n@forward "expansion-panel/expansion-panel" as expansion-panel-*;\n@forward "menu/menu" as menu-*;\n@forward "form/form" as form-*;\n@forward "layout/layout" as layout-*;\n@forward "segmented-button/segmented-button" as segmented-button-*;\n\n@use "avatar/avatar";\n@use "app-bar/app-bar";\n@use "box/box";\n@use "button/button";\n@use "segmented-button/segmented-button";\n@use "badge/badge";\n@use "card/card";\n@use "divider/divider";\n@use "draggable/draggable";\n@use "expansion-panel/expansion-panel";\n@use "icon/icon";\n@use "media-queries/media-queries";\n@use "snackbar/snackbar";\n@use "interaction/interaction";\n@use "link/link";\n@use "list/list";\n@use "tree/tree";\n@use "tooltip/tooltip";\n@use "overlay/overlay";\n@use "progress/progress";\n@use "responsive-item/responsive-item";\n@use "tabs/tabs";\n@use "chip/chip";\n@use "table/table";\n@use "theme/theme";\n@use "dialog/dialog";\n@use "sheet/sheet";\n@use "transition/transition";\n@use "typography/typography";\n@use "window-splitter/window-splitter";\n@use "menu/menu";\n@use "form/form";\n@use "layout/layout";\n@use "utils";\n\n$disable-transition-layer: false !default;\n$_layer-start: (typography);\n@if not $disable-transition-layer {\n  $_layer-start: sassList.append($_layer-start, transition);\n}\n$_layer-order: sassList.join(\n  $_layer-start,\n  (\n    interaction,\n    box,\n    icon,\n    divider,\n    button,\n    badge,\n    tabs,\n    chip,\n    progress,\n    responsive,\n    overlay,\n    card,\n    avatar,\n    link,\n    list,\n    tree,\n    dialog,\n    sheet,\n    tooltip,\n    table,\n    app-bar,\n    expansion-panel,\n    draggable,\n    window-splitter,\n    menu,\n    form,\n    layout,\n    snackbar,\n    segmented-button,\n    utils\n  )\n);\n\n@mixin css-reset {\n  // setting everything to border-box for easier positioning and calculations\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  // always force full height and remove any spacing the browser might add to\n  // ensure your app can use the full viewport\n  html,\n  body {\n    height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  html {\n    @include theme.theme-use-var(background-color);\n    @include theme.theme-use-var(color, text-primary-color);\n\n    font-family: typography.$font-family;\n  }\n\n  body.touch-mode {\n    // stylelint-disable order/properties-alphabetical-order\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n    // this allows for click events to be bubble-able on iOS to the root\n    // document. Without this, all the `onOutsideClick` behavior won\'t work.\n    cursor: pointer;\n  }\n}\n\n@mixin css-utils {\n  .rmd-display-none {\n    display: none !important;\n  }\n\n  .rmd-sr-only {\n    @include utils.sr-only(true);\n  }\n\n  .rmd-phone-sr-only {\n    @include media-queries.phone-media {\n      @include utils.sr-only;\n    }\n  }\n\n  .rmd-outline {\n    // inset box-shadow is faded on the lower right half? use outline instead\n    outline: theme.theme-get-var(outline-width) solid\n      theme.theme-get-var(outline-color);\n    outline-offset: utils.negate-var(theme.theme-get-var(outline-width));\n  }\n\n  .rmd-greyscale-outline {\n    @include theme.theme-set-var(outline-color, outline-grey-color);\n  }\n\n  .rmd-background-container {\n    @include theme.theme-use-var(background-color);\n    @include theme.theme-use-var(color, on-background-color, currentcolor);\n  }\n\n  @each $color in (primary, secondary, warning, success, error) {\n    $theme-name: $color + "-color";\n    $on-theme-name: "on-" + $theme-name;\n\n    .rmd-#{$color}-container {\n      @include theme.theme-set-var(background-color, $theme-name);\n      @include theme.theme-set-var(on-background-color, $on-theme-name);\n    }\n\n    .rmd-#{$theme-name} {\n      @include theme.theme-use-var(color, $theme-name);\n    }\n\n    .rmd-#{$on-theme-name} {\n      @include theme.theme-use-var(color, $on-theme-name);\n    }\n\n    .rmd-#{$color}-outline {\n      @include theme.theme-set-var(outline-color, $theme-name);\n    }\n  }\n\n  @each $color in (primary, secondary, hint, disabled) {\n    .rmd-text-#{$color}-color {\n      @include theme.theme-use-var(color, text-#{$color}-color);\n    }\n  }\n\n  .rmd-light-surface {\n    @include interaction.use-light-surface;\n    @include theme.theme-set-var(\n      text-primary-color,\n      theme.$light-theme-text-primary-color\n    );\n    @include theme.theme-set-var(\n      text-secondary-color,\n      theme.$light-theme-text-secondary-color\n    );\n    @include theme.theme-set-var(\n      text-hint-color,\n      theme.$light-theme-text-hint-color\n    );\n    @include theme.theme-set-var(\n      text-disabled-color,\n      theme.$dark-theme-text-disabled-color\n    );\n  }\n\n  .rmd-dark-surface {\n    @include interaction.use-dark-surface;\n    @include theme.theme-set-var(\n      text-primary-color,\n      theme.$dark-theme-text-primary-color\n    );\n    @include theme.theme-set-var(\n      text-secondary-color,\n      theme.$dark-theme-text-secondary-color\n    );\n    @include theme.theme-set-var(\n      text-hint-color,\n      theme.$dark-theme-text-hint-color\n    );\n    @include theme.theme-set-var(\n      text-disabled-color,\n      theme.$dark-theme-text-disabled-color\n    );\n  }\n\n  .rmd-no-margin {\n    margin: 0;\n  }\n\n  .rmd-no-margin-top {\n    margin-top: 0;\n  }\n\n  .rmd-no-margin-bottom {\n    margin-bottom: 0;\n  }\n\n  .rmd-centered {\n    margin: 0 auto;\n  }\n\n  .rmd-nowrap {\n    white-space: nowrap;\n  }\n\n  .rmd-ellipsis {\n    @include typography.text-overflow(null);\n  }\n\n  @each $alignment in typography.$text-alignments {\n    .rmd-align-#{$alignment} {\n      @if $alignment != center {\n        @include utils.auto-rtl(text-align, $alignment);\n      } @else {\n        text-align: $alignment;\n      }\n    }\n  }\n\n  @each $decoration in typography.$text-decorations {\n    .rmd-#{$decoration} {\n      text-decoration: $decoration;\n    }\n  }\n\n  @each $transform in typography.$text-transforms {\n    .rmd-#{$transform} {\n      text-transform: $transform;\n    }\n  }\n\n  @each $font-style in typography.$font-styles {\n    .rmd-#{$font-style} {\n      font-style: $font-style;\n    }\n  }\n\n  @each $name, $font-weight in typography.$font-weights {\n    .rmd-#{$name} {\n      font-weight: $font-weight;\n    }\n  }\n}\n\n@mixin use-light-theme {\n  @include theme.use-light-theme-colors;\n  @include interaction.use-light-surface;\n  @include transition.transition-use-light-theme;\n  @include icon.use-light-theme;\n  @include chip.use-light-theme;\n  @include app-bar.use-light-theme;\n  @include divider.use-light-theme;\n  @include card.use-light-theme;\n  @include form.use-light-theme;\n  @include table.use-light-theme;\n  @include segmented-button.use-light-theme;\n  @include badge.use-light-theme;\n}\n\n@mixin use-dark-theme {\n  @include theme.use-dark-theme-colors;\n  @include interaction.use-dark-surface;\n  @include transition.transition-use-dark-theme;\n  @include icon.use-dark-theme;\n  @include chip.use-dark-theme;\n  @include app-bar.use-dark-theme;\n  @include divider.use-dark-theme;\n  @include card.use-dark-theme;\n  @include form.use-dark-theme;\n  @include table.use-dark-theme;\n  @include segmented-button.use-dark-theme;\n  @include badge.use-dark-theme;\n}\n\n@mixin variables {\n  @include theme.theme-variables;\n  @include app-bar.variables;\n  @include avatar.variables;\n  @include badge.variables;\n  @include box.variables;\n  @include button.variables;\n  @include card.variables;\n  @include chip.variables;\n  @include dialog.variables;\n  @include divider.variables;\n  @include form.variables;\n  @include icon.variables;\n  @include interaction.variables;\n  @include layout.variables;\n  @include link.variables;\n  @include list.variables;\n  @include menu.variables;\n  @include overlay.variables;\n  @include progress.variables;\n  @include segmented-button.variables;\n  @include sheet.variables;\n  @include snackbar.variables;\n  @include table.variables;\n  @include tabs.variables;\n  @include tooltip.variables;\n  @include transition.transition-variables;\n  @include tree.variables;\n  @include typography.typography-variables;\n}\n\n@mixin styles {\n  @include css-reset;\n  @if $disable-transition-layer {\n    @include transition.transition-styles;\n  }\n\n  @layer #{$_layer-order};\n  @layer utils {\n    @include css-utils;\n  }\n\n  @layer app-bar {\n    @include app-bar.styles;\n  }\n  @layer avatar {\n    @include avatar.styles;\n  }\n  @layer badge {\n    @include badge.styles;\n  }\n  @layer box {\n    @include box.styles;\n  }\n  @layer button {\n    @include button.styles;\n  }\n  @layer card {\n    @include card.styles;\n  }\n  @layer chip {\n    @include chip.styles;\n  }\n\n  @layer dialog {\n    @include dialog.styles;\n  }\n  @layer divider {\n    @include divider.styles;\n  }\n  @layer draggable {\n    @include draggable.styles;\n  }\n  @layer expansion-panel {\n    @include expansion-panel.styles;\n  }\n\n  @layer form {\n    @include form.styles;\n  }\n\n  @layer icon {\n    @include icon.styles;\n  }\n\n  @layer interaction {\n    @include interaction.styles;\n  }\n\n  @layer layout {\n    @include layout.styles;\n  }\n\n  @layer link {\n    @include link.styles;\n  }\n\n  @layer list {\n    @include list.styles;\n  }\n\n  @layer menu {\n    @include menu.styles;\n  }\n\n  @layer overlay {\n    @include overlay.styles;\n  }\n\n  @layer progress {\n    @include progress.styles;\n  }\n\n  @layer responsive-item {\n    @include responsive-item.styles;\n  }\n\n  @layer segmented-button {\n    @include segmented-button.styles;\n  }\n\n  @layer sheet {\n    @include sheet.styles;\n  }\n\n  @layer snackbar {\n    @include snackbar.styles;\n  }\n\n  @layer table {\n    @include table.styles;\n  }\n\n  @layer tabs {\n    @include tabs.styles;\n  }\n\n  @layer tooltip {\n    @include tooltip.styles;\n  }\n\n  @if not $disable-transition-layer {\n    @layer transition {\n      @include transition.transition-styles;\n    }\n  }\n\n  @layer tree {\n    @include tree.styles;\n  }\n\n  @layer typography {\n    @include typography.typography-styles;\n  }\n\n  @layer window-splitter {\n    @include window-splitter.styles;\n  }\n\n  @if not theme.$disable-default-root-theme {\n    :root {\n      @include variables;\n\n      @if not\n        theme.$disable-default-system-theme and\n        theme.$color-scheme ==\n        system\n      {\n        @media (prefers-color-scheme: dark) {\n          @include use-dark-theme;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/dialog/dialog":
    '@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../transition/transition";\n@use "../interaction/interaction";\n@use "../theme/theme";\n\n$disable-everything: false !default;\n$disable-fixed: false !default;\n$disable-header: false !default;\n$disable-title: false !default;\n$disable-content: false !default;\n$disable-footer: false !default;\n$disable-focus-outline: false !default;\n$disable-footer-flex-vertical: false !default;\n$disable-footer-flex-start: false !default;\n$disable-footer-space-between: false !default;\n$disable-footer-flex-end: false !default;\n\n$elevation: 16 !default;\n$z-index: utils.$temporary-element-z-index !default;\n\n$background-color: if(\n  theme.$disable-dark-elevation,\n  theme.theme-get-var(surface-color),\n  null\n) !default;\n$color: if(\n  theme.$disable-dark-elevation,\n  theme.theme-get-var(text-primary-color),\n  null\n) !default;\n\n$min-width: 17.5rem !default;\n$horizontal-margin: 2.5rem !default;\n$vertical-margin: 1.5rem !default;\n$transition-distance: 1.875rem !default;\n\n$enter-duration: transition.$enter-duration !default;\n$enter-timing-function: transition.$deceleration-timing-function !default;\n$leave-timing-function: transition.$acceleration-timing-function !default;\n$leave-duration: transition.$leave-duration !default;\n\n$header-padding: 1.5rem !default;\n$header-padding-bottom: 1.25rem !default;\n\n$content-padding: 1.5rem !default;\n\n$footer-padding: 0.5rem !default;\n\n$variables: (\n  min-width,\n  horizontal-margin,\n  vertical-margin,\n  z-index,\n  header-padding,\n  header-padding-bottom,\n  content-padding,\n  footer-padding\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "dialog");\n\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "dialog")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(min-width, $min-width);\n    @include set-var(horizontal-margin, $horizontal-margin);\n    @include set-var(vertical-margin, $vertical-margin);\n    @include set-var(z-index, $z-index);\n\n    @if not $disable-header {\n      @include set-var(header-padding, $header-padding);\n      @include set-var(header-padding-bottom, $header-padding-bottom);\n    }\n\n    @if not $disable-content {\n      @include set-var(content-padding, $content-padding);\n    }\n    @if not $disable-footer {\n      @include set-var(footer-padding, $footer-padding);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-dialog-container {\n      @include use-var(z-index);\n\n      align-items: center;\n      display: flex;\n      inset: 0;\n      justify-content: center;\n      margin: get-var(vertical-margin) get-var(horizontal-margin);\n      margin-right: calc(\n        #{get-var(horizontal-margin)} + #{utils.scrollbar-size()}\n      );\n      pointer-events: none;\n      position: fixed;\n    }\n\n    .rmd-dialog {\n      @include box-shadows.box-shadow($elevation);\n\n      background-color: $background-color;\n      color: $color;\n      display: flex;\n      flex-direction: column;\n      max-height: 100%;\n      max-width: 100%;\n      outline: none;\n\n      &--centered {\n        @include use-var(min-width);\n\n        pointer-events: auto;\n      }\n\n      &--full-page {\n        @include use-var(z-index);\n\n        height: 100%;\n        inset: 0;\n        overflow: auto;\n        position: fixed;\n        width: 100%;\n      }\n\n      @if not $disable-focus-outline {\n        @include utils.keyboard-only {\n          &--outline:focus {\n            // Note: Do not use the `interaction-outline` mixin +\n            // `interaction.set-var(interaction.$focus-color)` like normal focus\n            // elements since it\'ll make all focusable children update with the\n            // outline color as well\n            outline: interaction.get-var(focus-color) solid\n              interaction.get-var(focus-width);\n          }\n        }\n      }\n\n      &--enter {\n        transform: translateY($transition-distance);\n      }\n\n      &--enter-active {\n        transform: translateY(0);\n        transition: transform $enter-duration;\n        transition-timing-function: $enter-timing-function;\n      }\n\n      &--exit {\n        opacity: 1;\n        transform: translateY(0);\n        transition:\n          transform $leave-duration,\n          opacity $leave-duration;\n        transition-timing-function: $leave-timing-function;\n      }\n\n      &--exit-active {\n        opacity: 0;\n        transform: translateY($transition-distance);\n      }\n\n      @if not $disable-fixed {\n        &--fixed {\n          @include use-var(z-index);\n        }\n      }\n\n      @if not $disable-header {\n        &__header {\n          @include use-var(padding, header-padding);\n          @include use-var(padding-bottom, header-padding-bottom);\n\n          align-items: center;\n          display: flex;\n          flex: 0 0 auto;\n        }\n      }\n\n      @if not $disable-title {\n        &__title {\n          // this makes it so it\'s easy to add a close button after the title\n          flex: 1 1 auto;\n        }\n      }\n\n      @if not $disable-content {\n        &__content {\n          flex: 1 1 auto;\n          overflow: auto;\n\n          &--padded {\n            @include use-var(padding, content-padding);\n          }\n        }\n      }\n\n      @if not $disable-footer {\n        &__footer {\n          @include use-var(padding, footer-padding);\n\n          flex: 0 0 auto;\n\n          @if not\n            $disable-footer-flex-vertical or not\n            $disable-footer-flex-start or not\n            $disable-footer-space-between or not\n            $disable-footer-flex-end\n          {\n            &--flex {\n              display: flex;\n            }\n          }\n\n          @if not $disable-footer-flex-vertical {\n            &--flex-v {\n              flex-direction: column;\n            }\n          }\n\n          @if not $disable-footer-flex-start {\n            &--start {\n              justify-content: flex-start;\n            }\n          }\n\n          @if not $disable-footer-space-between {\n            &--between {\n              justify-content: space-between;\n            }\n          }\n\n          @if not $disable-footer-flex-end {\n            &--end {\n              justify-content: flex-end;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/divider/divider":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/theme";\n@use "../theme/colors";\n\n$disable-everything: false !default;\n$disable-vertical: false !default;\n$disable-inset: false !default;\n\n$size: 0.0625rem !default;\n// this is doubled since the `hr` element applies the size for border top and bottom\n$vertical-size: $size * 2 !default;\n$max-size: 100% !default;\n$inset: 4rem !default;\n$spacing: 0.25rem auto !default;\n$vertical-spacing: auto 0.25rem !default;\n\n$light-theme-color: rgba(colors.$black, 0.12) !default;\n$dark-theme-color: rgba(colors.$white, 0.12) !default;\n\n$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;\n\n$variables: (\n  size,\n  vertical-size,\n  color,\n  spacing,\n  vertical-spacing,\n  inset,\n  max-size\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "divider");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "divider")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-everything {\n    @include set-var(color, $light-theme-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-everything {\n    @include set-var(color, $dark-theme-color);\n  }\n}\n\n@mixin border-style($position: null) {\n  $property: if(not $position, border, "border-#{$position}");\n\n  #{$property}: get-var(size) solid get-var(color);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(size, $size);\n    @include set-var(color, $color);\n    @include set-var(spacing, $spacing);\n    @include set-var(max-size, $max-size);\n\n    @if not $disable-inset {\n      @include set-var(inset, $inset);\n    }\n\n    @if not $disable-vertical {\n      @include set-var(vertical-size, $vertical-size);\n      @include set-var(vertical-spacing, $vertical-spacing);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include theme.default-system-theme {\n      @include use-dark-theme;\n    }\n\n    .rmd-divider {\n      @include use-var(margin, spacing);\n      @include use-var(width, max-size);\n\n      border: get-var(size) solid get-var(color);\n      display: block;\n      flex-shrink: 0;\n\n      @if not $disable-inset {\n        &--inset {\n          @include utils.auto-rtl(margin-left, get-var(inset), auto);\n\n          width: calc(get-var(max-size) - get-var(inset));\n        }\n      }\n\n      @if not $disable-vertical {\n        &--vertical {\n          @include border-style(left);\n          @include use-var(height, max-size);\n          @include use-var(width, vertical-size);\n          @include use-var(margin, vertical-spacing);\n\n          border-bottom: 0;\n          display: inline-block;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/draggable/draggable":
    "$disable-everything: false !default;\n$disable-horizontal: false !default;\n$disable-vertical: false !default;\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-dragging {\n      * {\n        pointer-events: none;\n      }\n\n      @if not $disable-horizontal {\n        &--h {\n          cursor: col-resize;\n        }\n      }\n\n      @if not $disable-vertical {\n        &--v {\n          cursor: row-resize;\n        }\n      }\n    }\n  }\n}\n",
  "@react-md/expansion-panel/expansion-panel":
    '@use "../utils";\n@use "../transition/transition";\n@use "../icon/icon";\n@use "../button/button";\n\n$disable-everything: false !default;\n$disable-margin-top-transition: false !default;\n\n$padding: 1rem !default;\n$spacing: 1rem !default;\n$button-spacing: icon.$spacing !default;\n$rotate-from: icon.$rotate-from !default;\n$rotate-to: icon.$rotate-to !default;\n\n@mixin styles {\n  @if not $disable-everything {\n    // does not require custom styles\n    .rmd-expansion-panel {\n      @if not $disable-margin-top-transition and $spacing {\n        &--animate {\n          transition: margin-top transition.$linear-duration;\n        }\n      }\n\n      @if $spacing {\n        &--expanded + .rmd-expansion-panel {\n          margin-top: $spacing;\n        }\n      }\n\n      // once firefox supports the `:has` selector, I can handle most of this in CSS instead of javascript:\n      // &:where(:not(.rmd-expansion-panel--expanded)):has(+ .rmd-expansion-panel) {\n      //   border-bottom-left-radius: 0;\n      //   border-bottom-right-radius: 0;\n      //   position: relative;\n\n      //   &::after {\n      //     background: #fff;\n      //     bottom: -5px;\n      //     content: "";\n      //     height: 8px;\n      //     left: 0;\n      //     position: absolute;\n      //     right: 0;\n      //     z-index: 1;\n      //   }\n      // }\n    }\n\n    // .rmd-expansion-panel__header {\n    // }\n\n    .rmd-expansion-panel__button {\n      @if $rotate-from != icon.$rotate-from {\n        @include icon.set-var(rotate-from, $rotate-from);\n      }\n\n      @if $rotate-to != icon.$rotate-to {\n        @include icon.set-var(rotate-to, $rotate-to);\n      }\n\n      @if button.$disable-unstyled-utility-class {\n        @include button.unstyled;\n      }\n      @include utils.auto-rtl(text-align, left);\n\n      align-items: center;\n      color: inherit;\n      font: inherit;\n      gap: $button-spacing;\n      justify-content: space-between;\n      letter-spacing: inherit;\n      padding: $padding;\n      width: 100%;\n\n      &[aria-disabled="true"] {\n        cursor: auto;\n      }\n    }\n  }\n}\n',
  "@react-md/form/form":
    '@use "sass:map";\n@use "sass:math";\n@use "sass:color";\n@use "../utils";\n@use "../box-shadows";\n@use "../button/button";\n@use "../progress/progress";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../list/list";\n@use "../icon/icon";\n@use "../tooltip/tooltip";\n@use "../transition/transition";\n@use "../typography/typography";\n@use "../interaction/interaction";\n\n$disable-everything: false !default;\n$disable-fieldset: $disable-everything !default;\n$disable-message: $disable-everything !default;\n$disable-label: $disable-everything !default;\n$disable-floating-label: $disable-everything !default;\n$disable-label-gap: $disable-everything !default;\n$disable-label-reversed: $disable-everything !default;\n$disable-label-stacked: $disable-everything !default;\n$disable-label-stacked-reversed: $disable-everything !default;\n$disable-file-input: $disable-everything !default;\n$disable-text-field: $disable-everything !default;\n$disable-textarea: $disable-everything !default;\n$disable-password: $disable-text-field !default;\n$disable-text-field-addon: $disable-text-field and $disable-password and\n  $disable-textarea !default;\n$disable-placeholder-ellipsis: false !default;\n$disable-text-field-container-dense: false !default;\n$disable-select: $disable-everything !default;\n$disable-option: $disable-select !default;\n$disable-native-select: $disable-everything !default;\n$disable-native-select-multiple: $disable-everything !default;\n$disable-checkbox: $disable-everything !default;\n$disable-radio: $disable-everything !default;\n$disable-uncontrolled-input-toggles: false !default;\n$disable-switch: $disable-everything !default;\n$disable-switch-circular-progress: progress.$disable-circular !default;\n$disable-switch-icon: false !default;\n$disable-menu-item-checkbox: $disable-checkbox !default;\n$disable-menu-item-radio: $disable-radio !default;\n$disable-menu-item-switch: $disable-switch !default;\n$disable-slider: $disable-everything !default;\n$disable-horizontal-slider: $disable-everything !default;\n$disable-vertical-slider: $disable-everything !default;\n$disable-range-slider: $disable-everything !default;\n$disable-discrete-slider: $disable-everything !default;\n$disable-discrete-slider-marks: $disable-discrete-slider !default;\n$disable-discrete-slider-marks-labels: $disable-discrete-slider-marks !default;\n\n// Note: enabling the filled theme forces the underlined theme to be used since it depends on the same styles\n$disable-text-field-filled-theme: $disable-everything !default;\n$disable-text-field-outlined-theme: $disable-everything !default;\n$disable-text-field-underlined-theme: $disable-everything !default;\n$disable-text-field-counter: $disable-everything !default;\n$disable-text-field-underline-left: $disable-everything !default;\n$disable-text-field-underline-center: $disable-everything !default;\n$disable-text-field-underline-right: $disable-everything !default;\n\n$disable-textarea-resizing-rows: $disable-everything !default;\n$disable-textarea-resizing-mask: $disable-textarea-resizing-rows !default;\n$disable-textarea-resize-horizontal: $disable-everything !default;\n$disable-textarea-resize-vertical: $disable-everything !default;\n\n$active-color: theme.theme-get-var(primary-color) !default;\n$focus-color: interaction.$focus-color !default;\n\n$label-gap: icon.$spacing !default;\n$label-font-size: 1em !default;\n$label-typography: map.merge(\n  typography.$body-1-styles,\n  (\n    font-size: $label-font-size,\n  )\n) !default;\n$label-floating-top: 1rem !default;\n$label-floating-top-dense: 0.9rem !default;\n$label-floating-scale: 0.75 !default;\n$label-floating-padding: 0.25rem !default;\n\n$message-typography-styles: map.merge(\n  typography.$body-2-styles,\n  (\n    font-size: 0.75rem,\n  )\n) !default;\n$message-counter-spacing: icon.$spacing !default;\n$message-margin-top: 0.5rem !default;\n$message-margin-bottom: 1rem !default;\n$message-min-height: 2rem !default;\n\n$text-field-typography: map.merge(\n  typography.$base-font-styles,\n  map.merge(\n    typography.$body-1-styles,\n    (\n      font-size: 1em,\n    )\n  )\n) !default;\n$text-field-height: 3rem !default;\n$text-field-dense-height: 2.5rem !default;\n$text-field-label-height: 3.5rem !default;\n$text-field-label-dense-height: 3.25rem !default;\n$text-field-spacing: icon.$spacing !default;\n$text-field-border-radius: 0.25rem !default;\n$text-field-border-width: 1px !default;\n$text-field-border-width-active: 2px !default;\n$text-field-filled-padding: 0.75rem !default;\n$text-field-outlined-padding: 1rem !default;\n$text-field-underlined-padding: null !default;\n// set this to null to remove this style\n$text-field-underlined-placeholder-height: 2.5rem !default;\n$text-field-underlined-placeholder-padding-top: 0.5rem !default;\n$text-field-underlined-placeholder-addon-padding-top: 0.25rem !default;\n// this is the default height of the label with line-height\n$text-field-underlined-label-padding-top: 1.5rem !default;\n$text-field-underlined-label-left-offset: icon.$spacing !default;\n$text-field-color-min-width: 5rem !default;\n\n$text-field-addon-margin: icon.$spacing !default;\n\n$text-field-light-border-color: rgba(#000, 0.12) !default;\n$text-field-dark-border-color: rgba(#fff, 0.5) !default;\n$text-field-border-color: theme.get-default-color(\n  $text-field-light-border-color,\n  $text-field-dark-border-color\n) !default;\n\n$text-field-light-hover-border-color: rgba(#000, 0.87) !default;\n$text-field-dark-hover-border-color: rgba(#fff, 0.87) !default;\n$text-field-hover-border-color: theme.get-default-color(\n  $text-field-light-hover-border-color,\n  $text-field-dark-hover-border-color\n) !default;\n\n$text-field-light-filled-background-color: colors.$grey-100 !default;\n$text-field-dark-filled-background-color: #424242 !default;\n// $text-field-dark-filled-background-color: core.$grey-700 !default;\n$text-field-filled-background-color: theme.get-default-color(\n  $text-field-light-filled-background-color,\n  $text-field-dark-filled-background-color\n) !default;\n\n$textarea-addon-top: 1rem !default;\n$textarea-vertical-padding: 0.75rem !default;\n\n$password-visibility-toggle-spacing: 0.25rem !default;\n\n$native-select-addon-top: 1rem !default;\n$native-select-multiple-padding: 0.75rem !default;\n$native-select-multiple-underline-padding: 1.5rem !default;\n\n$option-selected-icon-size: 1rem !default;\n$option-selected-styles: (\n  --rmd-icon-color: currentcolor,\n  background-color: colors.$blue-900,\n  color: colors.$white,\n) !default;\n$option-padding-left: list.$item-horizontal-padding - math.div(\n    icon.$size - $option-selected-icon-size,\n    2\n  ) !default;\n$option-selected-icon-spacing: $option-padding-left !default;\n\n$input-toggle-border-radius: 50% !default;\n$input-toggle-padding: 0.5em !default;\n$input-toggle-small-size: 1rem !default;\n$input-toggle-dense-size: icon.$dense-size !default;\n$input-toggle-normal-size: icon.$size !default;\n$input-toggle-large-size: 2rem !default;\n\n$switch-disabled-opacity: 0.5 !default;\n$switch-ball-size: 1.25em !default;\n$switch-ball-border-radius: 50% !default;\n$switch-ball-offset: 0.25em !default;\n$switch-ball-background-color: color.adjust(\n  colors.$white,\n  $lightness: -5%\n) !default;\n$switch-track-height: 1em !default;\n$switch-track-width: 2.25em !default;\n$switch-track-border-radius: 0.5em !default;\n$switch-track-vertical-padding: 0.75em !default;\n$switch-track-horizontal-padding: 0.875em !default;\n$switch-track-light-background-color: colors.$grey-400 !default;\n$switch-track-dark-background-color: if(\n  theme.$disable-dark-elevation,\n  $switch-track-light-theme-background-color,\n  map.get(theme.$dark-elevation-colors, 24)\n) !default;\n$switch-track-background-color: theme.get-default-color(\n  $switch-track-light-background-color,\n  $switch-track-dark-background-color\n) !default;\n$switch-icon-size: 1em !default;\n$switch-circular-progress-width: 12 !default;\n$switch-circular-progress-size: 1em !default;\n\n$slider-size: 2rem !default;\n$slider-vertical-size: 15rem !default;\n$slider-track-color: theme.theme-get-var(primary-color) !default;\n$slider-track-active-size: 0.375rem !default;\n$slider-track-active-color: null !default;\n$slider-track-active-opacity: null !default;\n$slider-track-active-z-index: 2 !default;\n$slider-track-inactive-size: 0.25rem !default;\n$slider-track-inactive-color: null !default;\n$slider-track-inactive-opacity: 0.5 !default;\n$slider-track-inactive-z-index: 1 !default;\n$slider-track-disabled-color: theme.theme-get-var(text-disabled-color) !default;\n\n$slider-mark-height: $slider-track-inactive-size !default;\n$slider-mark-width: $slider-track-inactive-size !default;\n$slider-mark-border-radius: 50% !default;\n$slider-mark-light-active-color: theme.theme-get-var(on-primary-color) !default;\n$slider-mark-dark-active-color: $slider-mark-light-active-color !default;\n$slider-mark-light-active-opacity: 0.38 !default;\n$slider-mark-dark-active-opacity: 0.38 !default;\n$slider-mark-active-color: theme.get-default-color(\n  $slider-mark-light-active-color,\n  $slider-mark-dark-active-color\n) !default;\n$slider-mark-active-opacity: theme.get-default-color(\n  $slider-mark-light-active-opacity,\n  $slider-mark-dark-active-opacity\n) !default;\n\n$slider-mark-light-inactive-color: colors.$black !default;\n$slider-mark-dark-inactive-color: colors.$white !default;\n$slider-mark-inactive-color: theme.get-default-color(\n  $slider-mark-light-inactive-color,\n  $slider-mark-dark-inactive-color\n) !default;\n$slider-mark-light-inactive-opacity: 1 !default;\n$slider-mark-dark-inactive-opacity: 0.8 !default;\n$slider-mark-inactive-opacity: theme.get-default-color(\n  $slider-mark-light-inactive-opacity,\n  $slider-mark-dark-inactive-opacity\n) !default;\n$slider-mark-inactive-z-index: 1 !default;\n$slider-mark-active-z-index: $slider-track-active-z-index + 1 !default;\n\n$slider-thumb-size: 1.25rem !default;\n$slider-thumb-border-radius: 50% !default;\n$slider-thumb-bubble-opacity: 0.3 !default;\n$slider-thumb-z-index: $slider-track-active-z-index !default;\n$slider-thumb-focus-scale: 2 !default;\n$slider-thumb-active-scale: 2.5 !default;\n$slider-thumb-disabled-scale: 0.5 !default;\n$slider-thumb-mask-scale: 0.8 !default;\n$slider-thumb-disabled-color: $slider-track-disabled-color !default;\n$slider-tooltip-caret-size: 0.3rem !default;\n$slider-tooltip-offset: -($slider-thumb-size + icon.$spacing) !default;\n$slider-tooltip-z-index: 0 !default;\n$slider-container-padding: $slider-thumb-size * 0.5 !default;\n$slider-container-addon-spacing: $slider-thumb-size !default;\n$slider-transition-duration: transition.$linear-duration !default;\n$slider-transition-timing-function: transition.$linear-timing-function !default;\n\n// internal variable helpers\n$_disable-text-field-container: $disable-text-field and $disable-password and\n  $disable-textarea and $disable-select and $disable-native-select;\n\n$variables: (\n  active-color,\n  focus-color,\n  addon-top,\n  addon-margin-top,\n  label-floating-top,\n  label-left-offset,\n  label-top-offset,\n  label-active-padding,\n  label-active-background-color,\n  text-field-height,\n  text-field-padding-left,\n  text-field-padding-right,\n  text-field-padding-top,\n  text-field-border-color,\n  text-field-hover-border-color,\n  text-field-filled-color,\n  textarea-height,\n  textarea-padding,\n  switch-track-background-color,\n  switch-ball-background-color,\n  slider-color,\n  slider-active-color,\n  slider-inactive-color,\n  slider-size,\n  slider-active-size,\n  slider-inactive-size,\n  slider-vertical-size,\n  slider-offset-1,\n  slider-offset-2,\n  slider-tooltip-scale,\n  slider-tooltip-translate,\n  slider-mark-offset,\n  slider-mark-active-color,\n  slider-mark-active-opacity,\n  slider-mark-inactive-color,\n  slider-mark-inactive-opacity\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "form");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "form")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-everything {\n    @include set-var(text-field-border-color, $text-field-light-border-color);\n    @include set-var(\n      text-field-hover-border-color,\n      $text-field-light-hover-border-color\n    );\n    @include set-var(\n      text-field-filled-color,\n      $text-field-light-filled-background-color\n    );\n    @if not $disable-switch {\n      @include set-var(\n        switch-track-background-color,\n        $switch-track-light-background-color\n      );\n    }\n  }\n\n  @if not $disable-discrete-slider-marks {\n    @if $slider-mark-light-active-color and\n      $slider-mark-light-active-color !=\n      $slider-mark-dark-active-color\n    {\n      @include set-var(\n        slider-mark-active-color,\n        $slider-mark-light-active-color\n      );\n    }\n\n    @if $slider-mark-light-inactive-color and\n      $slider-mark-light-inactive-color !=\n      $slider-mark-dark-inactive-color\n    {\n      @include set-var(\n        slider-mark-inactive-color,\n        $slider-mark-light-inactive-color\n      );\n    }\n    @if $slider-mark-light-inactive-opacity and\n      $slider-mark-light-inactive-opacity !=\n      $slider-mark-dark-inactive-opacity\n    {\n      @include set-var(\n        slider-mark-inactive-opacity,\n        $slider-mark-light-inactive-opacity\n      );\n    }\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-everything {\n    @include set-var(text-field-border-color, $text-field-dark-border-color);\n    @include set-var(\n      text-field-hover-border-color,\n      $text-field-dark-hover-border-color\n    );\n    @include set-var(\n      text-field-filled-color,\n      $text-field-dark-filled-background-color\n    );\n    @if not $disable-switch {\n      @include set-var(\n        switch-track-background-color,\n        $switch-track-dark-background-color\n      );\n    }\n  }\n\n  @if not $disable-discrete-slider-marks {\n    @if $slider-mark-dark-active-color and\n      $slider-mark-light-active-color !=\n      $slider-mark-dark-active-color\n    {\n      @include set-var(\n        slider-mark-active-color,\n        $slider-mark-dark-active-color\n      );\n    }\n\n    @if $slider-mark-dark-inactive-color and\n      $slider-mark-light-inactive-color !=\n      $slider-mark-dark-inactive-color\n    {\n      @include set-var(\n        slider-mark-inactive-color,\n        $slider-mark-dark-inactive-color\n      );\n    }\n    @if $slider-mark-dark-inactive-opacity and\n      $slider-mark-light-inactive-opacity !=\n      $slider-mark-dark-inactive-opacity\n    {\n      @include set-var(\n        slider-mark-inactive-opacity,\n        $slider-mark-dark-inactive-opacity\n      );\n    }\n  }\n}\n\n@mixin file-input-styles {\n  .rmd-file-input:focus-within::before {\n    @include utils.keyboard-only {\n      @include interaction.focus-styles;\n    }\n  }\n}\n\n@mixin form-message-styles {\n  .rmd-form-message-container {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .rmd-form-message {\n    @include utils.map-to-styles($message-typography-styles);\n\n    display: flex;\n    margin: $message-margin-top 0 $message-margin-bottom;\n    min-height: $message-min-height;\n\n    @if not $disable-text-field-filled-theme and $text-field-filled-padding {\n      &--filled {\n        padding-left: $text-field-filled-padding;\n        padding-right: $text-field-filled-padding;\n      }\n    }\n\n    @if not $disable-text-field-outlined-theme and $text-field-outlined-padding\n    {\n      &--outline {\n        padding-left: $text-field-outlined-padding;\n        padding-right: $text-field-outlined-padding;\n      }\n    }\n\n    @if not\n      $disable-text-field-underlined-theme and\n      $text-field-underlined-padding\n    {\n      &--underline {\n        padding-left: $text-field-underlined-padding;\n        padding-right: $text-field-underlined-padding;\n      }\n    }\n\n    &__message {\n      margin: 0;\n    }\n\n    @if not $disable-text-field-counter {\n      &__counter {\n        @include utils.auto-rtl(margin-left, auto);\n        @include utils.auto-rtl(padding-left, $message-counter-spacing);\n\n        flex-shrink: 0;\n        white-space: nowrap;\n      }\n    }\n  }\n}\n\n@mixin label-styles {\n  .rmd-label {\n    @include utils.map-to-styles($label-typography);\n\n    align-items: center;\n    display: inline-flex;\n    transition-duration: transition.$linear-duration;\n    transition-property: background-color, transform;\n\n    $active-selector: "&--active";\n    @if not $_disable-text-field-container {\n      $active-selector: $active-selector +\n        ", .rmd-text-field-container:focus-within &";\n    }\n\n    #{$active-selector} {\n      @include use-var(color, focus-color);\n    }\n\n    @if not $disable-floating-label {\n      &--floating {\n        @include utils.rtl {\n          left: auto;\n          right: 0;\n          transform: translate(\n            utils.negate-var(get-var(text-field-padding-left)),\n            get-var(label-floating-top)\n          );\n        }\n\n        left: 0;\n        // disable pointer events for floating labels so that the input behind\n        // is clicked instead. this prevents double click events for the Select\n        // component\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        transform: translate(\n          get-var(text-field-padding-left),\n          get-var(label-floating-top)\n        );\n      }\n\n      &--floating-dense {\n        @include set-var(label-floating-top, $label-floating-top-dense);\n      }\n\n      $floating-active-selector: "&--floating-active";\n      @if not\n        $disable-text-field or not\n        $disable-password or not\n        $disable-textarea\n      {\n        $floating-active-selector: $floating-active-selector +\n          ", .rmd-text-field-container:focus-within &--floating" +\n          ", .rmd-text-field:not(:placeholder-shown) + &--floating";\n      }\n      @if not $disable-native-select {\n        $floating-active-selector: $floating-active-selector +\n          ", .rmd-native-select[multiple] + &--floating" +\n          ", .rmd-native-select:not(:invalid) + &--floating";\n      }\n\n      #{$floating-active-selector} {\n        @include utils.rtl {\n          transform: scale($label-floating-scale)\n            translate(\n              utils.negate-var(get-var(label-left-offset)),\n              get-var(label-top-offset)\n            );\n        }\n        @include use-var(background-color, label-active-background-color);\n        @include use-var(padding, label-active-padding);\n\n        transform: scale($label-floating-scale)\n          translate(get-var(label-left-offset), get-var(label-top-offset));\n        z-index: 1;\n      }\n    }\n\n    @if not $disable-label-gap {\n      &--gap {\n        gap: $label-gap;\n      }\n    }\n\n    @if not $disable-label-reversed {\n      &--reversed {\n        flex-direction: row-reverse;\n        // this makes it so the content is at the starting edge\n        justify-content: flex-end;\n      }\n    }\n\n    @if not $disable-label-stacked {\n      &--stacked {\n        flex-direction: column;\n      }\n    }\n\n    @if not $disable-label-stacked-reversed {\n      &--stacked-reversed {\n        flex-direction: column-reverse;\n      }\n    }\n  }\n}\n\n@mixin text-field-container-styles {\n  .rmd-text-field-container {\n    @include use-var(height, text-field-height);\n\n    align-items: center;\n    display: flex;\n    position: relative;\n\n    @if not $disable-text-field-container-dense {\n      &--dense {\n        @include set-var(text-field-height, $text-field-dense-height);\n      }\n\n      &--dense-label {\n        @include set-var(text-field-height, $text-field-label-dense-height);\n      }\n    }\n\n    &--inline {\n      display: inline-flex;\n    }\n\n    &--stretch {\n      flex: 1 1 auto;\n      width: 100%;\n    }\n\n    &--label {\n      @include set-var(text-field-height, $text-field-label-height);\n    }\n\n    &--error {\n      @if not $disable-text-field-addon {\n        @include icon.set-var(color, currentcolor);\n      }\n      @include set-var(active-color, currentcolor);\n      @include set-var(focus-color, currentcolor);\n\n      @if not\n        $disable-text-field-underlined-theme or not\n        $disable-text-field-outlined-theme\n      {\n        @include set-var(\n          text-field-border-color,\n          theme.theme-get-var(error-color)\n        );\n        @include set-var(\n          text-field-hover-border-color,\n          theme.theme-get-var(error-color)\n        );\n      }\n    }\n\n    &--hoverable:hover {\n      @include set-var(\n        text-field-border-color,\n        get-var(text-field-hover-border-color)\n      );\n    }\n\n    @if not $disable-text-field-outlined-theme {\n      &--outline {\n        @include set-var(text-field-padding-left, $text-field-outlined-padding);\n        @include set-var(\n          text-field-padding-right,\n          $text-field-outlined-padding\n        );\n        @include set-var(\n          label-left-offset,\n          $text-field-outlined-padding - $label-floating-padding\n        );\n        @include set-var(label-top-offset, -50%);\n        @include set-var(label-active-padding, 0 $label-floating-padding);\n        @include set-var(\n          label-active-background-color,\n          theme.theme-get-var(background-color)\n        );\n        @include use-var(border-color, text-field-border-color);\n\n        border-radius: $text-field-border-radius;\n        border-style: solid;\n        border-width: $text-field-border-width;\n\n        &::after {\n          @include utils.pseudo-element;\n\n          box-shadow: 0\n            0\n            0\n            $text-field-border-width-active\n            get-var(focus-color);\n          opacity: 0;\n          transition: opacity transition.$linear-duration;\n        }\n      }\n\n      &--outline:focus-within::after,\n      &--outline-active::after {\n        opacity: 1;\n      }\n\n      &--outline-left {\n        $distance: calc(\n          #{icon.get-var(size)} +\n            #{$text-field-outlined-padding +\n            $text-field-spacing}\n        );\n\n        @include set-var(text-field-padding-left, $distance);\n      }\n\n      &--outline-right {\n        $distance: calc(#{icon.get-var(size)} + #{$text-field-spacing * 2});\n\n        @include set-var(text-field-padding-right, $distance);\n      }\n    }\n\n    @if not $disable-text-field-filled-theme {\n      &--filled {\n        @include set-var(text-field-padding-left, $text-field-filled-padding);\n        @include set-var(text-field-padding-right, $text-field-filled-padding);\n        @include set-var(label-left-offset, $text-field-filled-padding);\n        @include use-var(background-color, text-field-filled-color);\n      }\n    }\n\n    // the filled theme uses the same styles as underline\n    @if not\n      $disable-text-field-underlined-theme or not\n      $disable-text-field-filled-theme\n    {\n      &--underline {\n        @include use-var(border-color, text-field-border-color);\n\n        border-bottom-style: solid;\n        border-bottom-width: $text-field-border-width;\n\n        @if $text-field-underlined-padding {\n          @include set-var(\n            text-field-padding-left,\n            $text-field-underlined-padding\n          );\n          @include set-var(\n            text-field-padding-right,\n            $text-field-underlined-padding\n          );\n        }\n\n        &::after {\n          @include use-var(background-color, focus-color);\n\n          bottom: -$text-field-border-width;\n          content: "";\n          height: $text-field-border-width-active;\n          left: 0;\n          position: absolute;\n          right: 0;\n          transform: scale(0);\n          transition: transform\n            transition.$linear-duration\n            transition.$linear-timing-function;\n          z-index: 1;\n        }\n      }\n\n      @if $text-field-underlined-placeholder-height {\n        &--underline-placeholder {\n          @include set-var(\n            text-field-padding-top,\n            $text-field-underlined-placeholder-addon-padding-top\n          );\n          height: $text-field-underlined-placeholder-height;\n        }\n\n        &--underline-placeholder-only {\n          @include set-var(\n            text-field-padding-top,\n            $text-field-underlined-placeholder-padding-top\n          );\n        }\n      }\n\n      &--underline-labelled {\n        @include set-var(\n          text-field-padding-top,\n          $text-field-underlined-label-padding-top\n        );\n        @include set-var(addon-margin-top, $text-field-addon-margin);\n      }\n\n      @if not $disable-text-field-underline-left {\n        &--underline-left::after {\n          transform-origin: left;\n        }\n      }\n\n      @if not $disable-text-field-underline-center {\n        &--underline-center::after {\n          transform-origin: center;\n        }\n      }\n\n      @if not $disable-text-field-underline-right {\n        &--underline-right::after {\n          transform-origin: right;\n        }\n      }\n\n      &:focus-within::after,\n      &--underline-active::after {\n        transform: scale(1);\n      }\n\n      @if not $disable-text-field-addon {\n        $addon-offset: "#{icon.get-var(size)} + #{$text-field-underlined-label-left-offset * 2}";\n        @if $text-field-underlined-padding {\n          $addon-offset: "#{$addon-offset} + #{$text-field-underlined-padding}";\n        }\n\n        &--underline-left-addon {\n          @include set-var(text-field-padding-left, calc(#{$addon-offset}));\n        }\n\n        &--underline-right-addon {\n          @include set-var(text-field-padding-right, calc(#{$addon-offset}));\n        }\n      }\n    }\n  }\n}\n\n@mixin _text-field-base-styles {\n  @include utils.map-to-styles($text-field-typography);\n  @include utils.rtl {\n    @include use-var(padding-left, text-field-padding-right);\n    @include use-var(padding-right, text-field-padding-left);\n  }\n  @include use-var(padding-left, text-field-padding-left);\n  @include use-var(padding-right, text-field-padding-right);\n  @include use-var(padding-top, text-field-padding-top);\n\n  background-color: transparent;\n  border-width: 0;\n  color: inherit;\n  flex: 1 1 auto;\n  height: 100%;\n  outline: none;\n  width: 100%;\n\n  &[disabled] {\n    @include theme.theme-use-var(color, text-disabled-color);\n  }\n}\n\n@mixin text-field-styles {\n  .rmd-text-field {\n    @include _text-field-base-styles;\n\n    @if $text-field-color-min-width {\n      &[type="color"] {\n        min-width: $text-field-color-min-width;\n      }\n    }\n\n    &::placeholder {\n      @if not $disable-placeholder-ellipsis {\n        @include typography.text-overflow;\n      }\n\n      @include theme.theme-use-var(color, text-secondary-color);\n      // want to gain the same font styles as the input/textarea itself,\n      // just apply different colors as needed instead. Can\'t just do font: inherit\n      // since it\'ll break the styles in firefox.\n      font-family: inherit;\n      font-size: inherit;\n      font-weight: inherit;\n\n      // fix firefox setting opacity to 0.54 by default\n      opacity: 1;\n\n      // Note: doesn\'t look like firefox applies css transitions to placeholder text?\n      transition: opacity transition.$linear-duration;\n    }\n\n    &[disabled]::placeholder {\n      color: inherit;\n    }\n\n    &--placeholder-hidden:not(:focus)::placeholder {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin password-styles {\n  .rmd-password {\n    @include set-var(\n      text-field-padding-right,\n      $password-visibility-toggle-spacing\n    );\n\n    &__input {\n      @include utils.auto-rtl(margin-right, button.get-var(icon-size));\n    }\n\n    &__toggle {\n      @include utils.auto-rtl(right, 0);\n\n      position: absolute;\n    }\n  }\n}\n\n@mixin textarea-container-styles {\n  .rmd-textarea-container {\n    @include set-var(addon-top, $textarea-addon-top);\n\n    height: auto;\n    max-width: 100%;\n    padding-top: calc(\n      #{get-var(text-field-padding-top)} + #{get-var(textarea-padding)}\n    );\n\n    &--cursor:hover {\n      // need to add this cursor back since the textarea container adds padding to\n      // itself instead of the textarea so it loses this cursor. the container\n      // element will still focus the textarea when clicked\n      cursor: text;\n    }\n\n    @if not\n      $disable-text-field-filled-theme or not\n      $disable-text-field-underlined-theme\n    {\n      &--underline-labelled {\n        @include set-var(textarea-padding, 0px);\n        @include set-var(\n          label-floating-top,\n          $text-field-underlined-label-padding-top\n        );\n      }\n    }\n\n    @if not $disable-textarea-resizing-rows {\n      &--height {\n        height: calc(\n          #{get-var(text-field-padding-top)} +\n            #{get-var(textarea-padding)} +\n            #{get-var(textarea-height)}\n        );\n      }\n\n      &--animate {\n        transition: height\n          transition.$linear-duration\n          transition.$linear-timing-function;\n      }\n\n      &__inner {\n        height: get-var(textarea-height, 100%);\n        width: 100%;\n\n        &--animate {\n          transition: height\n            transition.$linear-duration\n            transition.$linear-timing-function;\n        }\n      }\n    }\n  }\n}\n\n@mixin textarea-styles {\n  .rmd-textarea {\n    @include set-var(text-field-padding-top, 0px);\n    @include use-var(min-height, text-field-height);\n\n    height: get-var(textarea-height, 100%);\n\n    @if not $disable-textarea-resize-horizontal {\n      &--rh {\n        resize: horizontal;\n      }\n    }\n\n    @if not $disable-textarea-resize-vertical {\n      &--rv {\n        resize: vertical;\n      }\n    }\n\n    &--rn {\n      overflow: hidden;\n      resize: none;\n    }\n\n    // only want the textarea to be scrollable if there\'s a limit on the rows\n    // since it\'ll flash the scrollbar on most OS during the height transition\n    &--scrollable {\n      overflow: auto;\n    }\n\n    @if not $disable-textarea-resizing-mask {\n      &--mask {\n        height: auto;\n        left: 0;\n        opacity: 0;\n        overflow: hidden;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        z-index: -1;\n      }\n    }\n  }\n}\n\n@mixin select-styles {\n  .rmd-select-container {\n    outline-style: none;\n  }\n\n  .rmd-select-value {\n    @include _text-field-base-styles;\n\n    align-items: center;\n    display: flex;\n    gap: 0.5rem;\n    position: absolute;\n    white-space: nowrap;\n\n    &__v {\n      @include typography.text-overflow;\n    }\n  }\n\n  .rmd-select {\n    opacity: 0;\n    pointer-events: none;\n\n    // ALl these additional overrides are provided so that the select will have\n    // the same sizing as a text field with the same props provided.\n    @if not $disable-text-field-underlined-theme {\n      &--underline {\n        @include utils.rtl {\n          @include use-var(padding-right, text-field-padding-left);\n\n          padding-left: 0;\n        }\n\n        padding-right: 0;\n      }\n    }\n\n    @if not $disable-text-field-outlined-theme {\n      &--outline {\n        @include utils.rtl {\n          @include use-var(padding-right, text-field-padding-left);\n\n          padding-left: $text-field-outlined-padding;\n        }\n\n        padding-right: $text-field-outlined-padding;\n      }\n    }\n\n    @if not $disable-text-field-filled-theme {\n      &--filled {\n        @include utils.rtl {\n          @include use-var(padding-right, text-field-padding-left);\n\n          padding-left: $text-field-filled-padding;\n        }\n\n        padding-right: $text-field-filled-padding;\n      }\n    }\n  }\n}\n\n@mixin option-styles {\n  .rmd-option {\n    &--icon {\n      @include utils.rtl {\n        @include list.use-var(padding-left, item-horizontal-padding);\n\n        padding-right: $option-padding-left;\n      }\n\n      padding-left: $option-padding-left;\n    }\n\n    &--selected {\n      @include utils.map-to-styles($option-selected-styles);\n    }\n\n    &__icon {\n      @include icon.set-var(spacing, $option-selected-icon-spacing);\n      @include icon.set-var(size, $option-selected-icon-size);\n    }\n  }\n}\n\n@mixin native-select-styles {\n  @if not $disable-native-select-multiple {\n    .rmd-native-select-container {\n      &--multi {\n        @include set-var(addon-top, $native-select-addon-top);\n        @include use-var(min-height, text-field-height);\n\n        height: auto;\n      }\n\n      &--padded {\n        padding-top: $native-select-multiple-padding;\n      }\n\n      @if not\n        $disable-text-field-filled-theme or not\n        $disable-text-field-underlined-theme\n      {\n        &--underline {\n          @include set-var(text-field-padding-top, 0);\n        }\n\n        &--underline-padded {\n          padding-top: $native-select-multiple-underline-padding;\n        }\n      }\n    }\n  }\n\n  .rmd-native-select {\n    @include _text-field-base-styles;\n    @include typography.text-overflow;\n\n    appearance: none;\n\n    &[multiple] {\n      overflow: auto;\n    }\n  }\n}\n\n@mixin text-field-addon-styles {\n  .rmd-text-field-addon {\n    @if not\n      $disable-text-field-filled-theme or not\n      $disable-text-field-underlined-theme\n    {\n      @include use-var(margin-top, addon-margin-top);\n    }\n\n    // this makes it so that this container element is the same size as the\n    // child (normally icons). without this, icons would have a height of 30.5px\n    // and no longer be centered\n    display: inline-flex;\n    position: absolute;\n\n    // Note: Can\'t use `:first-child` and `:last-child` since\n    // password/autocomplete managers might add another element into the\n    // `.rmd-text-field-container` which would prevent these styles from being\n    // applied\n    &--before {\n      @include utils.auto-rtl(left, get-var(label-left-offset));\n    }\n\n    &--after {\n      @include utils.auto-rtl(right, $text-field-spacing);\n    }\n\n    &--presentational {\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin hidden-input-styles {\n  .rmd-hidden-input {\n    height: 100%;\n    inset: 0;\n    margin: 0;\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n    z-index: 1;\n\n    &:not(:disabled):hover {\n      cursor: pointer;\n    }\n  }\n}\n\n@mixin input-toggle-styles {\n  .rmd-input-toggle {\n    @include interaction.surface(\n      $focus-selector: "&:focus-within",\n      $disabled-selector: "&--disabled",\n      $higher-contrast: false\n    );\n    @include icon.set-var(color, currentcolor);\n\n    align-items: center;\n    border-radius: $input-toggle-border-radius;\n    display: inline-flex;\n    flex-shrink: 0;\n    justify-content: center;\n    padding: $input-toggle-padding;\n\n    &--em {\n      @include icon.set-var(size, 1em);\n    }\n\n    &--active {\n      @include use-var(color, active-color);\n    }\n\n    @if $input-toggle-small-size {\n      &--small {\n        font-size: $input-toggle-small-size;\n      }\n    }\n\n    @if $input-toggle-dense-size {\n      &--dense {\n        font-size: $input-toggle-dense-size;\n      }\n    }\n\n    @if $input-toggle-normal-size {\n      &--normal {\n        font-size: $input-toggle-normal-size;\n      }\n    }\n\n    @if $input-toggle-large-size {\n      &--large {\n        font-size: $input-toggle-large-size;\n      }\n    }\n\n    @if not $disable-uncontrolled-input-toggles {\n      &--uncontrolled {\n        $icon-color-selector: ".rmd-hidden-input:where(:checked:not(:disabled)) ~ .rmd-icon";\n        $unchecked-icon-selector: "~ :nth-child(-n + 1 of .rmd-icon)";\n        $checked-icon-selector: "~ :nth-child(n + 2 of .rmd-icon)";\n        // make sure the active color from the label also applies to the icon when\n        // checked\n        .rmd-label--active & #{$icon-color-selector} {\n          @include use-var(color, focus-color);\n        }\n\n        // make sure the error color applies to the icon when checked\n        &:where(:not(.rmd-error-color)) #{$icon-color-selector} {\n          @include use-var(color, active-color);\n        }\n\n        // when the input is checked, hide the first icon (unchecked state)\n        // when the input is not checked, hide the second icon (checked state)\n        .rmd-hidden-input:checked #{$unchecked-icon-selector},\n        .rmd-hidden-input:not(:checked) #{$checked-icon-selector} {\n          opacity: 0;\n          position: absolute;\n        }\n      }\n    }\n  }\n}\n\n@mixin switch-styles {\n  .rmd-switch {\n    padding: $switch-track-vertical-padding $switch-track-horizontal-padding;\n\n    &--clickable:hover {\n      cursor: pointer;\n    }\n\n    &--current-color,\n    &--current-color .rmd-switch__input:checked + .rmd-switch__ball {\n      @include set-var(switch-ball-background-color, currentcolor);\n    }\n\n    &__input {\n      @include utils.keyboard-only {\n        &:focus + .rmd-switch__ball::before {\n          @include interaction.focus-styles;\n        }\n      }\n\n      &:disabled + .rmd-switch__ball {\n        cursor: auto;\n\n        &:hover::before {\n          @include interaction.set-var(background-color, transparent);\n        }\n      }\n    }\n\n    &__track {\n      @if not $disable-switch-circular-progress {\n        @include progress.set-var(\n          circular-stroke-width,\n          $switch-circular-progress-width\n        );\n        @include progress.set-var(\n          circular-size,\n          $switch-circular-progress-size\n        );\n      }\n      @if not $disable-switch-icon {\n        @include icon.set-var(size, $switch-icon-size);\n      }\n      @include use-var(background-color, switch-track-background-color);\n\n      border-radius: $switch-track-border-radius;\n      height: $switch-track-height;\n      position: relative;\n      transition: background-color transition.$linear-duration\n        transition.$linear-timing-function;\n      width: $switch-track-width;\n\n      &--disabled {\n        opacity: $switch-disabled-opacity;\n      }\n    }\n\n    &__ball {\n      // The focus and disabled states are handled by the `.rmd-switch__input`\'s\n      // :focus and :disabled\' states instead.\n      @include interaction.surface(\n        $focus-selector: null,\n        $disabled-selector: null,\n        $clickable: false\n      );\n      @include utils.auto-rtl(left, calc(-50% + #{$switch-ball-offset}));\n\n      align-items: center;\n      border-radius: $switch-ball-border-radius;\n      display: flex;\n      height: $switch-ball-size * 2;\n      justify-content: center;\n      top: calc(-50% - #{$switch-ball-size - $switch-track-height});\n      transition-duration: transition.$linear-duration;\n      transition-property: background-color, transform;\n      transition-timing-function: transition.$linear-timing-function;\n      width: $switch-ball-size * 2;\n      z-index: 1;\n\n      &::after {\n        @include use-var(background-color, switch-ball-background-color);\n\n        border-radius: inherit;\n        box-shadow: box-shadows.box-shadow(1);\n        content: "";\n        height: $switch-ball-size;\n        left: 25%;\n        pointer-events: none;\n        position: absolute;\n        top: 25%;\n        width: $switch-ball-size;\n        z-index: 0;\n      }\n\n      $active-selector: ".rmd-switch__input:checked + &" +\n        if($disable-menu-item-switch, "", ", &--active");\n\n      #{$active-selector} {\n        $offset: $switch-ball-size + $switch-ball-offset;\n\n        @include utils.rtl {\n          transform: translateX(-$offset);\n        }\n        @include set-var(switch-ball-background-color, get-var(active-color));\n\n        transform: translateX($offset);\n      }\n    }\n  }\n}\n\n@mixin menu-item-input-toggle-styles {\n  .rmd-menu-item-input-toggle {\n    @if not $disable-menu-item-radio or not $disable-menu-item-switch {\n      &__icon {\n        // remove the padding since the icon isn\'t the click target anymore.\n        padding: 0;\n\n        // disable the hover states since it\'s handled by the ListItem instead\n        &::before {\n          content: none;\n        }\n      }\n    }\n\n    @if not $disable-menu-item-switch {\n      // this makes it so that the spacing between the switch and the text\n      // aligns with other menu items/icons\n      &__track {\n        @include icon.set-var(size, $switch-track-width);\n      }\n\n      // decrease the ball size and remove the hover states since it\'s handled\n      // by the ListItem instead. without decreasing the ball size, horizontal\n      // scrollbars will appear when the switch is checked\n      &__ball {\n        @include utils.auto-rtl(left, -$switch-ball-offset);\n\n        height: $switch-ball-size;\n        top: calc(50% - $switch-ball-size * 0.5);\n        width: $switch-ball-size;\n\n        &::before {\n          content: none;\n        }\n\n        &::after {\n          inset: 0;\n        }\n      }\n    }\n  }\n}\n\n@mixin slider-styles {\n  .rmd-slider-container {\n    @if $slider-container-addon-spacing and\n      $slider-container-addon-spacing !=\n      icon.$spacing\n    {\n      @include icon.set-var(spacing, $slider-container-addon-spacing);\n    }\n\n    @include icon.use-var(gap, spacing);\n\n    align-items: center;\n\n    @if not $disable-horizontal-slider {\n      &--h {\n        display: flex;\n        width: 100%;\n      }\n\n      &--pad-left {\n        padding-left: $slider-container-padding;\n      }\n\n      &--pad-right {\n        padding-right: $slider-container-padding;\n      }\n    }\n\n    @if not $disable-vertical-slider {\n      &--v {\n        display: inline-flex;\n        flex-direction: column-reverse;\n      }\n\n      &--pad-top {\n        padding-top: $slider-container-padding;\n      }\n\n      &--pad-bottom {\n        padding-bottom: $slider-container-padding;\n      }\n    }\n  }\n\n  .rmd-slider-track {\n    position: relative;\n\n    &::before,\n    &::after {\n      @if $slider-track-color {\n        @include use-var(background-color, slider-color);\n      }\n\n      content: "";\n      pointer-events: none;\n      position: absolute;\n    }\n\n    &::before {\n      @if not $slider-track-color {\n        @include use-var(background-color, slider-inactive-color);\n      }\n\n      opacity: $slider-track-inactive-opacity;\n      z-index: $slider-track-inactive-z-index;\n    }\n\n    &::after {\n      @if not $slider-track-color {\n        @include use-var(background-color, slider-active-color);\n      }\n\n      opacity: $slider-track-active-opacity;\n      z-index: $slider-track-active-z-index;\n    }\n\n    &--hoverable:hover {\n      cursor: pointer;\n    }\n\n    &--animate::after {\n      transition-duration: $slider-transition-duration;\n      transition-timing-function: $slider-transition-timing-function;\n    }\n\n    @if $slider-track-color {\n      &--disabled {\n        @include set-var(slider-color, $slider-track-disabled-color);\n\n        @if $slider-track-inactive-opacity {\n          &::before {\n            opacity: 1;\n          }\n        }\n\n        &::after {\n          @include set-var(slider-active-size, 0px);\n          @if $slider-track-active-opacity {\n            opacity: 1;\n          }\n        }\n      }\n    }\n\n    @if not $disable-horizontal-slider {\n      &--h {\n        @include use-var(height, slider-size);\n\n        align-items: center;\n        display: flex;\n        width: 100%;\n\n        &::before {\n          @include use-var(height, slider-inactive-size);\n\n          width: 100%;\n        }\n\n        &::after {\n          @include use-var(height, slider-active-size);\n        }\n      }\n\n      &--h1::after {\n        @include utils.auto-rtl(left, 0);\n        @include use-var(max-width, slider-offset-1);\n\n        transition-property: max-width;\n        width: 100%;\n      }\n\n      @if not $disable-range-slider {\n        &--h2::after {\n          @include utils.rtl {\n            left: calc(100% - get-var(slider-offset-2));\n            right: get-var(slider-offset-1);\n          }\n\n          left: get-var(slider-offset-1);\n          right: calc(100% - get-var(slider-offset-2));\n          transition-property: left, right;\n          will-change: left, right;\n        }\n      }\n    }\n\n    @if not $disable-vertical-slider {\n      &--v {\n        @include use-var(height, slider-vertical-size);\n        @include use-var(width, slider-size);\n\n        display: inline-flex;\n        justify-content: center;\n\n        &::before {\n          @include use-var(width, slider-inactive-size);\n\n          height: 100%;\n        }\n\n        &::after {\n          @include use-var(width, slider-active-size);\n\n          bottom: 0;\n        }\n      }\n\n      // one thumb track horizontal styles\n      &--v1::after {\n        @include use-var(max-height, slider-offset-1);\n\n        height: 100%;\n        transition-property: max-height;\n      }\n\n      @if not $disable-range-slider {\n        // two thumb track horizontal styles\n        &--v2::after {\n          @include use-var(bottom, slider-offset-1);\n\n          top: calc(100% - #{get-var(slider-offset-2)});\n          transition-property: bottom, top;\n          will-change: bottom, top;\n        }\n      }\n    }\n  }\n\n  .rmd-slider-thumb {\n    @include use-var(\n      background-color,\n      if($slider-track-color, slider-color, slider-active-color)\n    );\n    @include utils.keyboard-only {\n      &:focus::after {\n        transform: scale($slider-thumb-focus-scale);\n      }\n    }\n    @include utils.touch-only {\n      &:hover::after,\n      &--active:after,\n      &--active:hover::after {\n        transform: none;\n      }\n    }\n\n    border-radius: $slider-thumb-border-radius;\n    height: $slider-thumb-size;\n    outline-style: none;\n    position: absolute;\n    width: $slider-thumb-size;\n    z-index: $slider-thumb-z-index;\n\n    &::after {\n      @include utils.pseudo-element($z-index: null);\n\n      background-color: inherit;\n      opacity: $slider-thumb-bubble-opacity;\n      transition: transform $slider-transition-duration\n        $slider-transition-timing-function;\n    }\n\n    &:hover::after {\n      transform: scale($slider-thumb-focus-scale);\n    }\n\n    &--active::after,\n    &--active:hover::after {\n      transform: scale($slider-thumb-active-scale);\n    }\n\n    &--animate {\n      transition-duration: $slider-transition-duration;\n      transition-timing-function: $slider-transition-timing-function;\n    }\n\n    &--disabled {\n      background-color: $slider-thumb-disabled-color;\n\n      // prevent hover effects like the "bubble"\n      pointer-events: none;\n    }\n\n    &--mask {\n      @include theme.theme-use-var(background-color);\n\n      border-radius: 0;\n    }\n\n    @if not $disable-horizontal-slider {\n      &--h {\n        @include utils.rtl {\n          transform: translateX(50%);\n          transition-property: right;\n        }\n\n        transform: translateX(-50%);\n        transition-property: left;\n      }\n\n      &--h1 {\n        @include utils.auto-rtl(left, get-var(slider-offset-1));\n      }\n\n      @if not $disable-range-slider {\n        &--h2 {\n          @include utils.auto-rtl(left, get-var(slider-offset-2));\n        }\n      }\n\n      &--disabled-h {\n        @include utils.rtl {\n          transform: translateX(50%) scale($slider-thumb-disabled-scale);\n        }\n\n        transform: translateX(-50%) scale($slider-thumb-disabled-scale);\n      }\n\n      &--mask-h {\n        @include utils.rtl {\n          transform: translateX(50%) scale($slider-thumb-mask-scale);\n        }\n\n        transform: translateX(-50%) scale($slider-thumb-mask-scale);\n      }\n    }\n\n    @if not $disable-vertical-slider {\n      &--v {\n        // want the thumb to be aligned so that the center is at the current value.\n        // without this transformation, the thumb\'s bottom side would be aligned\n        // with the current value\n        transform: translateY(50%);\n        transition-property: bottom;\n      }\n\n      &--v1 {\n        @include use-var(bottom, slider-offset-1);\n      }\n\n      @if not $disable-range-slider {\n        &--v2 {\n          @include use-var(bottom, slider-offset-2);\n        }\n      }\n\n      &--disabled-v {\n        transform: translateY(50%) scale($slider-thumb-disabled-scale);\n      }\n\n      &--mask-v {\n        transform: translateY(50%) scale($slider-thumb-mask-scale);\n      }\n    }\n\n    &__input {\n      appearance: none;\n      height: 0;\n      opacity: 0;\n      pointer-events: none;\n      width: 0;\n    }\n  }\n\n  @if not $disable-discrete-slider {\n    .rmd-slider-tooltip {\n      opacity: 1;\n      position: absolute;\n      z-index: $slider-tooltip-z-index;\n\n      // this is used to generate the triangle\n      &::after {\n        border: $slider-tooltip-caret-size solid transparent;\n        content: "";\n        position: absolute;\n      }\n\n      &--animate {\n        transition: transform\n          $slider-transition-duration\n          $slider-transition-timing-function;\n      }\n\n      @if not $disable-horizontal-slider {\n        &--h {\n          @include utils.rtl {\n            @include set-var(slider-tooltip-translate, 50%);\n          }\n\n          top: $slider-tooltip-offset;\n          transform: translateX(get-var(slider-tooltip-translate))\n            scale(get-var(slider-tooltip-scale));\n\n          &::after {\n            @include tooltip.use-var(border-top-color, background-color);\n\n            left: 50%;\n            top: 100%;\n            transform: translateX(get-var(slider-tooltip-translate));\n          }\n        }\n\n        &--h-off {\n          @include set-var(slider-tooltip-scale, 0);\n        }\n\n        // have to "duplicate" these styles since the `--h-off` would override the\n        // `--h` styles due to css order.\n        &--h-on {\n          @include set-var(slider-tooltip-scale, 1);\n        }\n      }\n\n      @if not $disable-vertical-slider {\n        &--v {\n          // going to force rendering always to the left even in RTL languages\n          left: $slider-tooltip-offset;\n          transform: translateY(50%) scale(1);\n\n          &::after {\n            @include tooltip.use-var(border-left-color, background-color);\n\n            left: 100%;\n            top: 50%;\n            transform: translateY(-50%);\n          }\n        }\n\n        &--v-off {\n          transform: translateY(50%) scale(0);\n        }\n\n        // have to "duplicate" these styles since the `--v-off` would override the\n        // `--v` styles due to css order.\n        &--v-on {\n          transform: translateY(50%) scale(1);\n        }\n      }\n    }\n  }\n\n  @if not $disable-discrete-slider-marks {\n    .rmd-slider-mark {\n      border-radius: $slider-mark-border-radius;\n      position: absolute;\n\n      &--inactive {\n        @include use-var(background-color, slider-mark-inactive-color);\n        @include use-var(opacity, slider-mark-inactive-opacity);\n\n        z-index: $slider-mark-inactive-z-index;\n      }\n\n      &--active {\n        @include use-var(background-color, slider-mark-active-color);\n        @include use-var(opacity, slider-mark-active-opacity);\n\n        z-index: $slider-mark-active-z-index;\n      }\n\n      @if not $disable-horizontal-slider {\n        &--h {\n          @include utils.auto-rtl(left, get-var(slider-mark-offset));\n\n          height: $slider-mark-height;\n          top: 50%;\n          transform: translateY(-50%);\n          width: $slider-mark-width;\n        }\n      }\n\n      @if not $disable-vertical-slider {\n        &--v {\n          bottom: get-var(slider-mark-offset);\n          height: $slider-mark-width;\n          transform: translateY(50%);\n          width: $slider-mark-height;\n        }\n      }\n    }\n  }\n\n  @if not $disable-discrete-slider-marks-labels {\n    .rmd-slider-mark-label {\n      position: absolute;\n\n      @if not $disable-horizontal-slider {\n        &--h {\n          @include utils.rtl {\n            @include use-var(right, slider-mark-offset);\n\n            left: auto;\n            transform: translateX(50%);\n          }\n          @include use-var(left, slider-mark-offset);\n\n          top: 100%;\n          transform: translateX(-50%);\n        }\n      }\n\n      @if not $disable-vertical-slider {\n        &--v {\n          @include utils.auto-rtl(left, 100%);\n\n          top: get-var(slider-mark-offset);\n          transform: translateY(-50%);\n        }\n      }\n    }\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(active-color, $active-color);\n    @include set-var(focus-color, $focus-color);\n\n    @if not $disable-label and not $disable-floating-label {\n      @include set-var(label-floating-top, $label-floating-top);\n      @include set-var(label-left-offset, 0px);\n      @include set-var(label-top-offset, 0px);\n      @include set-var(label-active-padding, 0px);\n      @include set-var(label-active-background-color, transparent);\n    }\n\n    @if not $disable-text-field {\n      @include set-var(text-field-height, $text-field-height);\n      @include set-var(text-field-padding-left, 0px);\n      @include set-var(text-field-padding-right, 0px);\n      @include set-var(text-field-padding-top, 0px);\n      @include set-var(text-field-border-color, $text-field-border-color);\n      @include set-var(\n        text-field-hover-border-color,\n        $text-field-hover-border-color\n      );\n\n      @include set-var(\n        text-field-filled-color,\n        $text-field-filled-background-color\n      );\n    }\n\n    @if not $disable-textarea {\n      @include set-var(textarea-height, $text-field-height);\n      @include set-var(textarea-padding, $textarea-vertical-padding);\n    }\n\n    @if not $disable-text-field-addon {\n      @include set-var(addon-top, auto);\n      @include set-var(addon-margin-top, 0px);\n    }\n\n    @if not $disable-switch {\n      @include set-var(\n        switch-track-background-color,\n        $switch-track-background-color\n      );\n      @include set-var(\n        switch-ball-background-color,\n        $switch-ball-background-color\n      );\n    }\n\n    @if not $disable-slider {\n      @include set-var(slider-color, $slider-track-color);\n      @include set-var(slider-active-color, $slider-track-active-color);\n      @include set-var(slider-inactive-color, $slider-track-inactive-color);\n      @include set-var(slider-size, $slider-size);\n      @include set-var(slider-active-size, $slider-track-active-size);\n      @include set-var(slider-inactive-size, $slider-track-inactive-size);\n      @if not $disable-discrete-slider {\n        @include set-var(slider-tooltip-scale, 1);\n        @include set-var(slider-tooltip-translate, -50%);\n\n        @if not $disable-discrete-slider-marks {\n          @include set-var(slider-mark-offset, 0%);\n          @include set-var(slider-mark-active-color, $slider-mark-active-color);\n          @include set-var(\n            slider-mark-active-opacity,\n            $slider-mark-active-opacity\n          );\n          @include set-var(\n            slider-mark-inactive-color,\n            $slider-mark-inactive-color\n          );\n          @include set-var(\n            slider-mark-inactive-opacity,\n            $slider-mark-inactive-opacity\n          );\n        }\n      }\n\n      @if not $disable-vertical-slider {\n        @include set-var(slider-vertical-size, $slider-vertical-size);\n      }\n    }\n  }\n}\n\n@mixin styles {\n  @include theme.default-system-theme {\n    @include use-dark-theme;\n  }\n\n  @if not $disable-fieldset {\n    .rmd-fieldset {\n      &--unstyled {\n        border: 0;\n        margin: 0;\n        min-width: 0; // just so it can shrink correctly in flex or grid\n        padding: 0;\n      }\n\n      &--full-width {\n        flex: 1 1 auto;\n        width: 100%;\n      }\n    }\n  }\n\n  @if not $disable-label {\n    @include label-styles;\n  }\n\n  @if not $disable-file-input {\n    @include file-input-styles;\n  }\n\n  @if not $disable-message {\n    @include form-message-styles;\n  }\n\n  @if not $_disable-text-field-container {\n    @include text-field-container-styles;\n  }\n\n  @if not $disable-text-field or not $disable-password or not $disable-textarea\n  {\n    @include text-field-styles;\n  }\n\n  @if not $disable-password {\n    @include password-styles;\n  }\n\n  @if not $disable-textarea {\n    @include textarea-container-styles;\n    @include textarea-styles;\n  }\n\n  @if not $disable-select {\n    @include select-styles;\n  }\n\n  @if not $disable-option {\n    @include option-styles;\n  }\n\n  @if not $disable-native-select {\n    @include native-select-styles;\n  }\n\n  @if not $disable-text-field-addon {\n    @include text-field-addon-styles;\n  }\n\n  @if not $disable-checkbox or not $disable-radio or not $disable-switch {\n    @include hidden-input-styles;\n    @include input-toggle-styles;\n  }\n\n  @if not $disable-switch {\n    @include switch-styles;\n  }\n\n  @if not\n    $disable-menu-item-checkbox or not\n    $disable-menu-item-radio or not\n    $disable-menu-item-switch\n  {\n    @include menu-item-input-toggle-styles;\n  }\n\n  @if not $disable-slider {\n    @include slider-styles;\n  }\n}\n',
  "@react-md/icon/icon":
    '@use "sass:color";\n@use "../theme/theme";\n@use "../transition/transition";\n@use "../utils";\n\n$disable-font: false !default;\n$disable-svg: false !default;\n$disable-symbol: false !default;\n$disable-dense: false !default;\n$disable-inline: false !default;\n$disable-spacing-before: false !default;\n$disable-spacing-after: false !default;\n$disable-spacing-above: false !default;\n$disable-spacing-below: false !default;\n$disable-rotator: false !default;\n\n$light-theme-color: color.adjust(#000, $lightness: 46%) !default;\n$dark-theme-color: color.adjust(#fff, $lightness: -30%) !default;\n\n$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;\n\n$size: 1.5rem !default;\n$dense-size: 1.25rem !default;\n\n$symbol-fill: 0 !default;\n$symbol-weight: 400 !default;\n$symbol-grade: 0 !default;\n$symbol-optical-size: 48 !default;\n\n$_validated-fill: utils.validate((0, 1), $symbol-fill, "$symbol-fill");\n$_validated_weight: utils.validate(\n  (100 200 300 400 500 600 700),\n  $symbol-weight,\n  "$symbol-weight"\n);\n$_validated_grade: utils.validate((-25 0 200), $symbol-grade, "$symbol-grade");\n$_validated_optical-size: utils.validate(\n  (20 24 40 48),\n  $symbol-optical-size,\n  "$symbol-optical-size"\n);\n\n$spacing: 0.5rem !default;\n\n$rotate-from: 0deg !default;\n$rotate-to: 180deg !default;\n$rotate-duration: transition.$linear-duration !default;\n\n$variables: (\n  color,\n  size,\n  spacing,\n  rotate-from,\n  rotate-to,\n  symbol-fill,\n  symbol-grade,\n  symbol-weight,\n  symbol-optical-size\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "icon");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "icon")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-font or not $disable-svg {\n    @include set-var(color, $light-theme-color);\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-font or not $disable-svg {\n    @include set-var(color, $dark-theme-color);\n  }\n}\n\n@mixin dense {\n  @if $dense-size {\n    @include set-var(size, $dense-size);\n  }\n}\n\n@mixin variables {\n  @if not $disable-font or not $disable-svg or not $disable-symbol {\n    @include set-var(color, $color);\n    @include set-var(size, $size);\n    @include set-var(spacing, $spacing);\n  }\n\n  @if not $disable-symbol {\n    @include set-var(symbol-fill, $symbol-fill);\n    @include set-var(symbol-grade, $symbol-grade);\n    @include set-var(symbol-weight, $symbol-weight);\n    @include set-var(symbol-optical-size, $symbol-optical-size);\n  }\n\n  @if not $disable-rotator {\n    @include set-var(rotate-from, $rotate-from);\n    @include set-var(rotate-to, $rotate-to);\n  }\n}\n\n@mixin styles {\n  // shouldn\'t really use react-md without icons though...\n  @if not $disable-font or not $disable-svg and not $disable-symbol {\n    @include theme.default-system-theme {\n      @include use-dark-theme;\n    }\n\n    .rmd-icon {\n      @include use-var(font-size, size);\n      @include use-var(color);\n\n      // you normally don\'t want icons to shrink in flex containers.\n      // update the icon manually instead.\n      flex-shrink: 0;\n      user-select: none;\n\n      @if not $disable-font {\n        &--font {\n          text-align: center;\n        }\n      }\n\n      @if not $disable-svg {\n        &--svg {\n          fill: currentcolor;\n          height: 1em;\n          width: 1em;\n        }\n      }\n\n      @if not $disable-symbol {\n        &--symbol {\n          font-variation-settings:\n            "FILL" get-var(symbol-fill),\n            "wght" get-var(symbol-weight),\n            "GRAD" get-var(symbol-grade),\n            "opsz" get-var(symbol-optical-size);\n        }\n      }\n\n      @if not $disable-inline {\n        &--vab {\n          vertical-align: bottom;\n        }\n      }\n\n      @if not $disable-spacing-before {\n        &--before {\n          @include utils.auto-rtl(margin-right, get-var(spacing), 0);\n        }\n      }\n\n      @if not $disable-spacing-after {\n        &--after {\n          @include utils.auto-rtl(margin-left, get-var(spacing), 0);\n        }\n      }\n\n      @if not $disable-spacing-above {\n        &--above {\n          @include use-var(margin-bottom, spacing);\n        }\n      }\n\n      @if not $disable-spacing-below {\n        &--below {\n          @include use-var(margin-top, spacing);\n        }\n      }\n\n      @if not $disable-dense {\n        &--dense {\n          @include set-var(size, $dense-size);\n        }\n      }\n    }\n  }\n\n  @if not $disable-rotator {\n    .rmd-icon-rotator {\n      transform: rotate(get-var(rotate-from));\n\n      &--animate {\n        transition: transform $rotate-duration linear;\n      }\n\n      &--rotated {\n        transform: rotate(get-var(rotate-to));\n      }\n    }\n  }\n}\n',
  "@react-md/interaction/interaction":
    '@use "sass:map";\n@use "sass:list";\n@use "../utils";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../transition/transition";\n\n/// ripple | press | both | null\n$mode: ripple !default;\n$disable-outline-offset: false !default;\n$disable-focus-background: false !default;\n$disable-ripple-inset-var: false !default;\n$disable-ripple-border-radius-var: false !default;\n$disable-surface-inset-var: false !default;\n$disable-surface-border-radius-var: false !default;\n\n$_disable-ripple: not\n  list.index(\n    (ripple, both),\n    utils.validate((ripple, press, both, null), $mode, "interaction mode")\n  );\n\n$pressed-class-name: "rmd-pressed";\n\n/// Setting this value to `true` will update the styles for all interactable\n/// elements so that the different interaction states no longer cover the other\n/// content within the element by applying:\n///\n/// ```scss\n/// > * {\n///   z-index: 1;\n/// }\n/// ```\n///\n/// This helps improve the legibility of the content since the normal\n/// interaction states apply an overlay with some opacity for the different\n/// states.\n$disable-higher-contrast: false !default;\n$light-surface-base-background-color: #000 !default;\n$dark-surface-base-background-color: #fff !default;\n\n$focus-color: colors.$blue-500 !default;\n$focus-width: 0.125rem !default;\n$focus-box-shadow: false !default;\n\n$light-surface-ripple-background-color: rgba(\n  $light-surface-base-background-color,\n  0.08\n) !default;\n$dark-surface-ripple-background-color: rgba(\n  $dark-surface-base-background-color,\n  0.12\n) !default;\n$ripple-background-color: theme.get-default-color(\n  $light-surface-ripple-background-color,\n  $dark-surface-ripple-background-color\n) !default;\n$ripple-transform-duration: 0.45s !default;\n$ripple-opacity-duration: 0.3s !default;\n\n$light-surface-hover-opacity: 0.08 !default;\n$light-surface-focus-opacity: 0.24 !default;\n$light-surface-press-opacity: 0.32 !default;\n$light-surface-selected-opacity: 0.16 !default;\n$light-surface-hover-background-color: rgba(\n  $light-surface-base-background-color,\n  $light-surface-hover-opacity\n) !default;\n$light-surface-focus-background-color: rgba(\n  $light-surface-base-background-color,\n  $light-surface-focus-opacity\n) !default;\n$light-surface-press-background-color: rgba(\n  $light-surface-base-background-color,\n  $light-surface-press-opacity\n) !default;\n$light-surface-selected-background-color: rgba(\n  $light-surface-base-background-color,\n  $light-surface-selected-opacity\n) !default;\n\n$dark-surface-hover-opacity: 0.1 !default;\n$dark-surface-focus-opacity: 0.12 !default;\n$dark-surface-press-opacity: 0.24 !default;\n$dark-surface-selected-opacity: 0.12 !default;\n$dark-surface-hover-background-color: rgba(\n  $dark-surface-base-background-color,\n  $dark-surface-hover-opacity\n) !default;\n$dark-surface-focus-background-color: rgba(\n  $dark-surface-base-background-color,\n  $dark-surface-focus-opacity\n) !default;\n$dark-surface-press-background-color: rgba(\n  $dark-surface-base-background-color,\n  $dark-surface-press-opacity\n) !default;\n$dark-surface-selected-background-color: rgba(\n  $dark-surface-base-background-color,\n  $dark-surface-selected-opacity\n) !default;\n\n$hover-background-color: theme.get-default-color(\n  $light-surface-hover-background-color,\n  $dark-surface-hover-background-color\n) !default;\n$focus-background-color: theme.get-default-color(\n  $light-surface-focus-background-color,\n  $dark-surface-focus-background-color\n) !default;\n$press-background-color: theme.get-default-color(\n  $light-surface-press-background-color,\n  $dark-surface-press-background-color\n) !default;\n$selected-background-color: theme.get-default-color(\n  $light-surface-selected-background-color,\n  $dark-surface-selected-background-color\n) !default;\n\n$variables: (\n  background-color,\n  hover-background-color,\n  focus-background-color,\n  press-background-color,\n  selected-background-color,\n  focus-color,\n  focus-width,\n  ripple-inset,\n  ripple-border-radius,\n  ripple-background-color,\n  surface-inset,\n  surface-border-radius\n);\n\n@function _is-var-disabled($name) {\n  @if $name == ripple-inset {\n    @return $disable-ripple-inset-var;\n  }\n\n  @if $name == ripple-border-radius {\n    @return $disable-ripple-border-radius-var;\n  }\n\n  @if $name == surface-inset {\n    @return $disable-surface-inset-var;\n  }\n\n  @if $name == surface-border-radius {\n    @return $disable-surface-border-radius-var;\n  }\n\n  @return false;\n}\n\n@function get-var($name, $fallback: null) {\n  // cannot set a custom property to `inherit` for some reason. It will not be parsed.\n  @if not\n    $fallback and\n    ($name == ripple-border-radius or $name == surface-border-radius)\n  {\n    $fallback: inherit;\n  }\n\n  @if _is-var-disabled($name) {\n    @return $fallback;\n  }\n\n  $var: utils.get-var-name($variables, $name, "interaction");\n\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if _is-var-disabled($name) {\n    @error \'"#{$name}" is currently disabled and cannot be changed. Set "$disable-#{$name}-var" to `true` or remove it from the Sass module overrides.\';\n  }\n\n  @if $value {\n    #{utils.get-var-name($variables, $name, "interaction")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-surface {\n  @include set-var(\n    hover-background-color,\n    $light-surface-hover-background-color\n  );\n  @include set-var(\n    focus-background-color,\n    $light-surface-focus-background-color\n  );\n  @include set-var(\n    press-background-color,\n    $light-surface-press-background-color\n  );\n  @include set-var(\n    selected-background-color,\n    $light-surface-selected-background-color\n  );\n  @if not $_disable-ripple {\n    @include set-var(\n      ripple-background-color,\n      $light-surface-ripple-background-color\n    );\n  }\n}\n\n@mixin use-dark-surface {\n  @include set-var(\n    hover-background-color,\n    $dark-surface-hover-background-color\n  );\n  @include set-var(\n    focus-background-color,\n    $dark-surface-focus-background-color\n  );\n  @include set-var(\n    press-background-color,\n    $dark-surface-press-background-color\n  );\n  @include set-var(\n    selected-background-color,\n    $dark-surface-selected-background-color\n  );\n  @if not $_disable-ripple {\n    @include set-var(\n      ripple-background-color,\n      $dark-surface-ripple-background-color\n    );\n  }\n}\n\n@mixin outline(\n  $box-shadow: $focus-box-shadow,\n  $color: transparent,\n  $outline-offset: not $disable-outline-offset\n) {\n  // do not apply box shadow styles here. they will only be applied in the\n  // `focus-styles` mixin to minimize bundle size and help with overriding the\n  // focus color in specific surfaces\n  @if not $box-shadow {\n    outline: $color solid get-var(focus-width);\n    // adding an focus-offset makes it so it behaves the same way as an inset\n    // box shadow\n    @if $outline-offset {\n      outline-offset: utils.negate-var(get-var(focus-width));\n    }\n  }\n}\n\n@mixin focus-styles(\n  $box-shadow: $focus-box-shadow,\n  $disable-background: $disable-focus-background\n) {\n  @if not $disable-background {\n    @include set-var(background-color, get-var(focus-background-color));\n  }\n\n  @if $box-shadow {\n    box-shadow: inset 0 0 0 get-var(focus-width) get-var(focus-color);\n  } @else {\n    @include use-var(outline-color, focus-color);\n  }\n}\n\n@mixin surface-disabled($clickable: true, $hoverable: true) {\n  @if $clickable {\n    cursor: auto;\n  }\n\n  @if $hoverable {\n    &:hover::before {\n      @include set-var(background-color, transparent);\n    }\n  }\n}\n\n@mixin surface(\n  $focus-selector: "&:focus",\n  $disabled-selector: "&:disabled",\n  $clickable: true,\n  $hoverable: true,\n  $css-modules: false,\n  $higher-contrast: true,\n  $box-shadow: $focus-box-shadow,\n  $disable-background: $disable-focus-background\n) {\n  @if $clickable {\n    cursor: pointer;\n  }\n  outline: 0;\n  position: relative;\n\n  @if not $disable-higher-contrast and $higher-contrast {\n    > * {\n      z-index: 1;\n    }\n  }\n\n  &::before {\n    @include utils.pseudo-element(\n      $inset: get-var(surface-inset),\n      $border-radius: get-var(surface-border-radius)\n    );\n    @include outline($box-shadow);\n    @if $hoverable {\n      @include use-var(background-color);\n    }\n\n    transition-duration: transition.$linear-duration;\n    transition-property: background-color,\n      if($focus-box-shadow, box-shadow, outline-color);\n    transition-timing-function: transition.$linear-timing-function;\n  }\n\n  @if $focus-selector {\n    @include utils.keyboard-only($css-modules) {\n      #{$focus-selector + "::before"} {\n        @include focus-styles($box-shadow, $disable-background);\n      }\n    }\n  }\n\n  @if $hoverable {\n    &:hover::before {\n      @include set-var(background-color, get-var(hover-background-color));\n    }\n\n    @include utils.touch-only {\n      &:hover::before {\n        @include set-var(background-color, transparent);\n      }\n    }\n\n    @if $mode == press or $mode == both {\n      &.#{$pressed-class-name}::before {\n        @include set-var(background-color, get-var(press-background-color));\n      }\n    }\n  }\n\n  @if $disabled-selector {\n    #{$disabled-selector} {\n      @include surface-disabled($clickable, $hoverable);\n    }\n  }\n}\n\n@mixin variables {\n  @include set-var(focus-color, $focus-color);\n  @include set-var(focus-width, $focus-width);\n  @include set-var(hover-background-color, $hover-background-color);\n  @include set-var(focus-background-color, $focus-background-color);\n  @include set-var(press-background-color, $press-background-color);\n  @include set-var(selected-background-color, $selected-background-color);\n\n  @if not $_disable-ripple {\n    @include set-var(ripple-background-color, $ripple-background-color);\n    @include set-var(ripple-inset, 0);\n  }\n\n  @if not $disable-surface-inset-var {\n    @include set-var(surface-inset, 0);\n  }\n}\n\n@mixin styles {\n  @if not $_disable-ripple {\n    .rmd-ripple-container {\n      @include use-var(border-radius, ripple-border-radius);\n      @include use-var(inset, ripple-inset);\n\n      overflow: hidden;\n      pointer-events: none;\n      position: absolute;\n      z-index: 0 !important;\n    }\n\n    .rmd-ripple {\n      @include use-var(background-color, ripple-background-color);\n\n      border-radius: 50%;\n      position: absolute;\n      transform: scale(0);\n\n      &--animating {\n        transition:\n          transform\n            $ripple-transform-duration\n            transition.$deceleration-timing-function,\n          opacity\n            $ripple-opacity-duration\n            transition.$acceleration-timing-function;\n      }\n\n      &--scaling {\n        transform: scale(1);\n      }\n\n      &--fading {\n        opacity: 0;\n      }\n    }\n  }\n\n  .rmd-interaction-surface {\n    @include surface($disabled-selector: "&:disabled,&[aria-disabled=\'true\']");\n  }\n}\n',
  "@react-md/layout/layout":
    '@use "sass:map";\n@use "../utils";\n@use "../media-queries/media-queries";\n@use "../app-bar/app-bar";\n@use "../icon/icon";\n@use "../interaction/interaction";\n@use "../list/list";\n@use "../sheet/sheet";\n@use "../theme/colors";\n@use "../transition/transition";\n@use "../typography/typography";\n@use "../window-splitter/window-splitter";\n\n$disable-everything: false !default;\n$disable-resizable: false !default;\n\n$main-focus-z-index: 999 !default;\n\n$header-height: app-bar.$height !default;\n\n$navigation-z-index: app-bar.$fixed-z-index !default;\n$navigation-static-width: sheet.$static-width !default;\n$navigation-container-name: nav !default;\n\n$navigation-breakpoint: tablet !default;\n\n$enter-duration: sheet.$enter-duration !default;\n$enter-timing-function: sheet.$enter-timing-function !default;\n$leave-duration: sheet.$leave-duration !default;\n$leave-timing-function: sheet.$leave-timing-function !default;\n\n$variables: (size, header-height);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "layout");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "layout")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(size, $navigation-static-width);\n    @include set-var(header-height, $header-height);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-layout-main {\n      display: block;\n      outline: none;\n\n      &::before {\n        @include utils.pseudo-element(\n          $fixed: true,\n          $z-index: $main-focus-z-index,\n          $inset: get-var(header-height) 0 interaction.get-var(focus-width)\n        );\n        @include interaction.focus-styles($box-shadow: true);\n\n        opacity: 0;\n        transition: opacity\n          transition.$linear-duration\n          transition.$linear-timing-function;\n      }\n\n      &:focus::before {\n        opacity: 1;\n      }\n\n      &--offset-v {\n        @include use-var(padding-top, header-height);\n      }\n    }\n\n    /// I decided to go with an "SSR-first" approach by having the nav element\n    /// always be rendered, but use media queries to show it for tablets and\n    /// above. This makes it so there is less javascript to dynamically switch\n    /// between layout types as you resize the browser.\n    .rmd-layout-nav {\n      @include sheet.set-var(width, get-var(size));\n      @include media-queries.media($navigation-breakpoint) {\n        // use grid so that you can easily have a header + tree that fills the remaining space\n        display: grid;\n      }\n\n      container: $navigation-container-name;\n      display: none;\n      z-index: $navigation-z-index;\n\n      &--offset-v {\n        @include use-var(top, header-height);\n      }\n    }\n\n    /// This class is used to transition when the nav expands/collapses on\n    /// larger screen sizes\n    .rmd-layout-h {\n      will-change: margin;\n\n      &--active {\n        @include media-queries.media($navigation-breakpoint) {\n          @include utils.auto-rtl(margin-left, get-var(size));\n\n          &::before {\n            @include utils.auto-rtl(left, get-var(size));\n          }\n        }\n      }\n\n      &--enter {\n        transition: margin $enter-duration $enter-timing-function;\n      }\n\n      &--exit {\n        transition: margin $leave-duration $leave-timing-function;\n      }\n    }\n\n    @if not $disable-resizable {\n      .rmd-layout-splitter {\n        @include window-splitter.set-var(position, get-var(size));\n\n        &--offset-v {\n          @include window-splitter.set-var(top, get-var(header-height));\n        }\n\n        &--responsive {\n          @include media-queries.media($navigation-breakpoint) {\n            display: inline-block;\n          }\n\n          display: none;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/link/link":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../icon/icon";\n@use "../interaction/interaction";\n@use "../typography/typography";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$disable-skip-to-main: false !default;\n$disable-flex: false !default;\n\n$transition-duration: transition.$linear-duration !default;\n$color: colors.$blue-500 !default;\n$visited-color: colors.$blue-600 !default;\n$hover-color: colors.$blue-400 !default;\n\n$skip-to-main-z-index: 10000 !default;\n$skip-to-main-styles: (\n  color: theme.theme-get-var(on-primary-color),\n  left: 50%,\n  padding: 0.25rem 1rem,\n  top: 0.25rem,\n  transform: translateX(-50%),\n  z-index: $skip-to-main-z-index,\n) !default;\n$skip-to-main-active-styles: (\n  outline: 0.25rem dashed #000,\n) !default;\n\n$variables: (color, visited-color, hover-color);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "link");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "link")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @include set-var(color, $light-theme-color);\n}\n\n@mixin use-dark-theme {\n  @include set-var(color, $dark-theme-color);\n}\n\n@mixin style($position) {\n  $property: "border-#{$position}";\n\n  #{$property}: get-var(size) inset get-var(color);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(color, $color);\n    @include set-var(visited-color, $visited-color);\n    @include set-var(hover-color, $hover-color);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-link {\n      // can\'t use the normal @include interaction.surface since links are\n      // rendered inline and the `::before`/`::after` pseudo selectors only work\n      // nicely with block-like elements\n      @include utils.keyboard-only {\n        &:focus {\n          @include interaction.focus-styles($disable-background: true);\n        }\n      }\n      @include interaction.outline($outline-offset: false);\n      @include use-var(color);\n\n      transition: color $transition-duration;\n\n      &:visited {\n        @include set-var(color, get-var(visited-color));\n      }\n\n      &:hover {\n        @include set-var(color, get-var(hover-color));\n      }\n\n      @if not $disable-flex {\n        &--flex {\n          @include icon.use-var(gap, spacing);\n\n          align-items: center;\n          display: inline-flex;\n        }\n      }\n\n      @if not $disable-skip-to-main {\n        &--skip {\n          @include utils.map-to-styles(\n            map.remove(\n              typography.$headline-6-styles,\n              font-size,\n              font-weight,\n              letter-spacing\n            )\n          );\n          @include utils.sr-only(true, null);\n        }\n\n        &--skip-styled {\n          @include utils.map-to-styles($skip-to-main-styles);\n          @include utils.keyboard-only {\n            &:focus,\n            &:active {\n              @include utils.map-to-styles($skip-to-main-active-styles);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/list/list":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/theme";\n@use "../avatar/avatar";\n@use "../icon/icon";\n@use "../divider/divider";\n@use "../interaction/interaction";\n@use "../typography/typography";\n\n$disable-everything: false !default;\n$disable-horizontal: false !default;\n$disable-item-disabled-color: false !default;\n$disable-item-disabled-opacity: false !default;\n$disable-item-avatar: false;\n$disable-item-media: false !default;\n$disable-item-media-large: false !default;\n$disable-medium-height: false !default;\n$disable-large-height: false !default;\n$disable-extra-large-height: false !default;\n$disable-three-line-height: false !default;\n$disable-item-link-styles: false !default;\n\n$disable-subheader: false !default;\n$disable-subheader-inset: false !default;\n\n$item-secondary-text-line-height: 1.42857 !default;\n$item-secondary-text-three-line-max-height: 3rem !default;\n\n$vertical-padding: 0.5rem !default;\n$dense-vertical-padding: 0.25rem !default;\n\n$horizontal-padding: 0 !default;\n$dense-horizontal-padding: $horizontal-padding !default;\n\n$dense-font-size: 0.8125rem !default;\n$typography-styles: map.merge(\n  typography.$subtitle-1-styles,\n  (\n    line-height: map.get(typography.$body-1-styles, line-height),\n  )\n) !default;\n\n$item-disabled-opacity: 0.5 !default;\n$item-vertical-padding: 0.5rem !default;\n$item-horizontal-padding: 1rem !default;\n$item-height: 3rem !default;\n$item-dense-height: 2.5rem !default;\n$item-medium-height: 3.5rem !default;\n$item-dense-medium-height: 3rem !default;\n$item-large-height: 4rem !default;\n$item-dense-large-height: 3.5rem !default;\n$item-extra-large-height: 4.5rem !default;\n$item-dense-extra-large-height: 4rem !default;\n$item-three-line-height: 5.5rem !default;\n$item-dense-three-line-height: 5rem !default;\n\n$item-media-spacing: 1rem !default;\n$item-media-size: 3.5rem !default;\n$item-media-large-size: 6.25rem !default;\n\n$item-keyline: 4.5rem !default;\n\n$variables: (\n  horizontal-padding,\n  vertical-padding,\n  item-keyline,\n  item-horizontal-padding,\n  item-vertical-padding,\n  item-height,\n  item-medium-height,\n  item-large-height,\n  item-extra-large-height,\n  item-three-line-height,\n  item-media-size,\n  item-media-spacing,\n  item-text-three-line-height\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "list");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "list")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin _addon-spacing($subtract) {\n  $keyline: get-var(item-keyline);\n  $padding: get-var(item-horizontal-padding);\n\n  @include icon.set-var(\n    spacing,\n    calc(#{$keyline} - #{$padding} - #{$subtract})\n  );\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(horizontal-padding, $horizontal-padding);\n    @include set-var(vertical-padding, $vertical-padding);\n    @include set-var(item-horizontal-padding, $item-horizontal-padding);\n    @include set-var(item-vertical-padding, $item-vertical-padding);\n\n    @include set-var(item-height, $item-height);\n    @if not $disable-medium-height {\n      @include set-var(item-medium-height, $item-medium-height);\n    }\n    @if not $disable-large-height {\n      @include set-var(item-large-height, $item-large-height);\n    }\n    @if not $disable-extra-large-height {\n      @include set-var(item-extra-large-height, $item-extra-large-height);\n    }\n    @if not $disable-three-line-height {\n      @include set-var(item-three-line-height, $item-three-line-height);\n      @include set-var(\n        item-text-three-line-height,\n        $item-secondary-text-three-line-max-height\n      );\n    }\n\n    @if not $disable-item-media {\n      @include set-var(item-media-size, $item-media-size);\n      @include set-var(item-media-spacing, $item-media-spacing);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-list {\n      @include utils.map-to-styles($typography-styles);\n      @include divider.set-var(inset, get-var(item-keyline));\n\n      list-style: none;\n      margin: 0;\n      padding: get-var(vertical-padding) get-var(horizontal-padding);\n\n      @if not $disable-horizontal {\n        &--horizontal {\n          display: flex;\n          flex-wrap: nowrap;\n          max-width: 100%;\n          overflow: auto;\n          padding: get-var(horizontal-padding) get-var(vertical-padding);\n        }\n      }\n    }\n\n    .rmd-list-item {\n      @include use-var(min-height, item-height);\n\n      align-items: center;\n      display: flex;\n      padding: get-var(item-vertical-padding) get-var(item-horizontal-padding);\n\n      &--clickable {\n        @include interaction.surface(\n          $disabled-selector: \'&[aria-disabled="true"]\'\n        );\n      }\n\n      @if not $disable-item-link-styles {\n        &--link {\n          color: inherit;\n          text-decoration: none;\n        }\n      }\n\n      @if not $disable-item-disabled-color {\n        &--disabled-color {\n          @include theme.theme-set-var(\n            text-secondary-color,\n            theme.theme-get-var(text-disabled-color)\n          );\n          @include theme.theme-use-var(color, text-disabled-color);\n        }\n      }\n\n      @if not $disable-item-disabled-opacity {\n        &--disabled-opacity {\n          opacity: $item-disabled-opacity;\n        }\n      }\n\n      @if not $disable-medium-height {\n        &--medium {\n          @include set-var(item-height, get-var(item-medium-height));\n        }\n      }\n\n      @if not $disable-large-height {\n        &--large {\n          @include set-var(item-height, get-var(item-large-height));\n        }\n      }\n\n      @if not $disable-extra-large-height {\n        &--extra-large {\n          @include set-var(item-height, get-var(item-extra-large-height));\n        }\n      }\n\n      @if not $disable-three-line-height {\n        &--three-lines {\n          @include set-var(item-height, get-var(item-three-line-height));\n        }\n      }\n\n      &__text {\n        @include typography.text-overflow;\n        @include utils.rtl {\n          margin-left: auto;\n        }\n\n        display: block;\n        flex-grow: 1;\n\n        &--secondary {\n          @include theme.theme-use-var(color, text-secondary-color);\n        }\n\n        &--clamped {\n          @include typography.line-clamp;\n          @include use-var(max-height, item-text-three-line-height);\n\n          line-height: $item-secondary-text-line-height;\n          white-space: normal;\n        }\n      }\n\n      &__addon {\n        flex-shrink: 0;\n\n        &--top {\n          align-self: flex-start;\n        }\n\n        &--bottom {\n          align-self: flex-end;\n        }\n\n        &--before {\n          @include _addon-spacing(icon.get-var(size));\n        }\n\n        @if not $disable-item-avatar {\n          &--avatar-before {\n            @include _addon-spacing(avatar.get-var(size));\n          }\n        }\n\n        @if not $disable-item-media {\n          &--media {\n            @include icon.set-var(spacing, get-var(item-media-spacing));\n            @include use-var(width, item-media-size);\n          }\n\n          &--media-centered {\n            align-items: center;\n            display: flex;\n            justify-content: center;\n          }\n\n          @if not $disable-item-media-large {\n            &--media-large {\n              @include set-var(item-media-size, $item-media-large-size);\n            }\n          }\n        }\n      }\n    }\n\n    @if not $disable-subheader {\n      .rmd-list-subheader {\n        @include utils.map-to-styles(typography.$subtitle-2-styles);\n        @include theme.theme-use-var(color, text-secondary-color);\n        @include use-var(height, item-height);\n\n        align-items: center;\n        display: flex;\n        padding: get-var(item-vertical-padding)\n          get-var(item-horizontal-padding);\n\n        @if not $disable-subheader-inset {\n          &--inset {\n            @include utils.rtl {\n              @include use-var(padding-left, item-horizontal-padding);\n              @include use-var(padding-right, item-keyline);\n            }\n\n            @include use-var(padding-left, item-keyline);\n          }\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/media-queries/media-queries":
    '$phone-max-width: 47.9375em !default;\n$tablet-min-width: 48em !default;\n$tablet-max-width: 64em !default;\n$desktop-min-width: 64.0625em !default;\n$large-desktop-min-width: 80em !default;\n\n@mixin phone-media {\n  @media screen and (max-width: #{$phone-max-width}) {\n    @content;\n  }\n}\n\n@mixin tablet-media {\n  @media screen and (min-width: #{$tablet-min-width}) {\n    @content;\n  }\n}\n\n@mixin tablet-only-media {\n  @media screen and (min-width: #{$tablet-min-width}) and (max-width: #{$tablet-max-width}) {\n    @content;\n  }\n}\n\n@mixin desktop-media {\n  @media screen and (min-width: #{$desktop-min-width}) {\n    @content;\n  }\n}\n\n/// Creates a media query so that screen sizes matching at least the min width\n/// for a large desktop will gain these styles.\n@mixin large-desktop-media {\n  @media screen and (min-width: #{$large-desktop-min-width}) {\n    @content;\n  }\n}\n\n@mixin media($type) {\n  @if $type == phone {\n    @include phone-media {\n      @content;\n    }\n  } @else if $type == tablet {\n    @include tablet-media {\n      @content;\n    }\n  } @else if $type == tablet-only {\n    @include tablet-only-media {\n      @content;\n    }\n  } @else if $type == desktop {\n    @include desktop-media {\n      @content;\n    }\n  } @else if $type == large-desktop {\n    @include large-desktop-media {\n      @content;\n    }\n  } @else {\n    @error "invalid media type: #{$type}";\n  }\n}\n',
  "@react-md/menu/menu":
    '@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../theme/theme";\n@use "../interaction/interaction";\n@use "../icon/icon";\n\n$disable-everything: false !default;\n$disable-menu-item: false !default;\n$disable-menu-item-group: false !default;\n$disable-focus-outline: false !default;\n$disable-elevation-colors: theme.$disable-dark-elevation !default;\n\n$elevation: 8 !default;\n$background-color: theme.theme-get-var(surface-color) !default;\n$color: theme.theme-get-var(text-primary-color) !default;\n\n$z-index: utils.$temporary-element-z-index !default;\n$min-width: 7rem !default;\n\n$spacing: 1rem !default;\n\n$variables: (background-color, color, min-width, spacing);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "menu");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "menu")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin menu-styles {\n  .rmd-menu {\n    outline: none;\n    overflow: auto;\n\n    @if not $disable-focus-outline {\n      @include utils.keyboard-only {\n        &--outline:focus {\n          // Note: Do not use the `interaction-outline` mixin +\n          // `interaction.set-var(interaction.$focus-color)` like normal focus\n          // elements since it\'ll make all focusable children update with the\n          // outline color as well\n          outline: interaction.get-var(focus-color) solid\n            interaction.get-var(focus-width);\n        }\n      }\n    }\n\n    &--elevated {\n      @include box-shadows.box-shadow(\n        $elevation,\n        $disable-colors: $disable-elevation-colors\n      );\n      @if $disable-elevation-colors {\n        @include use-var(background-color);\n        @include use-var(color);\n      }\n      @include use-var(min-width);\n\n      z-index: $z-index;\n    }\n  }\n}\n\n@mixin menu-item-styles {\n  .rmd-menu-item {\n    @include icon.set-var(spacing, get-var(spacing));\n\n    height: var(--rmd-list-item-height);\n\n    &--focused {\n      @include utils.keyboard-only {\n        @include interaction.set-var(\n          background-color,\n          interaction.get-var(focus-background-color)\n        );\n\n        &::before {\n          @include interaction.focus-styles;\n        }\n      }\n    }\n  }\n}\n\n@mixin menu-item-group-styles {\n  .rmd-menu-item-group {\n    padding: 0;\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n    @include set-var(min-width, $min-width);\n    @include set-var(spacing, $spacing);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include menu-styles;\n\n    @if not $disable-menu-item {\n      @include menu-item-styles;\n    }\n\n    @if not $disable-menu-item-group {\n      @include menu-item-group-styles;\n    }\n  }\n}\n',
  "@react-md/overlay/overlay":
    '@use "sass:map";\n@use "../utils";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$background-color: rgba(0, 0, 0, 0.4) !default;\n$z-index: utils.$temporary-element-z-index !default;\n\n$transition-duration: transition.$linear-duration !default;\n$transition-timing-function: transition.$linear-timing-function !default;\n\n$variables: (background-color, z-index);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "overlay");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "overlay")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(z-index, $z-index);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-overlay {\n      @include use-var(background-color);\n      @include use-var(z-index);\n\n      border-radius: inherit;\n      box-shadow: inherit;\n      inset: 0;\n      opacity: 0;\n      pointer-events: none;\n      position: fixed;\n      transition: opacity $transition-duration $transition-timing-function;\n\n      &--active {\n        opacity: 1;\n      }\n\n      &--clickable {\n        cursor: pointer;\n      }\n\n      &--visible {\n        overflow: hidden;\n        pointer-events: auto;\n      }\n\n      &--absolute {\n        position: absolute;\n      }\n    }\n  }\n}\n',
  "@react-md/progress/progress":
    '@use "sass:color";\n@use "sass:map";\n@use "../utils";\n@use "../theme/colors";\n@use "../theme/theme";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$disable-linear: $disable-everything !default;\n$disable-linear-vertical: false !default;\n$disable-linear-horizontal: false !default;\n$disable-linear-reverse: false !default;\n$disable-circular: $disable-everything !default;\n$disable-circular-centered-styles: false !default;\n$disable-determinate: false !default;\n$disable-indeterminate: false !default;\n\n$color: theme.theme-get-var(primary-color) !default;\n$background-color: color-mix(in srgb, currentcolor 66%, colors.$white) !default;\n// $background-color: theme.get-swatch(\n//   theme.$primary-color,\n//   300,\n//   false,\n//   rgba(theme.$primary-color, 0.4)\n// ) !default;\n\n$circular-size: 3rem !default;\n$circular-dense-size: 1.5rem !default;\n$circular-stroke-width: 6 !default;\n$circular-dasharray: 187 !default;\n$circular-transition-duration: transition.$enter-duration !default;\n$circular-indeterminate-transition-duration: 2.4s !default;\n$circular-rotate-only-transition-duration: 1.2s !default;\n$circular-rotate-only-dashoffset: $circular-dasharray * 0.4 !default;\n$circular-start-offset: $circular-dasharray !default;\n$circular-end-offset: $circular-dasharray * 0.25 !default;\n$circular-rotate-styles: (\n  0%: (\n    transform: rotate(0deg),\n  ),\n  50%: (\n    transform: rotate(135deg),\n  ),\n  75%: (\n    transform: rotate(450deg),\n  ),\n  100%: (\n    transform: rotate(720deg),\n  ),\n) !default;\n$circular-dash-styles: (\n  0%: (\n    stroke-dashoffset: $circular-start-offset,\n  ),\n  50%: (\n    stroke-dashoffset: $circular-end-offset,\n  ),\n  100%: (\n    stroke-dashoffset: $circular-start-offset,\n  ),\n) !default;\n\n$linear-size: 0.25rem !default;\n$linear-transition-duration: 2.4s !default;\n$linear-short-animation-delay: 0.75s !default;\n$linear-styles: (\n  0%: (\n    left: -35%,\n    right: 100%,\n  ),\n  60%: (\n    left: 100%,\n    right: -90%,\n  ),\n  100%: (\n    left: 100%,\n    right: -90%,\n  ),\n) !default;\n$linear-short-styles: (\n  0%: (\n    left: -200%,\n    right: 100%,\n  ),\n  40%: (\n    left: 107%,\n    right: -8%,\n  ),\n  100%: (\n    left: 107%,\n    right: -8%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the transition. Each key in this\n/// map will be set immediately at the root of the `keyframes` and then each\n/// child map will be considered a map of property: value.\n/// @type Map\n$linear-reverse-styles: (\n  0%: (\n    left: 100%,\n    right: -35%,\n  ),\n  60%: (\n    left: -90%,\n    right: 100%,\n  ),\n  100%: (\n    left: -90%,\n    right: 100%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the shorter transition. Each key\n/// in this map will be set immediately at the root of the `keyframes` and then\n/// each child map will be considered a map of property: value.\n/// @type Map\n$linear-reverse-short-styles: (\n  0%: (\n    left: 100%,\n    right: -200%,\n  ),\n  40%: (\n    left: -8%,\n    right: 107%,\n  ),\n  100%: (\n    left: -8%,\n    right: 107%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the vertical transition. Each\n/// key in this map will be set immediately at the root of the `keyframes` and\n/// then each child map will be considered a map of property: value.\n/// @type Map\n$linear-vertical-styles: (\n  0%: (\n    bottom: -35%,\n    top: 100%,\n  ),\n  60%: (\n    bottom: 100%,\n    top: -90%,\n  ),\n  100%: (\n    bottom: 100%,\n    top: -90%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the shorter vertical transition.\n/// Each key in this map will be set immediately at the root of the `keyframes`\n/// and then each child map will be considered a map of property: value.\n/// @type Map\n$linear-vertical-short-styles: (\n  0%: (\n    bottom: -200%,\n    top: 100%,\n  ),\n  40%: (\n    bottom: 107%,\n    top: -8%,\n  ),\n  100%: (\n    bottom: 107%,\n    top: -8%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the vertical transition. Each\n/// key in this map will be set immediately at the root of the `keyframes` and\n/// then each child map will be considered a map of property: value.\n/// @type Map\n$linear-vertical-reverse-styles: (\n  0%: (\n    bottom: 100%,\n    top: -35%,\n  ),\n  60%: (\n    bottom: -90%,\n    top: 100%,\n  ),\n  100%: (\n    bottom: -90%,\n    top: 100%,\n  ),\n) !default;\n\n/// The linear progress bar styles to apply for the shorter vertical transition.\n/// Each key in this map will be set immediately at the root of the `keyframes`\n/// and then each child map will be considered a map of property: value.\n/// @type Map\n$linear-vertical-reverse-short-styles: (\n  0%: (\n    bottom: 100%,\n    top: -200%,\n  ),\n  40%: (\n    bottom: -8%,\n    top: 107%,\n  ),\n  100%: (\n    bottom: -8%,\n    top: 107%,\n  ),\n) !default;\n\n$variables: (\n  background-color,\n  color,\n  circular-size,\n  circular-stroke-width,\n  linear-size\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "progress");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "progress")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin _animation($styles) {\n  @if $styles {\n    @each $percentage, $style in $styles {\n      #{$percentage} {\n        @include utils.map-to-styles($style);\n      }\n    }\n  }\n}\n\n@mixin _circular-progress {\n  .rmd-circular-progress {\n    @include use-var(height, circular-size);\n    @include use-var(width, circular-size);\n    // add border radius and overflow-hidden so that different stroke-widths\n    // are still circular. For some reason it isn\'t always the case.\n    align-items: center;\n    border-radius: 50%;\n    display: inline-flex;\n    justify-content: center;\n    overflow: hidden;\n\n    @if not $disable-circular-centered-styles {\n      &--centered {\n        display: flex;\n        margin: 0 auto;\n      }\n    }\n\n    @if $circular-dense-size {\n      &--dense {\n        @include set-var(circular-size, $circular-dense-size);\n      }\n    }\n\n    &__svg {\n      height: inherit;\n      width: inherit;\n\n      @if not $disable-determinate {\n        &--determinate {\n          transform: rotate(-90deg);\n        }\n      }\n\n      @if not $disable-indeterminate {\n        &--indeterminate {\n          animation: rmd-progress-rotate\n            $circular-indeterminate-transition-duration\n            linear\n            infinite;\n        }\n\n        &--rotate-only {\n          animation: rmd-progress-rotate-only\n            $circular-rotate-only-transition-duration\n            linear\n            infinite;\n        }\n      }\n    }\n\n    &__circle {\n      @include use-var(stroke-width, circular-stroke-width);\n\n      fill: none;\n      stroke: currentcolor;\n      stroke-dasharray: $circular-dasharray;\n      stroke-linecap: round;\n\n      @if not $disable-determinate {\n        &--animate {\n          transition: stroke-dashoffset\n            $circular-transition-duration\n            transition.$linear-timing-function;\n        }\n      }\n\n      @if not $disable-indeterminate {\n        &--indeterminate {\n          animation: rmd-circular-progress-size\n            $circular-indeterminate-transition-duration\n            ease-in-out\n            infinite;\n        }\n\n        &--rotate-only {\n          animation: none;\n          stroke-dashoffset: $circular-rotate-only-dashoffset;\n        }\n      }\n    }\n  }\n\n  @keyframes rmd-progress-rotate-only {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  @if not $disable-indeterminate {\n    @keyframes rmd-progress-rotate {\n      @include _animation($circular-rotate-styles);\n    }\n\n    @keyframes rmd-circular-progress-size {\n      @include _animation($circular-dash-styles);\n    }\n  }\n}\n\n@mixin _linear-progress-bar {\n  @if not $disable-linear-horizontal {\n    &--horizontal {\n      @include utils.auto-rtl(left, 0);\n    }\n\n    @if not $disable-linear-reverse {\n      &--horizontal-reverse {\n        @include utils.auto-rtl-group(\n          (\n            left: auto,\n            right: 0,\n          )\n        );\n      }\n    }\n  }\n\n  @if not $disable-linear-vertical {\n    &--vertical {\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n\n    @if not $disable-linear-reverse {\n      &--vertical-reverse {\n        bottom: auto;\n        top: 0;\n      }\n    }\n  }\n\n  &--animate {\n    transition-duration: transition.$linear-duration;\n    transition-property: height, width;\n    transition-timing-function: transition.$sharp-timing-function;\n  }\n\n  @if not $disable-determinate {\n    &--determinate {\n      @include use-var(background-color, color);\n      @include use-var(height, linear-size);\n\n      position: absolute;\n      z-index: 0;\n    }\n  }\n\n  @if not $disable-indeterminate {\n    &--indeterminate {\n      &::before,\n      &::after {\n        @include utils.auto-rtl-group(\n          (\n            left: 0,\n            right: 100%,\n          )\n        );\n\n        @include use-var(background-color, color);\n        @include use-var(height, linear-size);\n\n        animation-duration: $linear-transition-duration;\n        animation-iteration-count: infinite;\n        animation-timing-function: transition.$linear-timing-function;\n        content: "";\n        position: absolute;\n        will-change: left, right;\n        z-index: 0;\n      }\n\n      @if not $disable-linear-horizontal {\n        &::before {\n          animation-name: rmd-progress-bar;\n        }\n\n        &::after {\n          animation-delay: $linear-short-animation-delay;\n          animation-name: rmd-progress-bar-short;\n        }\n      }\n    }\n\n    @if not $disable-linear-reverse {\n      &--indeterminate-reverse {\n        &::before {\n          animation-name: rmd-progress-bar-reverse;\n        }\n\n        &::after {\n          animation-name: rmd-progress-bar-reverse-short;\n        }\n      }\n    }\n\n    @if not $disable-linear-vertical {\n      &--indeterminate-vertical {\n        &::before,\n        &::after {\n          @include use-var(width, linear-size);\n\n          height: auto;\n          left: 0;\n          right: 0;\n        }\n\n        &::before {\n          animation-name: rmd-progress-bar-vertical;\n        }\n\n        &::after {\n          animation-name: rmd-progress-bar-vertical-short;\n        }\n      }\n\n      @if not $disable-linear-reverse {\n        &--indeterminate-vertical-reverse {\n          &::before {\n            animation-name: rmd-progress-bar-vertical-reverse;\n          }\n\n          &::after {\n            animation-name: rmd-progress-bar-vertical-reverse-short;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin _linear-progress {\n  .rmd-linear-progress {\n    @include use-var(background-color);\n    display: block;\n    overflow: hidden;\n    position: relative;\n\n    @if not $disable-linear-horizontal {\n      &--horizontal {\n        @include use-var(height, linear-size);\n\n        width: 100%;\n      }\n    }\n\n    @if not $disable-linear-vertical {\n      &--vertical {\n        @include use-var(width, linear-size);\n\n        display: inline-block;\n        height: auto;\n      }\n    }\n\n    &__bar {\n      @include _linear-progress-bar;\n    }\n  }\n\n  @if not $disable-linear-horizontal {\n    @keyframes rmd-progress-bar {\n      @include _animation($linear-styles);\n    }\n\n    @keyframes rmd-progress-bar-short {\n      @include _animation($linear-short-styles);\n    }\n\n    @if not $disable-linear-reverse {\n      @keyframes rmd-progress-bar-reverse {\n        @include _animation($linear-reverse-styles);\n      }\n\n      @keyframes rmd-progress-bar-reverse-short {\n        @include _animation($linear-reverse-short-styles);\n      }\n    }\n  }\n\n  @if not $disable-linear-vertical {\n    @keyframes rmd-progress-bar-vertical {\n      @include _animation($linear-vertical-styles);\n    }\n\n    @keyframes rmd-progress-bar-vertical-short {\n      @include _animation($linear-vertical-short-styles);\n    }\n\n    @if not $disable-linear-reverse {\n      @keyframes rmd-progress-bar-vertical-reverse {\n        @include _animation($linear-vertical-reverse-styles);\n      }\n\n      @keyframes rmd-progress-bar-vertical-reverse-short {\n        @include _animation($linear-vertical-reverse-short-styles);\n      }\n    }\n  }\n}\n\n@mixin variables {\n  @if not $disable-circular {\n    @include set-var(circular-size, $circular-size);\n    @include set-var(circular-stroke-width, $circular-stroke-width);\n  }\n\n  @if not $disable-linear {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n    @include set-var(linear-size, $linear-size);\n  }\n}\n\n@mixin styles {\n  @if not $disable-circular {\n    @include _circular-progress;\n  }\n\n  @if not $disable-linear {\n    @include _linear-progress;\n  }\n}\n',
  "@react-md/responsive-item/responsive-item":
    '@use "sass:list";\n@use "sass:map";\n@use "sass:math";\n@use "../utils";\n@use "../theme/theme";\n\n$disable-everything: false !default;\n$disable-item: false !default;\n$disable-scale-to-container: false !default;\n$disable-auto: false !default;\n$disable-auto-scale: false !default;\n$disable-full-width: false !default;\n$disable-overlay: false !default;\n$disable-overlay-top: false !default;\n$disable-overlay-right: false !default;\n$disable-overlay-bottom: false !default;\n$disable-overlay-left: false !default;\n$disable-overlay-middle: false !default;\n$disable-overlay-center: false !default;\n$disable-overlay-absolute-center: false !default;\n\n$background-color: rgba(#000, 0.54) !default;\n$color: theme.$dark-theme-text-primary-color !default;\n$z-index: 1 !default;\n\n$overlay-padding: 1rem !default;\n$selectors: (img ">svg" iframe video embed object) !default;\n\n$overlay-horizontal-width: 30% !default;\n\n$aspect-ratios: (\n  "16-9": 16 9,\n  "4-3": 4 3,\n  "1-1": 1 1,\n) !default;\n\n$disable-aspect-ratios: not list.length(map.keys($aspect-ratios)) !default;\n\n@mixin forced-aspect-ratio {\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n}\n\n@mixin responsive-item {\n  height: auto;\n  width: 100%;\n}\n\n@mixin scale-to-container {\n  max-height: 100%;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n@mixin aspect-ratio($width, $height) {\n  padding-bottom: math.percentage(math.div($height, $width));\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @if not $disable-item {\n      .rmd-responsive-item {\n        @include responsive-item;\n\n        @if not $disable-scale-to-container {\n          &--scale {\n            @include scale-to-container;\n          }\n        }\n\n        @if not $disable-aspect-ratios {\n          &--aspect-ratio {\n            @include forced-aspect-ratio;\n          }\n        }\n      }\n    }\n\n    .rmd-responsive-item-container {\n      display: inline-block;\n      position: relative;\n\n      @if not $disable-auto {\n        &--auto {\n          @each $selector in $selectors {\n            #{$selector} {\n              @include responsive-item;\n            }\n          }\n        }\n\n        @if not $disable-auto-scale {\n          &--auto-scale {\n            @each $selector in $selectors {\n              #{$selector} {\n                @include scale-to-container;\n              }\n            }\n          }\n        }\n      }\n\n      @if not $disable-full-width {\n        &--full-width {\n          display: block;\n          width: 100%;\n        }\n      }\n\n      @if not $disable-aspect-ratios {\n        &--aspect-ratio {\n          display: block;\n          height: 0;\n          overflow: hidden;\n          padding: 0;\n\n          @each $selector in $selectors {\n            #{$selector} {\n              @include forced-aspect-ratio;\n            }\n          }\n        }\n\n        @each $suffix, $ratio-list in $aspect-ratios {\n          &--#{$suffix} {\n            @include aspect-ratio(nth($ratio-list, 1), nth($ratio-list, 2));\n          }\n        }\n      }\n    }\n\n    @if not $disable-overlay {\n      .rmd-responsive-item-overlay {\n        background-color: $background-color;\n        color: $color;\n        padding: $overlay-padding;\n        position: absolute;\n        z-index: 0;\n\n        @if not $disable-overlay-top {\n          &--top {\n            inset: 0 0 auto;\n          }\n        }\n\n        @if not $disable-overlay-bottom {\n          &--bottom {\n            inset: auto 0 0;\n          }\n        }\n\n        &--horizontal {\n          inset: 0 auto;\n          width: $overlay-horizontal-width;\n        }\n\n        @if not $disable-overlay-left {\n          &--left {\n            @include utils.auto-rtl(left, 0);\n          }\n        }\n\n        @if not $disable-overlay-right {\n          &--right {\n            @include utils.auto-rtl(right, 0);\n          }\n        }\n\n        @if not $disable-overlay-middle {\n          &--middle {\n            inset: auto 0 50%;\n            transform: translate3d(0, 50%, 0);\n          }\n        }\n\n        @if not $disable-overlay-center {\n          &--center {\n            inset: 0 50% 0 auto;\n            transform: translate3d(50%, 0, 0);\n          }\n        }\n\n        @if not $disable-overlay-absolute-center {\n          &--absolute-center {\n            inset: auto 50% 50% auto;\n            transform: translate3d(50%, 50%, 0);\n          }\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/segmented-button/segmented-button":
    '@use "sass:map";\n@use "sass:color";\n@use "../utils";\n@use "../icon/icon";\n@use "../interaction/interaction";\n@use "../typography/typography";\n@use "../transition/transition";\n@use "../theme/a11y";\n@use "../theme/colors";\n@use "../theme/theme";\n\n$disable-everything: false !default;\n$disable-selected-icon: false !default;\n\n$light-theme-color: colors.$black !default;\n$light-theme-outline-color: #79747e !default;\n$light-theme-selected-background-color: theme.get-swatch(\n  theme.$secondary-color,\n  700,\n  false,\n  color.adjust(theme.$secondary-color, $lightness: -20%)\n) !default;\n$light-theme-selected-color: a11y.contrast-color(\n  $light-theme-selected-background-color\n) !default;\n\n$dark-theme-color: colors.$white !default;\n$dark-theme-outline-color: #938f99 !default;\n$dark-theme-selected-background-color: theme.get-swatch(\n  theme.$secondary-color,\n  300,\n  false,\n  color.adjust(theme.$secondary-color, $lightness: 20%)\n) !default;\n$dark-theme-selected-color: a11y.contrast-color(\n  $dark-theme-selected-background-color\n) !default;\n\n$gap: icon.$spacing !default;\n$border-radius: 2.5rem !default;\n$min-height: 2.5rem !default;\n$min-width: 3rem !default;\n$horizontal-padding: 0.75rem !default;\n$vertical-padding: 0 !default;\n$outline-width: 0.0625rem !default;\n$outline-color: theme.get-default-color(\n  $light-theme-outline-color,\n  $dark-theme-outline-color\n) !default;\n$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;\n$selected-color: theme.get-default-color(\n  $light-theme-selected-color,\n  $dark-theme-selected-color\n) !default;\n$selected-background-color: theme.get-default-color(\n  $light-theme-selected-background-color,\n  $dark-theme-selected-background-color\n) !default;\n\n$typography-styles: typography.$button-styles !default;\n\n$variables: (\n  outline-width,\n  outline-color,\n  color,\n  selected-background-color,\n  selected-color\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "segmented-button");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "segmented-button")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin use-light-theme {\n  @if not $disable-everything {\n    @if $light-theme-outline-color != $dark-theme-outline-color {\n      @include set-var(outline-color, $light-theme-outline-color);\n    }\n\n    @if $light-theme-selected-background-color !=\n      $dark-theme-selected-background-color\n    {\n      @include set-var(\n        selected-background-color,\n        $light-theme-selected-background-color\n      );\n    }\n\n    @if $light-theme-selected-color != $dark-theme-selected-color {\n      @include set-var(selected-color, $light-theme-selected-color);\n    }\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-everything {\n    @if $light-theme-outline-color != $dark-theme-outline-color {\n      @include set-var(outline-color, $dark-theme-outline-color);\n    }\n\n    @if $light-theme-selected-background-color !=\n      $dark-theme-selected-background-color\n    {\n      @include set-var(\n        selected-background-color,\n        $dark-theme-selected-background-color\n      );\n    }\n\n    @if $light-theme-selected-color != $dark-theme-selected-color {\n      @include set-var(selected-color, $dark-theme-selected-color);\n    }\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(outline-width, $outline-width);\n    @include set-var(outline-color, $outline-color);\n    @include set-var(color, currentcolor);\n    @include set-var(selected-background-color, $selected-background-color);\n    @include set-var(selected-color, $selected-color);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-segmented-button-container {\n      display: grid;\n      grid-auto-columns: 1fr;\n      grid-auto-flow: column;\n\n      &--full-width {\n        width: 100%;\n      }\n    }\n\n    .rmd-segmented-button {\n      @include theme.theme-use-var(color, text-primary-color);\n      @include icon.set-var(color, currentcolor);\n      @include icon.set-var(size, 1.125rem);\n      @include utils.map-to-styles($typography-styles);\n\n      align-items: center;\n      background-color: transparent;\n      border: 0;\n      box-shadow: inset 0 0 0 get-var(outline-width) get-var(outline-color);\n      display: inline-flex;\n      gap: $gap;\n      justify-content: center;\n      min-height: $min-height;\n      min-width: $min-width;\n      padding: $vertical-padding $horizontal-padding;\n\n      &:first-child {\n        @include utils.rtl {\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: $border-radius;\n          border-top-left-radius: 0;\n          border-top-right-radius: $border-radius;\n        }\n\n        border-bottom-left-radius: $border-radius;\n        border-top-left-radius: $border-radius;\n      }\n\n      &:last-child {\n        @include utils.rtl {\n          border-bottom-left-radius: $border-radius;\n          border-bottom-right-radius: 0;\n          border-top-left-radius: $border-radius;\n          border-top-right-radius: 0;\n        }\n\n        border-bottom-right-radius: $border-radius;\n        border-top-right-radius: $border-radius;\n      }\n\n      &--selected {\n        @if not $disable-selected-icon {\n          @include transition.transition-set-var(max-width, icon.get-var(size));\n        }\n        @include use-var(background-color, selected-background-color);\n        @include use-var(color, selected-color);\n      }\n    }\n  }\n}\n',
  "@react-md/sheet/sheet":
    '@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../media-queries/media-queries";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$disable-position-left: false !default;\n$disable-position-right: false !default;\n$disable-position-bottom: false !default;\n$disable-position-top: false !default;\n\n$elevation: 2 !default;\n$raised-elevation: 16 !default;\n\n$enter-duration: transition.$enter-duration !default;\n$enter-timing-function: transition.$deceleration-timing-function !default;\n$leave-duration: transition.$leave-duration !default;\n$leave-timing-function: transition.$acceleration-timing-function !default;\n\n$z-index: 5 !default;\n$raised-z-index: utils.$temporary-element-z-index !default;\n\n$static-width: 16rem !default;\n$touch-margin: 3.5rem !default;\n$touch-width: calc(100vw - #{$touch-margin}) !default;\n\n$max-height: 100% !default;\n$touch-max-height: calc(100% - #{$touch-margin}) !default;\n$recommended-min-height: 3.5rem !default;\n$recommended-max-height: 50% !default;\n\n$variables: (\n  height,\n  width,\n  max-height,\n  touch-width,\n  touch-max-height,\n  static-width,\n  transform-offscreen,\n  z-index\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "sheet");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "sheet")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(touch-width, $touch-width);\n    @include set-var(touch-max-height, $touch-max-height);\n    @include set-var(static-width, $static-width);\n    @include set-var(z-index, $z-index);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-sheet {\n      @include box-shadows.box-shadow($elevation);\n      @include use-var(height);\n      @include use-var(max-height);\n      @include use-var(width);\n      @include use-var(z-index);\n\n      overflow: auto;\n      position: fixed;\n\n      @if not $disable-position-left or not $disable-position-right {\n        &--horizontal {\n          bottom: 0;\n          top: 0;\n        }\n      }\n\n      @if not $disable-position-bottom or not $disable-position-top {\n        &--vertical {\n          left: 0;\n          right: 0;\n        }\n      }\n\n      &--raised {\n        @include set-var(z-index, $raised-z-index);\n        @include box-shadows.box-shadow($raised-elevation);\n      }\n\n      @if not $disable-position-left {\n        &--left {\n          @include utils.auto-rtl(left, 0) {\n            @include set-var(transform-offscreen, translate3d(100%, 0, 0));\n          }\n          @include set-var(transform-offscreen, translate3d(-100%, 0, 0));\n        }\n      }\n\n      @if not $disable-position-right {\n        &--right {\n          @include utils.auto-rtl(right, 0) {\n            @include set-var(transform-offscreen, translate3d(-100%, 0, 0));\n          }\n          @include set-var(transform-offscreen, translate3d(100%, 0, 0));\n        }\n      }\n\n      @if not $disable-position-bottom {\n        &--bottom {\n          @include set-var(transform-offscreen, translate3d(0, 100%, 0));\n\n          bottom: 0;\n        }\n      }\n\n      @if not $disable-position-top {\n        &--top {\n          @include set-var(transform-offscreen, translate3d(0, -100%, 0));\n\n          top: 0;\n        }\n      }\n\n      &--touch-width {\n        @include set-var(width, get-var(touch-width));\n      }\n\n      &--static-width {\n        @include set-var(width, get-var(static-width));\n      }\n\n      &--media-width {\n        @include media-queries.tablet-media {\n          @include set-var(width, get-var(static-width));\n        }\n\n        @include set-var(width, get-var(touch-width));\n      }\n\n      &--viewport-height {\n        @include set-var(max-height, $max-height);\n      }\n\n      &--touchable-height {\n        @include set-var(max-height, get-var(touch-max-height));\n      }\n\n      &--recommended-height {\n        max-height: $recommended-max-height;\n        min-height: $recommended-min-height;\n      }\n\n      &--offscreen {\n        @include use-var(transform, transform-offscreen);\n      }\n\n      &--hidden {\n        box-shadow: none;\n      }\n\n      &--visible {\n        transform: translate3d(0, 0, 0);\n      }\n\n      &--enter {\n        transition: transform $enter-duration $enter-timing-function;\n      }\n\n      &--exit {\n        transition: transform $leave-duration $leave-timing-function;\n      }\n    }\n  }\n}\n',
  "@react-md/snackbar/snackbar":
    '@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../button/button";\n@use "../theme/a11y";\n@use "../theme/theme";\n@use "../icon/icon";\n@use "../media-queries/media-queries";\n@use "../interaction/interaction";\n@use "../typography/typography";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$disable-top: false !default;\n$disable-bottom: false !default;\n$disable-top-right: $disable-top !default;\n$disable-top-left: $disable-top !default;\n$disable-bottom-left: $disable-bottom !default;\n$disable-bottom-right: $disable-bottom !default;\n$disable-close-button: false !default;\n$disable-action-button: false !default;\n$disable-stacked: false !default;\n\n$default-align-items: center !default;\n$gap: 1rem !default;\n$toast-gap: 1rem !default;\n$toast-gap-stacked: 0.5rem !default;\n$toast-gap-both-buttons: 0.25rem !default;\n$margin: 1rem !default;\n$box-shadow: 6 !default;\n$border-radius: 0.25rem !default;\n$vertical-padding: 0.75em !default;\n$horizontal-padding: 1rem !default;\n$action-horizontal-padding: 0.5rem !default;\n$close-button-horizontal-padding: 0 !default;\n\n$min-height: 3rem !default;\n$min-width: 21.5rem !default;\n$max-width: 35.5rem !default;\n$z-index: utils.$temporary-element-z-index + 10 !default;\n\n$typography: map.merge(\n  typography.$base-font-styles,\n  typography.$subtitle-2-styles\n) !default;\n\n$light-theme-background-color: #323232 !default;\n$light-theme-color: a11y.contrast-color($light-theme-background-color) !default;\n\n$dark-theme-background-color: if(\n  theme.$disable-dark-elevation,\n  $light-theme-background-color,\n  map.get(theme.$dark-elevation-colors, $box-shadow)\n) !default;\n$dark-theme-color: a11y.contrast-color($dark-theme-background-color) !default;\n\n$background-color: theme.get-default-color(\n  $light-theme-background-color,\n  $dark-theme-background-color\n) !default;\n$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;\n\n$variables: (background-color, color, offset);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "snackbar");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "snackbar")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n    @include set-var(offset, 0);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-snackbar {\n      align-items: $default-align-items;\n      display: flex;\n      flex-direction: column;\n      gap: $gap;\n      left: 0;\n      margin: $margin;\n      pointer-events: none;\n      position: fixed;\n      right: 0;\n      z-index: $z-index;\n\n      @if not $disable-top or not $disable-top-left or not $disable-bottom-left\n      {\n        &--top {\n          @include use-var(top, offset);\n        }\n      }\n\n      @if not\n        $disable-bottom or not\n        $disable-bottom-left or not\n        $disable-bottom-right\n      {\n        &--bottom {\n          @include use-var(bottom, offset);\n        }\n      }\n\n      @if not $disable-top-left or not $disable-bottom-left {\n        &--start {\n          align-items: flex-start;\n        }\n      }\n\n      @if not $disable-top-right or not $disable-bottom-right {\n        &--end {\n          align-items: flex-end;\n        }\n      }\n    }\n\n    .rmd-toast {\n      @include box-shadows.box-shadow($box-shadow, $disable-colors: true);\n      @include utils.map-to-styles($typography);\n      @include use-var(background-color);\n      @include use-var(color);\n\n      align-items: center;\n      border-radius: $border-radius;\n      display: flex;\n      gap: $toast-gap;\n      justify-content: space-between;\n      max-width: $max-width;\n      min-height: $min-height;\n      padding-left: $horizontal-padding;\n      padding-right: $horizontal-padding;\n      pointer-events: auto;\n      width: 100%;\n\n      @include media-queries.tablet-media {\n        min-width: $min-width;\n        width: auto;\n      }\n\n      @if not $disable-action-button {\n        &--action {\n          @include utils.auto-rtl(\n            padding-right,\n            $action-horizontal-padding,\n            $horizontal-padding\n          );\n        }\n      }\n\n      @if not $disable-close-button {\n        &--x {\n          @include utils.auto-rtl(\n            padding-right,\n            $close-button-horizontal-padding,\n            $horizontal-padding\n          );\n        }\n\n        @if not $disable-action-button {\n          &--small-gap {\n            gap: $toast-gap-both-buttons;\n          }\n        }\n      }\n\n      @if not $disable-stacked {\n        &--stacked {\n          display: grid;\n          gap: $toast-gap-stacked;\n          grid-template-columns: 1fr;\n          padding-bottom: $vertical-padding;\n          padding-top: $vertical-padding;\n        }\n\n        &--reordered {\n          grid-template-columns: 1fr min-content;\n          padding-top: 0;\n        }\n      }\n    }\n\n    .rmd-toast-content {\n      flex: 1 1 auto;\n\n      p {\n        margin: 0;\n      }\n\n      &--v-padding {\n        padding: $vertical-padding 0;\n      }\n\n      &--t-padding {\n        padding-bottom: 0;\n      }\n\n      @if not $disable-action-button {\n        &--action {\n          @include utils.auto-rtl(\n            padding-right,\n            button.$text-horizontal-padding\n          );\n        }\n      }\n\n      @if not $disable-close-button and not $disable-action-button {\n        &--gap {\n          @include utils.auto-rtl(margin-right, $toast-gap);\n        }\n      }\n    }\n\n    @if not $disable-close-button {\n      .rmd-toast-x {\n        &--reordered {\n          align-self: flex-start;\n          order: 2;\n        }\n      }\n    }\n\n    @if not $disable-action-button {\n      .rmd-toast-action {\n        justify-self: flex-end;\n\n        &--reordered {\n          @include utils.auto-rtl(margin-right, $action-horizontal-padding);\n\n          grid-column-end: span 2;\n          order: 3;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/table/table":
    '@use "sass:map";\n@use "../utils";\n@use "../box-shadows";\n@use "../theme/theme";\n@use "../icon/icon";\n@use "../interaction/interaction";\n@use "../typography/typography";\n@use "../transition/transition";\n@use "../divider/divider";\n\n$disable-everything: false !default;\n$disable-container: false !default;\n$disable-dense: false !default;\n$disable-full-width: false !default;\n$disable-cell-align-top: false !default;\n$disable-cell-align-bottom: false !default;\n$disable-bordered: false !default;\n$disable-bordered-except-last: false !default;\n$disable-selected: false !default;\n$disable-clickable: false !default;\n$disable-hoverable: false !default;\n// convenience variable to disable all sticky behavior\n$disable-sticky: false !default;\n// disable the sticky cells (within tbody)\n$disable-sticky-cell: $disable-sticky !default;\n$disable-sticky-header: $disable-sticky !default;\n$disable-sticky-footer: $disable-sticky !default;\n$disable-input-toggle: false !default;\n$disable-cell-no-wrap: false !default;\n$disable-cell-grow: false !default;\n$disable-cell-no-padding: false !default;\n$disable-cell-sort: false !default;\n$disable-cell-grow: false !default;\n$disable-cell-vertical-padding: false !default;\n\n// defaults to `null` so it just inherits the background color\n$light-theme-background-color: null !default;\n$dark-theme-background-color: null !default;\n$background-color: theme.get-default-color(\n  $light-theme-background-color,\n  $dark-theme-background-color\n) !default;\n$light-theme-border-color: #e0e0e0 !default;\n$dark-theme-border-color: #2f2f2f !default;\n$border-color: theme.get-default-color(\n  $light-theme-border-color,\n  $dark-theme-border-color\n) !default;\n$border-size: divider.$size !default;\n\n$light-theme-header-background-color: null !default;\n$dark-theme-header-background-color: null !default;\n$header-background-color: theme.get-default-color(\n  $light-theme-header-background-color,\n  $dark-theme-header-background-color\n) !default;\n\n$cell-typography: typography.$body-2-styles !default;\n$cell-color: theme.theme-get-var(text-primary-color) !default;\n$cell-height: 3.25rem !default;\n$cell-dense-height: 2rem !default;\n$cell-header-color: $cell-color !default;\n$cell-header-typography: (\n  font-weight: map.get(typography.$subtitle-2-styles, font-weight),\n  letter-spacing: map.get(typography.$subtitle-2-styles, letter-spacing),\n  line-height: map.get(typography.$subtitle-2-styles, line-height),\n) !default;\n$cell-header-height: 3.5rem !default;\n$cell-header-dense-height: 2.125rem !default;\n$cell-horizontal-padding: 1rem !default;\n$cell-vertical-padding: 0.375rem !default;\n$cell-input-toggle-horizontal-padding: 0.5rem !default;\n$cell-content-gap: icon.$spacing !default;\n\n$sticky-cell-position: 0 !default;\n$sticky-header-position: 0 !default;\n$sticky-header-z-index: 2 !default;\n$sticky-header-cell-z-index: $sticky-header-z-index + 1 !default;\n$sticky-cell-z-index: $sticky-header-z-index - 1 !default;\n$sticky-footer-position: 0 !default;\n$sticky-footer-z-index: $sticky-header-z-index - 1 !default;\n$sticky-background-color: theme.theme-get-var(background-color) !default;\n$sticky-header-inactive-styles: (\n  transition: background transition.$linear-duration\n    transition.$linear-timing-function,\n  "&::after": (\n    box-shadow: box-shadows.box-shadow(4),\n    content: "",\n    inset: 0,\n    pointer-events: none,\n    opacity: 0,\n    position: absolute,\n    transition: opacity transition.$linear-duration\n      transition.$linear-timing-function,\n    z-index: 0,\n  ),\n) !default;\n$sticky-header-active-styles: (\n  "--rmd-background-color": theme.get-dark-elevation-color(4),\n  background-color: theme.theme-get-var(background-color),\n  "&::after": (\n    opacity: 1,\n  ),\n) !default;\n$sticky-footer-inactive-styles: $sticky-header-inactive-styles !default;\n$sticky-footer-active-styles: $sticky-header-active-styles !default;\n\n$row-hover-color: interaction.get-var(hover-background-color) !default;\n$row-selected-color: interaction.get-var(selected-background-color) !default;\n\n$variables: (\n  background-color,\n  border-size,\n  border-color,\n  header-background-color,\n  cell-color,\n  cell-height,\n  cell-horizontal-padding,\n  cell-vertical-padding,\n  header-cell-height,\n  hover-color,\n  selected-color,\n  sticky-cell,\n  sticky-header,\n  sticky-footer,\n  sticky-background-color\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "table");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "table")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n// these have to be initialized after the css-var stuff to work\n$row-hover-styles: (\n  background-color: get-var(hover-color),\n) !default;\n$row-selected-styles: (\n  background-color: get-var(selected-color),\n) !default;\n\n@mixin use-light-theme {\n  @if not $disable-everything {\n    @include set-var(border-color, $light-theme-border-color);\n    @if $light-theme-background-color {\n      @include set-var(background-color, $light-theme-background-color);\n    }\n\n    @if $light-theme-header-background-color {\n      @include set-var(header-color, $light-theme-header-background-color);\n    }\n  }\n}\n\n@mixin use-dark-theme {\n  @if not $disable-everything {\n    @include set-var(border-color, $dark-theme-border-color);\n    @if $dark-theme-background-color {\n      @include set-var(background-color, $dark-theme-background-color);\n    }\n\n    @if $dark-theme-header-background-color {\n      @include set-var(header-color, $dark-theme-header-background-color);\n    }\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(header-background-color, $header-background-color);\n    @include set-var(cell-color, $cell-color);\n    @include set-var(cell-height, $cell-height);\n    @include set-var(cell-horizontal-padding, $cell-horizontal-padding);\n    @include set-var(cell-vertical-padding, $cell-vertical-padding);\n    @include set-var(header-cell-height, $cell-header-height);\n    @include set-var(selected-color, $row-selected-color);\n\n    @if not $disable-bordered {\n      @include set-var(border-size, $border-size);\n      @include set-var(border-color, $border-color);\n    }\n    @if not $disable-hoverable {\n      @include set-var(hover-color, $row-hover-color);\n    }\n    @if not $disable-sticky-cell {\n      @include set-var(sticky-cell, $sticky-cell-position);\n    }\n    @if not $disable-sticky-header {\n      @include set-var(sticky-header, $sticky-header-position);\n    }\n    @if not $disable-sticky-footer {\n      @include set-var(sticky-footer, $sticky-footer-position);\n    }\n    @if not $disable-sticky-header or not $disable-sticky-footer {\n      @include set-var(sticky-background-color, $sticky-background-color);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @if not $disable-container {\n      .rmd-table-container {\n        max-width: 100%;\n        overflow: auto;\n      }\n    }\n\n    .rmd-table {\n      @include use-var(background-color);\n\n      // NOTE: Switched from `border-collapse: collapse` to `border-spacing: 0`\n      // since enabling sticky headers removed the borders for some reason in\n      // firefox. all I really wanted was the spacing to be removed from each\n      // cell, so border-spacing seems better.\n      border-spacing: 0;\n      max-width: 100%;\n\n      @if not $disable-full-width {\n        &--full-width {\n          width: 100%;\n        }\n      }\n    }\n\n    .rmd-thead {\n      @include use-var(background-color, header-background-color);\n      @if $cell-height != $cell-header-height {\n        @include set-var(cell-height, $cell-header-height);\n      }\n\n      @if not $disable-dense and $cell-dense-height {\n        &--dense {\n          @include set-var(cell-height, $cell-header-dense-height);\n        }\n      }\n\n      @if not $disable-sticky-header {\n        &--sticky {\n          @include use-var(background-color, sticky-background-color);\n          @include use-var(top, sticky-header);\n          @include utils.map-to-styles($sticky-header-inactive-styles);\n\n          position: sticky;\n          z-index: $sticky-header-z-index;\n        }\n\n        &--sticky-active {\n          @include utils.map-to-styles($sticky-header-active-styles);\n        }\n      }\n    }\n\n    .rmd-tfoot {\n      @if not $disable-sticky-footer {\n        &--sticky {\n          @include use-var(background-color, sticky-background-color);\n          @include use-var(bottom, sticky-footer);\n          @include utils.map-to-styles($sticky-footer-inactive-styles);\n\n          position: sticky;\n          z-index: $sticky-footer-z-index;\n        }\n\n        &--sticky-active {\n          @include utils.map-to-styles($sticky-footer-active-styles);\n        }\n      }\n    }\n\n    .rmd-tr {\n      @if not $disable-clickable {\n        &--clickable:hover {\n          cursor: pointer;\n        }\n      }\n\n      @if not $disable-selected {\n        &--selected {\n          @include utils.map-to-styles($row-selected-styles);\n        }\n      }\n\n      @if not $disable-bordered {\n        &--bordered {\n          border-bottom: get-var(border-size) solid get-var(border-color);\n\n          @if not $disable-bordered-except-last {\n            &:last-child {\n              border-bottom-width: 0;\n            }\n          }\n        }\n      }\n\n      @if not $disable-hoverable {\n        &--hoverable {\n          @include utils.mouse-only {\n            transition: background transition.$linear-duration\n              transition.$linear-timing-function;\n\n            &:hover {\n              @include utils.map-to-styles($row-hover-styles);\n            }\n          }\n        }\n      }\n    }\n\n    .rmd-table-cell {\n      @include utils.map-to-styles($cell-typography);\n      @include use-var(color, cell-color);\n      @include use-var(height, cell-height);\n\n      border: inherit;\n      padding: 0 get-var(cell-horizontal-padding);\n\n      &--header {\n        @include utils.map-to-styles($cell-header-typography);\n        @if $cell-color != $cell-header-color {\n          @include set-var(cell-color, $cell-header-color);\n        }\n      }\n\n      @if not $disable-cell-align-top {\n        &--top {\n          vertical-align: top;\n        }\n      }\n\n      @if not $disable-cell-align-bottom {\n        &--bottom {\n          vertical-align: bottom;\n        }\n      }\n\n      @if not $disable-sticky-cell {\n        &--sticky {\n          position: sticky;\n          will-change: transform;\n        }\n\n        &--sticky-cell {\n          @include utils.auto-rtl(left, get-var(sticky-cell));\n          @include theme.theme-use-var(background-color);\n\n          transition: background-color transition.$linear-duration;\n          z-index: $sticky-cell-z-index;\n\n          &::after {\n            @include utils.pseudo-element;\n\n            background-color: transparent;\n            transition: background\n              transition.$linear-duration\n              transition.$linear-timing-function;\n\n            .rmd-tr--hoverable:hover & {\n              @include utils.map-to-styles($row-hover-styles);\n            }\n\n            .rmd-tr--selected & {\n              @include utils.map-to-styles($row-selected-styles);\n            }\n          }\n        }\n\n        @if not $disable-sticky-header {\n          &--sticky-header {\n            @include use-var(top, sticky-header);\n\n            z-index: $sticky-header-z-index;\n          }\n        }\n\n        @if not $disable-input-toggle and not $disable-sticky-header {\n          &--sticky-header-cell {\n            z-index: $sticky-header-cell-z-index;\n          }\n        }\n      }\n\n      @if not $disable-input-toggle {\n        &--input-toggle {\n          @include set-var(\n            cell-horizontal-padding,\n            $cell-input-toggle-horizontal-padding\n          );\n        }\n      }\n\n      @if not $disable-cell-grow {\n        &--grow {\n          width: 100%;\n        }\n      }\n\n      @if not $disable-cell-no-wrap {\n        &--no-wrap {\n          @include typography.text-overflow;\n        }\n      }\n\n      @if not $disable-cell-vertical-padding {\n        &--v-padding {\n          @include use-var(padding-bottom, cell-vertical-padding);\n          @include use-var(padding-top, cell-vertical-padding);\n        }\n      }\n\n      @if not $disable-cell-sort {\n        &--no-padding {\n          padding: 0;\n        }\n\n        &__content {\n          @include use-var(padding-left, cell-horizontal-padding);\n          @include use-var(padding-right, cell-horizontal-padding);\n\n          align-items: center;\n          color: inherit;\n          font: inherit;\n          gap: $cell-content-gap;\n          height: 100%;\n          width: 100%;\n        }\n      }\n    }\n  }\n}\n',
  "@react-md/tabs/tabs":
    '@use "sass:map";\n\n@use "../utils";\n@use "../theme/theme";\n@use "../transition/transition";\n@use "../typography/typography";\n@use "../interaction/interaction";\n@use "../icon/icon";\n\n$disable-everything: false !default;\n$disable-icon: false !default;\n$disable-stacked: false !default;\n$disable-reversed: false !default;\n$disable-tablist-padded: false !default;\n$disable-tablist-vertical: false !default;\n$disable-tablist-indicator: false !default;\n$disable-tablist-hidden-scrollbar: false !default;\n$disable-tablist-scroll-button: false !default;\n$disable-tablist-active-indicator-transition: false !default;\n$disable-indicator: false !default;\n$disable-indicator-vertical: false !default;\n\n$typography: map.remove(typography.$button-styles, line-height) !default;\n$gap: icon.$spacing !default;\n$height: 3rem !default;\n$stacked-height: 4.5rem !default;\n$horizontal-padding: 1rem !default;\n$vertical-padding: 0.75rem !default;\n$min-width: 5.625rem !default;\n$max-width: 20rem !default;\n$indicator-height: 0.125rem !default;\n$indicator-background: theme.theme-get-var(primary-color) !default;\n$active-color: theme.theme-get-var(text-primary-color) !default;\n$inactive-color: theme.theme-get-var(text-secondary-color) !default;\n$disabled-color: theme.theme-get-var(text-disabled-color) !default;\n$transition-duration: transition.$linear-duration !default;\n$transition-timing-function: transition.$linear-timing-function !default;\n\n$tablist-padding-left: 3.25rem !default;\n$tablist-scroller-z-index: 2 !default;\n$tablist-scroller-background-color: theme.theme-get-var(\n  background-color,\n  inherit\n) !default;\n$tablist-vertical-indicator-left: 0 !default;\n\n$variables: (\n  color,\n  active-color,\n  inactive-color,\n  disabled-color,\n  indicator-background\n);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "tab");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "tab")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin indicator-styles {\n  .rmd-tab-indicator {\n    &::after {\n      @include use-var(background, indicator-background);\n\n      content: "";\n      pointer-events: none;\n      position: absolute;\n      z-index: 1;\n    }\n\n    &--h::after {\n      bottom: 0;\n      height: $indicator-height;\n      width: 100%;\n    }\n\n    @if not $disable-indicator-vertical {\n      &--v::after {\n        @include utils.auto-rtl(left, $tablist-vertical-indicator-left);\n\n        height: 100%;\n        top: 0;\n        width: $indicator-height;\n      }\n    }\n\n    @if not $disable-tablist-indicator {\n      &--tablist-h::after {\n        left: 0;\n        max-width: var(--rmd-tab-size, $min-width);\n        transform: translateX(var(--rmd-tab-offset, 0));\n      }\n\n      @if not $disable-tablist-vertical {\n        &--tablist-v::after {\n          max-height: var(--rmd-tab-size, $min-width);\n          transform: translateY(var(--rmd-tab-offset, 0));\n        }\n      }\n    }\n\n    @if not $disable-tablist-active-indicator-transition {\n      &--animate::after {\n        transition-duration: $transition-duration;\n        transition-property: transform, max-width;\n        transition-timing-function: $transition-timing-function;\n      }\n    }\n  }\n}\n\n@mixin tablist-styles {\n  .rmd-tablist {\n    display: inline-flex;\n    // disable shrinking since tabs should normally be full width and this\n    // also fixes issues when placed within a flex column container\n    flex-shrink: 0;\n    flex-wrap: nowrap;\n    // make sure it can enable scrollbars in flex/grid containers\n    max-width: 100%;\n    outline: none;\n    overflow-x: auto;\n    position: relative;\n\n    &--full-width {\n      display: flex;\n      width: 100%;\n    }\n\n    @if not $disable-tablist-hidden-scrollbar {\n      &--no-scrollbar {\n        @include utils.hide-scrollbar;\n      }\n    }\n\n    @if not $disable-tablist-vertical {\n      &--vertical {\n        flex-direction: column;\n      }\n    }\n\n    @if not $disable-tablist-padded {\n      &--padded {\n        @include utils.auto-rtl(padding-left, $tablist-padding-left);\n      }\n    }\n\n    &--center {\n      justify-content: center;\n    }\n  }\n}\n\n@mixin tablist-button-styles {\n  .rmd-tablist-button {\n    align-items: center;\n    background-color: $tablist-scroller-background-color;\n    display: inline-flex;\n    flex-shrink: 0;\n    justify-content: center;\n    position: sticky;\n    z-index: $tablist-scroller-z-index;\n\n    &--left {\n      @include utils.auto-rtl(left, 0);\n    }\n\n    &--right {\n      @include utils.auto-rtl(right, 0);\n    }\n\n    &__button {\n      @include utils.rtl {\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n@mixin tab-styles {\n  .rmd-tab {\n    @include utils.map-to-styles($typography);\n    @include use-var(color);\n    @if not $disable-icon {\n      @include icon.set-var(color, currentcolor);\n    }\n\n    align-items: center;\n    background-color: transparent;\n    border-width: 0;\n    display: inline-flex;\n    flex: 1 1 auto;\n    gap: $gap;\n    height: $height;\n    justify-content: center;\n    max-width: $max-width;\n    min-width: $min-width;\n    padding: 0 $horizontal-padding;\n    transition: color $transition-duration $transition-timing-function;\n\n    @if not $disable-stacked {\n      &--stacked {\n        flex-direction: column;\n        height: $stacked-height;\n        padding: $vertical-padding $horizontal-padding;\n      }\n\n      @if not $disable-reversed {\n        &--stacked-reversed {\n          flex-direction: column-reverse;\n        }\n      }\n    }\n\n    @if not $disable-reversed {\n      &--reversed {\n        flex-direction: row-reverse;\n      }\n    }\n\n    &--active {\n      @include set-var(color, get-var(active-color));\n    }\n\n    &--disabled {\n      @include set-var(color, get-var(disabled-color));\n    }\n  }\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(color, $inactive-color);\n    @include set-var(active-color, $active-color);\n    @include set-var(inactive-color, $inactive-color);\n    @include set-var(disabled-color, $disabled-color);\n\n    @if not $disable-indicator {\n      @include set-var(indicator-background, $indicator-background);\n    }\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    @include tablist-styles;\n    @include tab-styles;\n\n    @if not $disable-indicator {\n      @include indicator-styles;\n    }\n\n    @if not $disable-tablist-scroll-button {\n      @include tablist-button-styles;\n    }\n  }\n}\n',
  "@react-md/theme/a11y":
    '@use "sass:color";\n@use "sass:list";\n@use "sass:math";\n\n$contrast-ratio: 3 !default;\n\n$linear-channel-values: (\n  0 0.0003035269835488375 0.000607053967097675 0.0009105809506465125\n    0.00121410793419535 0.0015176349177441874 0.001821161901293025\n    0.0021246888848418626 0.0024282158683907 0.0027317428519395373\n    0.003035269835488375 0.003346535763899161 0.003676507324047436\n    0.004024717018496307 0.004391442037410293 0.004776953480693729\n    0.005181516702338386 0.005605391624202723 0.006048833022857054\n    0.006512090792594475 0.006995410187265387 0.007499032043226175\n    0.008023192985384994 0.008568125618069307 0.009134058702220787\n    0.00972121732023785 0.010329823029626936 0.010960094006488246\n    0.011612245179743885 0.012286488356915872 0.012983032342173012\n    0.013702083047289686 0.014443843596092545 0.01520851442291271\n    0.01599629336550963 0.016807375752887384 0.017641954488384078\n    0.018500220128379697 0.019382360956935723 0.0202885630566524\n    0.021219010376003555 0.022173884793387385 0.02315336617811041\n    0.024157632448504756 0.02518685962736163 0.026241221894849898\n    0.027320891639074894 0.028426039504420793 0.0295568344378088\n    0.030713443732993635 0.03189603307301153 0.033104766570885055\n    0.03433980680868217 0.03560131487502034 0.03688945040110004\n    0.0382043715953465 0.03954623527673284 0.04091519690685319\n    0.042311410620809675 0.043735029256973465 0.04518620438567554\n    0.046665086336880095 0.04817182422688942 0.04970656598412723\n    0.05126945837404324 0.052860647023180246 0.05448027644244237\n    0.05612849004960009 0.05780543019106723 0.0595112381629812\n    0.06124605423161761 0.06301001765316767 0.06480326669290577\n    0.06662593864377289 0.06847816984440017 0.07036009569659588\n    0.07227185068231748 0.07421356838014963 0.07618538148130785\n    0.07818742180518633 0.08021982031446832 0.0822827071298148\n    0.08437621154414882 0.08650046203654976 0.08865558628577294\n    0.09084171118340768 0.09305896284668745 0.0953074666309647\n    0.09758734714186246 0.09989872824711389 0.10224173308810132\n    0.10461648409110419 0.10702310297826761 0.10946171077829933\n    0.1119324278369056 0.11443537382697373 0.11697066775851084\n    0.11953842798834562 0.12213877222960187 0.12477181756095049\n    0.12743768043564743 0.1301364766903643 0.13286832155381798\n    0.13563332965520566 0.13843161503245183 0.14126329114027164\n    0.14412847085805777 0.14702726649759498 0.14995978981060856\n    0.15292615199615017 0.1559264637078274 0.1589608350608804 0.162029375639111\n    0.1651321945016676 0.16826940018969075 0.1714411007328226\n    0.17464740365558504 0.17788841598362912 0.18116424424986022\n    0.184474994500441 0.18782077230067787 0.19120168274079138 0.1946178304415758\n    0.19806931955994886 0.20155625379439707 0.20507873639031693\n    0.20863687014525575 0.21223075741405523 0.21586050011389926\n    0.2195261997292692 0.2232279573168085 0.22696587351009836\n    0.23074004852434915 0.23455058216100522 0.238397573812271\n    0.24228112246555486 0.24620132670783548 0.25015828472995344\n    0.25415209433082675 0.2581828529215958 0.26225065752969623\n    0.26635560480286247 0.2704977910130658 0.27467731206038465\n    0.2788942634768104 0.2831487404299921 0.2874408377269175 0.29177064981753587\n    0.2961382707983211 0.3005437944157765 0.3049873140698863 0.30946892281750854\n    0.31398871337571754 0.31854677812509186 0.32314320911295075\n    0.3277780980565422 0.33245153634617935 0.33716361504833037\n    0.3419144249086609 0.3467040563550296 0.35153259950043936 0.3564001441459435\n    0.3613067797835095 0.3662525955988395 0.3712376804741491 0.3762621229909065\n    0.38132601143253014 0.386429433787049 0.39157247774972326\n    0.39675523072562685 0.4019777798321958 0.4072402119017367\n    0.41254261348390375 0.4178850708481375 0.4232676699860717 0.4286904966139066\n    0.43415363617474895 0.4396571738409188 0.44520119451622786\n    0.45078578283822346 0.45641102318040466 0.4620769996544071 0.467783796112159\n    0.47353149614800955 0.4793201831008268 0.4851499400560704 0.4910208498478356\n    0.4969329950608704 0.5028864580325687 0.5088813208549338 0.5149176653765214\n    0.5209955732043543 0.5271151257058131 0.5332764040105052 0.5394794890121072\n    0.5457244613701866 0.5520114015120001 0.5583403896342679 0.5647115057049292\n    0.5711248294648731 0.5775804404296506 0.5840784178911641 0.5906188409193369\n    0.5972017883637634 0.6038273388553378 0.6104955708078648 0.6172065624196511\n    0.6239603916750761 0.6307571363461468 0.6375968739940326 0.6444796819705821\n    0.6514056374198242 0.6583748172794485 0.665387298282272 0.6724431569576875\n    0.6795424696330938 0.6866853124353135 0.6938717612919899 0.7011018919329731\n    0.7083757798916868 0.7156935005064807 0.7230551289219693 0.7304607400903537\n    0.7379104087727308 0.7454042095403874 0.7529422167760779 0.7605245046752924\n    0.768151147247507 0.7758222183174236 0.7835377915261935 0.7912979403326302\n    0.799102738014409 0.8069522576692516 0.8148465722161012 0.8227857543962835\n    0.8307698767746546 0.83879901174074 0.846873231509858 0.8549926081242338\n    0.8631572134541023 0.8713671191987972 0.8796223968878317 0.8879231178819663\n    0.8962693533742664 0.9046611743911496 0.9130986517934192 0.9215818562772946\n    0.9301108583754237 0.938685728457888 0.9473065367331999 0.9559733532492861\n    0.9646862478944651 0.9734452903984125 0.9822505503331171 0.9911020971138298\n    1\n);\n\n@function luminance($color) {\n  $red: list.nth($linear-channel-values, color.red($color) + 1);\n  $red-multiplier: 0.2126;\n  $green: list.nth($linear-channel-values, color.green($color) + 1);\n  $green-multiplier: 0.7152;\n  $blue: list.nth($linear-channel-values, color.blue($color) + 1);\n  $blue-multiplier: 0.0722;\n\n  @return ($red * $red-multiplier) + ($green * $green-multiplier) +\n    ($blue * $blue-multiplier);\n}\n\n@function contrast($back, $front) {\n  $back-luminance: luminance($back) + 0.05;\n  $front-luminance: luminance($front) + 0.05;\n\n  @return math.div(\n    max($back-luminance, $front-luminance),\n    min($back-luminance, $front-luminance)\n  );\n}\n\n@function contrast-color($color, $light-color: #fff, $dark-color: #000) {\n  $light-contrast: contrast($color, $light-color);\n  $dark-contrast: contrast($color, $dark-color);\n\n  @return if($light-contrast > $dark-contrast, $light-color, $dark-color);\n}\n',
  "@react-md/theme/colors":
    '/// @type Color\n$red-50: #ffebee;\n\n/// @type Color\n$red-100: #ffcdd2;\n\n/// @type Color\n$red-200: #ef9a9a;\n\n/// @type Color\n$red-300: #e57373;\n\n/// @type Color\n$red-400: #ef5350;\n\n/// @type Color\n$red-500: #f44336;\n\n/// @type Color\n$red-600: #e53935;\n\n/// @type Color\n$red-700: #d32f2f;\n\n/// @type Color\n$red-800: #c62828;\n\n/// @type Color\n$red-900: #b71c1c;\n\n/// @type Color\n$red-a-100: #ff8a80;\n\n/// @type Color\n$red-a-200: #ff5252;\n\n/// @type Color\n$red-a-400: #ff1744;\n\n/// @type Color\n$red-a-700: #d50000;\n\n/// @type Color\n$pink-50: #fce4ec;\n\n/// @type Color\n$pink-100: #f8bbd0;\n\n/// @type Color\n$pink-200: #f48fb1;\n\n/// @type Color\n$pink-300: #f06292;\n\n/// @type Color\n$pink-400: #ec407a;\n\n/// @type Color\n$pink-500: #e91e63;\n\n/// @type Color\n$pink-600: #d81b60;\n\n/// @type Color\n$pink-700: #c2185b;\n\n/// @type Color\n$pink-800: #ad1457;\n\n/// @type Color\n$pink-900: #880e4f;\n\n/// @type Color\n$pink-a-100: #ff80ab;\n\n/// @type Color\n$pink-a-200: #ff4081;\n\n/// @type Color\n$pink-a-400: #f50057;\n\n/// @type Color\n$pink-a-700: #c51162;\n\n/// @type Color\n$purple-50: #f3e5f5;\n\n/// @type Color\n$purple-100: #e1bee7;\n\n/// @type Color\n$purple-200: #ce93d8;\n\n/// @type Color\n$purple-300: #ba68c8;\n\n/// @type Color\n$purple-400: #ab47bc;\n\n/// @type Color\n$purple-500: #9c27b0;\n\n/// @type Color\n$purple-600: #8e24aa;\n\n/// @type Color\n$purple-700: #7b1fa2;\n\n/// @type Color\n$purple-800: #6a1b9a;\n\n/// @type Color\n$purple-900: #4a148c;\n\n/// @type Color\n$purple-a-100: #ea80fc;\n\n/// @type Color\n$purple-a-200: #e040fb;\n\n/// @type Color\n$purple-a-400: #d500f9;\n\n/// @type Color\n$purple-a-700: #a0f;\n\n/// @type Color\n$deep-purple-50: #ede7f6;\n\n/// @type Color\n$deep-purple-100: #d1c4e9;\n\n/// @type Color\n$deep-purple-200: #b39ddb;\n\n/// @type Color\n$deep-purple-300: #9575cd;\n\n/// @type Color\n$deep-purple-400: #7e57c2;\n\n/// @type Color\n$deep-purple-500: #673ab7;\n\n/// @type Color\n$deep-purple-600: #5e35b1;\n\n/// @type Color\n$deep-purple-700: #512da8;\n\n/// @type Color\n$deep-purple-800: #4527a0;\n\n/// @type Color\n$deep-purple-900: #311b92;\n\n/// @type Color\n$deep-purple-a-100: #b388ff;\n\n/// @type Color\n$deep-purple-a-200: #7c4dff;\n\n/// @type Color\n$deep-purple-a-400: #651fff;\n\n/// @type Color\n$deep-purple-a-700: #6200ea;\n\n/// @type Color\n$indigo-50: #e8eaf6;\n\n/// @type Color\n$indigo-100: #c5cae9;\n\n/// @type Color\n$indigo-200: #9fa8da;\n\n/// @type Color\n$indigo-300: #7986cb;\n\n/// @type Color\n$indigo-400: #5c6bc0;\n\n/// @type Color\n$indigo-500: #3f51b5;\n\n/// @type Color\n$indigo-600: #3949ab;\n\n/// @type Color\n$indigo-700: #303f9f;\n\n/// @type Color\n$indigo-800: #283593;\n\n/// @type Color\n$indigo-900: #1a237e;\n\n/// @type Color\n$indigo-a-100: #8c9eff;\n\n/// @type Color\n$indigo-a-200: #536dfe;\n\n/// @type Color\n$indigo-a-400: #3d5afe;\n\n/// @type Color\n$indigo-a-700: #304ffe;\n\n/// @type Color\n$blue-50: #e3f2fd;\n\n/// @type Color\n$blue-100: #bbdefb;\n\n/// @type Color\n$blue-200: #90caf9;\n\n/// @type Color\n$blue-300: #64b5f6;\n\n/// @type Color\n$blue-400: #42a5f5;\n\n/// @type Color\n$blue-500: #2196f3;\n\n/// @type Color\n$blue-600: #1e88e5;\n\n/// @type Color\n$blue-700: #1976d2;\n\n/// @type Color\n$blue-800: #1565c0;\n\n/// @type Color\n$blue-900: #0d47a1;\n\n/// @type Color\n$blue-a-100: #82b1ff;\n\n/// @type Color\n$blue-a-200: #448aff;\n\n/// @type Color\n$blue-a-400: #2979ff;\n\n/// @type Color\n$blue-a-700: #2962ff;\n\n/// @type Color\n$light-blue-50: #e1f5fe;\n\n/// @type Color\n$light-blue-100: #b3e5fc;\n\n/// @type Color\n$light-blue-200: #81d4fa;\n\n/// @type Color\n$light-blue-300: #4fc3f7;\n\n/// @type Color\n$light-blue-400: #29b6f6;\n\n/// @type Color\n$light-blue-500: #03a9f4;\n\n/// @type Color\n$light-blue-600: #039be5;\n\n/// @type Color\n$light-blue-700: #0288d1;\n\n/// @type Color\n$light-blue-800: #0277bd;\n\n/// @type Color\n$light-blue-900: #01579b;\n\n/// @type Color\n$light-blue-a-100: #80d8ff;\n\n/// @type Color\n$light-blue-a-200: #40c4ff;\n\n/// @type Color\n$light-blue-a-400: #00b0ff;\n\n/// @type Color\n$light-blue-a-700: #0091ea;\n\n/// @type Color\n$cyan-50: #e0f7fa;\n\n/// @type Color\n$cyan-100: #b2ebf2;\n\n/// @type Color\n$cyan-200: #80deea;\n\n/// @type Color\n$cyan-300: #4dd0e1;\n\n/// @type Color\n$cyan-400: #26c6da;\n\n/// @type Color\n$cyan-500: #00bcd4;\n\n/// @type Color\n$cyan-600: #00acc1;\n\n/// @type Color\n$cyan-700: #0097a7;\n\n/// @type Color\n$cyan-800: #00838f;\n\n/// @type Color\n$cyan-900: #006064;\n\n/// @type Color\n$cyan-a-100: #84ffff;\n\n/// @type Color\n$cyan-a-200: #18ffff;\n\n/// @type Color\n$cyan-a-400: #00e5ff;\n\n/// @type Color\n$cyan-a-700: #00b8d4;\n\n/// @type Color\n$teal-50: #e0f2f1;\n\n/// @type Color\n$teal-100: #b2dfdb;\n\n/// @type Color\n$teal-200: #80cbc4;\n\n/// @type Color\n$teal-300: #4db6ac;\n\n/// @type Color\n$teal-400: #26a69a;\n\n/// @type Color\n$teal-500: #009688;\n\n/// @type Color\n$teal-600: #00897b;\n\n/// @type Color\n$teal-700: #00796b;\n\n/// @type Color\n$teal-800: #00695c;\n\n/// @type Color\n$teal-900: #004d40;\n\n/// @type Color\n$teal-a-100: #a7ffeb;\n\n/// @type Color\n$teal-a-200: #64ffda;\n\n/// @type Color\n$teal-a-400: #1de9b6;\n\n/// @type Color\n$teal-a-700: #00bfa5;\n\n/// @type Color\n$green-50: #e8f5e9;\n\n/// @type Color\n$green-100: #c8e6c9;\n\n/// @type Color\n$green-200: #a5d6a7;\n\n/// @type Color\n$green-300: #81c784;\n\n/// @type Color\n$green-400: #66bb6a;\n\n/// @type Color\n$green-500: #4caf50;\n\n/// @type Color\n$green-600: #43a047;\n\n/// @type Color\n$green-700: #388e3c;\n\n/// @type Color\n$green-800: #2e7d32;\n\n/// @type Color\n$green-900: #1b5e20;\n\n/// @type Color\n$green-a-100: #b9f6ca;\n\n/// @type Color\n$green-a-200: #69f0ae;\n\n/// @type Color\n$green-a-400: #00e676;\n\n/// @type Color\n$green-a-700: #00c853;\n\n/// @type Color\n$light-green-50: #f1f8e9;\n\n/// @type Color\n$light-green-100: #dcedc8;\n\n/// @type Color\n$light-green-200: #c5e1a5;\n\n/// @type Color\n$light-green-300: #aed581;\n\n/// @type Color\n$light-green-400: #9ccc65;\n\n/// @type Color\n$light-green-500: #8bc34a;\n\n/// @type Color\n$light-green-600: #7cb342;\n\n/// @type Color\n$light-green-700: #689f38;\n\n/// @type Color\n$light-green-800: #558b2f;\n\n/// @type Color\n$light-green-900: #33691e;\n\n/// @type Color\n$light-green-a-100: #ccff90;\n\n/// @type Color\n$light-green-a-200: #b2ff59;\n\n/// @type Color\n$light-green-a-400: #76ff03;\n\n/// @type Color\n$light-green-a-700: #64dd17;\n\n/// @type Color\n$lime-50: #f9fbe7;\n\n/// @type Color\n$lime-100: #f0f4c3;\n\n/// @type Color\n$lime-200: #e6ee9c;\n\n/// @type Color\n$lime-300: #dce775;\n\n/// @type Color\n$lime-400: #d4e157;\n\n/// @type Color\n$lime-500: #cddc39;\n\n/// @type Color\n$lime-600: #c0ca33;\n\n/// @type Color\n$lime-700: #afb42b;\n\n/// @type Color\n$lime-800: #9e9d24;\n\n/// @type Color\n$lime-900: #827717;\n\n/// @type Color\n$lime-a-100: #f4ff81;\n\n/// @type Color\n$lime-a-200: #eeff41;\n\n/// @type Color\n$lime-a-400: #c6ff00;\n\n/// @type Color\n$lime-a-700: #aeea00;\n\n/// @type Color\n$yellow-50: #fffde7;\n\n/// @type Color\n$yellow-100: #fff9c4;\n\n/// @type Color\n$yellow-200: #fff59d;\n\n/// @type Color\n$yellow-300: #fff176;\n\n/// @type Color\n$yellow-400: #ffee58;\n\n/// @type Color\n$yellow-500: #ffeb3b;\n\n/// @type Color\n$yellow-600: #fdd835;\n\n/// @type Color\n$yellow-700: #fbc02d;\n\n/// @type Color\n$yellow-800: #f9a825;\n\n/// @type Color\n$yellow-900: #f57f17;\n\n/// @type Color\n$yellow-a-100: #ffff8d;\n\n/// @type Color\n$yellow-a-200: #ff0;\n\n/// @type Color\n$yellow-a-400: #ffea00;\n\n/// @type Color\n$yellow-a-700: #ffd600;\n\n/// @type Color\n$amber-50: #fff8e1;\n\n/// @type Color\n$amber-100: #ffecb3;\n\n/// @type Color\n$amber-200: #ffe082;\n\n/// @type Color\n$amber-300: #ffd54f;\n\n/// @type Color\n$amber-400: #ffca28;\n\n/// @type Color\n$amber-500: #ffc107;\n\n/// @type Color\n$amber-600: #ffb300;\n\n/// @type Color\n$amber-700: #ffa000;\n\n/// @type Color\n$amber-800: #ff8f00;\n\n/// @type Color\n$amber-900: #ff6f00;\n\n/// @type Color\n$amber-a-100: #ffe57f;\n\n/// @type Color\n$amber-a-200: #ffd740;\n\n/// @type Color\n$amber-a-400: #ffc400;\n\n/// @type Color\n$amber-a-700: #ffab00;\n\n/// @type Color\n$orange-50: #fff3e0;\n\n/// @type Color\n$orange-100: #fff0b2;\n\n/// @type Color\n$orange-200: #ffcc80;\n\n/// @type Color\n$orange-300: #ffb74d;\n\n/// @type Color\n$orange-400: #ffa726;\n\n/// @type Color\n$orange-500: #ff9800;\n\n/// @type Color\n$orange-600: #fb8c00;\n\n/// @type Color\n$orange-700: #f57c00;\n\n/// @type Color\n$orange-800: #ef6c00;\n\n/// @type Color\n$orange-900: #e65100;\n\n/// @type Color\n$orange-a-100: #ffd180;\n\n/// @type Color\n$orange-a-200: #ffab40;\n\n/// @type Color\n$orange-a-400: #ff9100;\n\n/// @type Color\n$orange-a-700: #ff6d00;\n\n/// @type Color\n$deep-orange-50: #fbe9e7;\n\n/// @type Color\n$deep-orange-100: #ffccbc;\n\n/// @type Color\n$deep-orange-200: #ffab91;\n\n/// @type Color\n$deep-orange-300: #ff8a65;\n\n/// @type Color\n$deep-orange-400: #ff7043;\n\n/// @type Color\n$deep-orange-500: #ff5722;\n\n/// @type Color\n$deep-orange-600: #f4511e;\n\n/// @type Color\n$deep-orange-700: #e64a19;\n\n/// @type Color\n$deep-orange-800: #d84315;\n\n/// @type Color\n$deep-orange-900: #bf360c;\n\n/// @type Color\n$deep-orange-a-100: #ff9e80;\n\n/// @type Color\n$deep-orange-a-200: #ff6e40;\n\n/// @type Color\n$deep-orange-a-400: #ff3d00;\n\n/// @type Color\n$deep-orange-a-700: #dd2c00;\n\n/// @type Color\n$brown-50: #efebe9;\n\n/// @type Color\n$brown-100: #d7ccc8;\n\n/// @type Color\n$brown-200: #bcaaa4;\n\n/// @type Color\n$brown-300: #a1887f;\n\n/// @type Color\n$brown-400: #8d6e63;\n\n/// @type Color\n$brown-500: #795548;\n\n/// @type Color\n$brown-600: #6d4c41;\n\n/// @type Color\n$brown-700: #5d4037;\n\n/// @type Color\n$brown-800: #4e342e;\n\n/// @type Color\n$brown-900: #3e2723;\n\n/// @type Color\n$grey-50: #fafafa;\n\n/// @type Color\n$grey-100: #f5f5f5;\n\n/// @type Color\n$grey-200: #eee;\n\n/// @type Color\n$grey-300: #e0e0e0;\n\n/// @type Color\n$grey-400: #bdbdbd;\n\n/// @type Color\n$grey-500: #9e9e9e;\n\n/// @type Color\n$grey-600: #757575;\n\n/// @type Color\n$grey-700: #616161;\n\n/// @type Color\n$grey-800: #424242;\n\n/// @type Color\n$grey-900: #212121;\n\n/// @type Color\n$blue-grey-50: #eceff1;\n\n/// @type Color\n$blue-grey-100: #cfd8dc;\n\n/// @type Color\n$blue-grey-200: #b0bec5;\n\n/// @type Color\n$blue-grey-300: #90a4ae;\n\n/// @type Color\n$blue-grey-400: #78909c;\n\n/// @type Color\n$blue-grey-500: #607d8b;\n\n/// @type Color\n$blue-grey-600: #546e7a;\n\n/// @type Color\n$blue-grey-700: #455a64;\n\n/// @type Color\n$blue-grey-800: #37474f;\n\n/// @type Color\n$blue-grey-900: #263238;\n\n/// @type Color\n$black: #000;\n\n/// @type Color\n$white: #fff;\n\n/// This is a map of all the material design base colors so that you can\n/// programmatically get variables with the neat sass-map functions.\n///\n/// @example scss - Example Usage SCSS\n///   .error-field {\n///     background: map-get($color-map, red-50);\n///   }\n///\n/// @type Map\n$color-map: (\n  red-50: $red-50,\n  red-100: $red-100,\n  red-200: $red-200,\n  red-300: $red-300,\n  red-400: $red-400,\n  red-500: $red-500,\n  red-600: $red-600,\n  red-700: $red-700,\n  red-800: $red-800,\n  red-900: $red-900,\n  red-a-100: $red-a-100,\n  red-a-200: $red-a-200,\n  red-a-400: $red-a-400,\n  red-a-700: $red-a-700,\n  pink-50: $pink-50,\n  pink-100: $pink-100,\n  pink-200: $pink-200,\n  pink-300: $pink-300,\n  pink-400: $pink-400,\n  pink-500: $pink-500,\n  pink-600: $pink-600,\n  pink-700: $pink-700,\n  pink-800: $pink-800,\n  pink-900: $pink-900,\n  pink-a-100: $pink-a-100,\n  pink-a-200: $pink-a-200,\n  pink-a-400: $pink-a-400,\n  pink-a-700: $pink-a-700,\n  purple-50: $purple-50,\n  purple-100: $purple-100,\n  purple-200: $purple-200,\n  purple-300: $purple-300,\n  purple-400: $purple-400,\n  purple-500: $purple-500,\n  purple-600: $purple-600,\n  purple-700: $purple-700,\n  purple-800: $purple-800,\n  purple-900: $purple-900,\n  purple-a-100: $purple-a-100,\n  purple-a-200: $purple-a-200,\n  purple-a-400: $purple-a-400,\n  purple-a-700: $purple-a-700,\n  deep-purple-50: $deep-purple-50,\n  deep-purple-100: $deep-purple-100,\n  deep-purple-200: $deep-purple-200,\n  deep-purple-300: $deep-purple-300,\n  deep-purple-400: $deep-purple-400,\n  deep-purple-500: $deep-purple-500,\n  deep-purple-600: $deep-purple-600,\n  deep-purple-700: $deep-purple-700,\n  deep-purple-800: $deep-purple-800,\n  deep-purple-900: $deep-purple-900,\n  deep-purple-a-100: $deep-purple-a-100,\n  deep-purple-a-200: $deep-purple-a-200,\n  deep-purple-a-400: $deep-purple-a-400,\n  deep-purple-a-700: $deep-purple-a-700,\n  indigo-50: $indigo-50,\n  indigo-100: $indigo-100,\n  indigo-200: $indigo-200,\n  indigo-300: $indigo-300,\n  indigo-400: $indigo-400,\n  indigo-500: $indigo-500,\n  indigo-600: $indigo-600,\n  indigo-700: $indigo-700,\n  indigo-800: $indigo-800,\n  indigo-900: $indigo-900,\n  indigo-a-100: $indigo-a-100,\n  indigo-a-200: $indigo-a-200,\n  indigo-a-400: $indigo-a-400,\n  indigo-a-700: $indigo-a-700,\n  blue-50: $blue-50,\n  blue-100: $blue-100,\n  blue-200: $blue-200,\n  blue-300: $blue-300,\n  blue-400: $blue-400,\n  blue-500: $blue-500,\n  blue-600: $blue-600,\n  blue-700: $blue-700,\n  blue-800: $blue-800,\n  blue-900: $blue-900,\n  blue-a-100: $blue-a-100,\n  blue-a-200: $blue-a-200,\n  blue-a-400: $blue-a-400,\n  blue-a-700: $blue-a-700,\n  light-blue-50: $light-blue-50,\n  light-blue-100: $light-blue-100,\n  light-blue-200: $light-blue-200,\n  light-blue-300: $light-blue-300,\n  light-blue-400: $light-blue-400,\n  light-blue-500: $light-blue-500,\n  light-blue-600: $light-blue-600,\n  light-blue-700: $light-blue-700,\n  light-blue-800: $light-blue-800,\n  light-blue-900: $light-blue-900,\n  light-blue-a-100: $light-blue-a-100,\n  light-blue-a-200: $light-blue-a-200,\n  light-blue-a-400: $light-blue-a-400,\n  light-blue-a-700: $light-blue-a-700,\n  cyan-50: $cyan-50,\n  cyan-100: $cyan-100,\n  cyan-200: $cyan-200,\n  cyan-300: $cyan-300,\n  cyan-400: $cyan-400,\n  cyan-500: $cyan-500,\n  cyan-600: $cyan-600,\n  cyan-700: $cyan-700,\n  cyan-800: $cyan-800,\n  cyan-900: $cyan-900,\n  cyan-a-100: $cyan-a-100,\n  cyan-a-200: $cyan-a-200,\n  cyan-a-400: $cyan-a-400,\n  cyan-a-700: $cyan-a-700,\n  teal-50: $teal-50,\n  teal-100: $teal-100,\n  teal-200: $teal-200,\n  teal-300: $teal-300,\n  teal-400: $teal-400,\n  teal-500: $teal-500,\n  teal-600: $teal-600,\n  teal-700: $teal-700,\n  teal-800: $teal-800,\n  teal-900: $teal-900,\n  teal-a-100: $teal-a-100,\n  teal-a-200: $teal-a-200,\n  teal-a-400: $teal-a-400,\n  teal-a-700: $teal-a-700,\n  green-50: $green-50,\n  green-100: $green-100,\n  green-200: $green-200,\n  green-300: $green-300,\n  green-400: $green-400,\n  green-500: $green-500,\n  green-600: $green-600,\n  green-700: $green-700,\n  green-800: $green-800,\n  green-900: $green-900,\n  green-a-100: $green-a-100,\n  green-a-200: $green-a-200,\n  green-a-400: $green-a-400,\n  green-a-700: $green-a-700,\n  light-green-50: $light-green-50,\n  light-green-100: $light-green-100,\n  light-green-200: $light-green-200,\n  light-green-300: $light-green-300,\n  light-green-400: $light-green-400,\n  light-green-500: $light-green-500,\n  light-green-600: $light-green-600,\n  light-green-700: $light-green-700,\n  light-green-800: $light-green-800,\n  light-green-900: $light-green-900,\n  light-green-a-100: $light-green-a-100,\n  light-green-a-200: $light-green-a-200,\n  light-green-a-400: $light-green-a-400,\n  light-green-a-700: $light-green-a-700,\n  lime-50: $lime-50,\n  lime-100: $lime-100,\n  lime-200: $lime-200,\n  lime-300: $lime-300,\n  lime-400: $lime-400,\n  lime-500: $lime-500,\n  lime-600: $lime-600,\n  lime-700: $lime-700,\n  lime-800: $lime-800,\n  lime-900: $lime-900,\n  lime-a-100: $lime-a-100,\n  lime-a-200: $lime-a-200,\n  lime-a-400: $lime-a-400,\n  lime-a-700: $lime-a-700,\n  yellow-50: $yellow-50,\n  yellow-100: $yellow-100,\n  yellow-200: $yellow-200,\n  yellow-300: $yellow-300,\n  yellow-400: $yellow-400,\n  yellow-500: $yellow-500,\n  yellow-600: $yellow-600,\n  yellow-700: $yellow-700,\n  yellow-800: $yellow-800,\n  yellow-900: $yellow-900,\n  yellow-a-100: $yellow-a-100,\n  yellow-a-200: $yellow-a-200,\n  yellow-a-400: $yellow-a-400,\n  yellow-a-700: $yellow-a-700,\n  amber-50: $amber-50,\n  amber-100: $amber-100,\n  amber-200: $amber-200,\n  amber-300: $amber-300,\n  amber-400: $amber-400,\n  amber-500: $amber-500,\n  amber-600: $amber-600,\n  amber-700: $amber-700,\n  amber-800: $amber-800,\n  amber-900: $amber-900,\n  amber-a-100: $amber-a-100,\n  amber-a-200: $amber-a-200,\n  amber-a-400: $amber-a-400,\n  amber-a-700: $amber-a-700,\n  orange-50: $orange-50,\n  orange-100: $orange-100,\n  orange-200: $orange-200,\n  orange-300: $orange-300,\n  orange-400: $orange-400,\n  orange-500: $orange-500,\n  orange-600: $orange-600,\n  orange-700: $orange-700,\n  orange-800: $orange-800,\n  orange-900: $orange-900,\n  orange-a-100: $orange-a-100,\n  orange-a-200: $orange-a-200,\n  orange-a-400: $orange-a-400,\n  orange-a-700: $orange-a-700,\n  deep-orange-50: $deep-orange-50,\n  deep-orange-100: $deep-orange-100,\n  deep-orange-200: $deep-orange-200,\n  deep-orange-300: $deep-orange-300,\n  deep-orange-400: $deep-orange-400,\n  deep-orange-500: $deep-orange-500,\n  deep-orange-600: $deep-orange-600,\n  deep-orange-700: $deep-orange-700,\n  deep-orange-800: $deep-orange-800,\n  deep-orange-900: $deep-orange-900,\n  deep-orange-a-100: $deep-orange-a-100,\n  deep-orange-a-200: $deep-orange-a-200,\n  deep-orange-a-400: $deep-orange-a-400,\n  deep-orange-a-700: $deep-orange-a-700,\n  brown-50: $brown-50,\n  brown-100: $brown-100,\n  brown-200: $brown-200,\n  brown-300: $brown-300,\n  brown-400: $brown-400,\n  brown-500: $brown-500,\n  brown-600: $brown-600,\n  brown-700: $brown-700,\n  brown-800: $brown-800,\n  brown-900: $brown-900,\n  grey-50: $grey-50,\n  grey-100: $grey-100,\n  grey-200: $grey-200,\n  grey-300: $grey-300,\n  grey-400: $grey-400,\n  grey-500: $grey-500,\n  grey-600: $grey-600,\n  grey-700: $grey-700,\n  grey-800: $grey-800,\n  grey-900: $grey-900,\n  blue-grey-50: $blue-grey-50,\n  blue-grey-100: $blue-grey-100,\n  blue-grey-200: $blue-grey-200,\n  blue-grey-300: $blue-grey-300,\n  blue-grey-400: $blue-grey-400,\n  blue-grey-500: $blue-grey-500,\n  blue-grey-600: $blue-grey-600,\n  blue-grey-700: $blue-grey-700,\n  blue-grey-800: $blue-grey-800,\n  blue-grey-900: $blue-grey-900,\n  black: $black,\n  white: $white,\n);\n\n/// The "primary" color suffix numbers that are available for use. This is\n/// really just created for the `get-swatch` mixin, but might be\n/// useful since it also gets added to the scssVariables export.\n/// @type List\n$primary-suffixes: 50 100 200 300 400 500 600 700 800 900;\n\n/// The "accent" color suffix numbers that are available for use. This is really\n/// just created for the `get-swatch` mixin, but might be useful since\n/// it also gets added to the scssVariables export.\n/// @type List\n$accent-suffixes: 100 200 400 700;\n\n/// A list of all the available colors within material design. This is really\n/// just created for the `get-swatch` mixin, but might be useful since\n/// it also gets added to the scssVariables export.\n/// @type List\n$available-color-names: (\n  "red" "pink" "purple" "deep-purple" "indigo" "blue" "light-blue" "cyan" "teal"\n    "green" "light-green" "lime" "yellow" "amber" "orange" "deep-orange" "brown"\n    "grey" "blue-grey"\n);\n',
  "@react-md/theme/theme":
    '@use "sass:color";\n@use "sass:list";\n@use "sass:map";\n@use "sass:string";\n@use "sass:meta";\n@use "colors";\n@use "a11y";\n\n@use "../utils";\n\n/// This defines the total color scheme for your app and can be either:\n/// - `light`\n/// - `dark`\n/// - `system`\n///\n/// Setting this value to `system` will default to a light theme unless the user\n/// has set their preferred color scheme to dark on their OS.\n///\n/// If this value is changed from the default `light` value, the\n/// `colorSchemeMode` on the `CoreProviders` component should be updated to\n/// match the new value.\n$color-scheme: light !default;\n\n/// The dark elevation feature is generally recommended to keep enabled since it\n/// helps with visibility when your app is using the dark color scheme either\n/// through `$color-scheme: dark` or `using the `use-dark-theme mixin. When this\n/// feature is enabled, the `background-color` for surfaces will gradually\n/// become lighter the higher their `z-value` is with the material design box\n/// shadows.\n///\n/// If this is set to `false`, all surfaces will mimic the light theme and have\n/// a single surface color.\n$disable-dark-elevation: false !default;\n\n/// This value should be set to `false` if you do not want the initial bundle to\n/// include the `@media (prefers-color-scheme: dark)` styles.\n$disable-default-system-theme: false !default;\n$disable-default-root-theme: false !default;\n\n$primary-color: colors.$blue-500 !default;\n$on-primary-color: a11y.contrast-color($primary-color) !default;\n$secondary-color: colors.$orange-a-400 !default;\n$on-secondary-color: a11y.contrast-color($secondary-color) !default;\n$warning-color: colors.$deep-orange-a-400 !default;\n$on-warning-color: a11y.contrast-color($warning-color) !default;\n$error-color: colors.$red-500 !default;\n$on-error-color: a11y.contrast-color($error-color) !default;\n$success-color: colors.$green-a-700 !default;\n$on-success-color: a11y.contrast-color($success-color) !default;\n\n$outline-width: 0.0625em !default;\n$outline-color: currentcolor !default;\n$outline-grey-color: #999 !default;\n\n$light-theme-background-color: #fafafa !default;\n$light-theme-surface-color: #fff !default;\n$light-theme-text-primary-color: color.adjust(#000, $lightness: 13%) !default;\n$light-theme-text-secondary-color: color.adjust(#000, $lightness: 46%) !default;\n$light-theme-text-hint-color: color.adjust(#000, $lightness: 66%) !default;\n$light-theme-text-disabled-color: color.adjust(#000, $lightness: 62%) !default;\n\n$dark-theme-background-color: #121212 !default;\n$dark-theme-surface-color: if($disable-dark-elevation, #424242, null) !default;\n$dark-theme-text-primary-color: color.adjust(#fff, $lightness: -15%) !default;\n$dark-theme-text-secondary-color: color.adjust(#fff, $lightness: -30%) !default;\n$dark-theme-text-hint-color: color.adjust(#fff, $lightness: -50%) !default;\n$dark-theme-text-disabled-color: color.adjust(#fff, $lightness: -50%) !default;\n\n@function get-default-color($light-color, $dark-color) {\n  @return if($color-scheme == dark, $dark-color, $light-color);\n}\n\n$background-color: get-default-color(\n  $light-theme-background-color,\n  $dark-theme-background-color\n) !default;\n$surface-color: get-default-color(\n  $light-theme-surface-color,\n  $dark-theme-surface-color\n) !default;\n$text-primary-color: get-default-color(\n  $light-theme-text-primary-color,\n  $dark-theme-text-primary-color\n) !default;\n$text-secondary-color: get-default-color(\n  $light-theme-text-secondary-color,\n  $dark-theme-text-secondary-color\n) !default;\n$text-hint-color: get-default-color(\n  $light-theme-text-hint-color,\n  $dark-theme-text-hint-color\n) !default;\n$text-disabled-color: get-default-color(\n  $light-theme-text-disabled-color,\n  $dark-theme-text-disabled-color\n) !default;\n\n$dark-elevation-colors: (\n  0: $dark-theme-background-color,\n  1: #1f1f1f,\n  2: #242424,\n  3: #262626,\n  4: #282828,\n  5: #282828,\n  6: #2c2c2c,\n  7: #2c2c2c,\n  8: #2f2f2f,\n  9: #2f2f2f,\n  10: #2f2f2f,\n  11: #2f2f2f,\n  12: #333,\n  13: #333,\n  14: #333,\n  15: #333,\n  16: #353535,\n  17: #353535,\n  18: #353535,\n  19: #353535,\n  20: #353535,\n  21: #353535,\n  22: #353535,\n  23: #353535,\n  24: #383838,\n) !default;\n\n$_validated_color_scheme: utils.validate(\n  (light dark system),\n  $color-scheme,\n  "$color-scheme"\n);\n\n$theme-variables: (\n  background-color,\n  on-background-color,\n  surface-color,\n  primary-color,\n  on-primary-color,\n  secondary-color,\n  on-secondary-color,\n  warning-color,\n  on-warning-color,\n  success-color,\n  on-success-color,\n  error-color,\n  on-error-color,\n  text-primary-color,\n  text-secondary-color,\n  text-hint-color,\n  text-disabled-color,\n  outline-width,\n  outline-color,\n  outline-grey-color\n);\n\n@function theme-get-var($name, $fallback: null) {\n  $var: utils.get-var-name($theme-variables, $name, "theme");\n\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@function _dark-elevation-color($z-value) {\n  @return "--rmd-dark-elevation-color-#{$z-value}";\n}\n\n@function get-dark-elevation-color($z-value) {\n  @return var(#{_dark-elevation-color($z-value)});\n}\n\n@mixin set-dark-elevation-color($z-value, $value) {\n  #{_dark-elevation-color($z-value)}: #{$value};\n}\n\n@mixin theme-set-var($name, $value-or-theme-name) {\n  $var: utils.get-var-name($theme-variables, $name, "theme");\n  $value: $value-or-theme-name;\n  @if list.index($theme-variables, $value-or-theme-name) {\n    $name: $value-or-theme-name;\n    $value: theme-get-var($name);\n  }\n\n  #{$var}: #{$value};\n}\n\n@mixin theme-use-var($property, $name: $property, $fallback: null) {\n  #{$property}: theme-get-var($name, $fallback);\n}\n\n@mixin use-light-theme-colors {\n  @include theme-set-var(background-color, $light-theme-background-color);\n  @if $disable-dark-elevation {\n    @include theme-set-var(surface-color, $light-theme-surface-color);\n  }\n  @include theme-set-var(text-primary-color, $light-theme-text-primary-color);\n  @include theme-set-var(\n    text-secondary-color,\n    $light-theme-text-secondary-color\n  );\n  @include theme-set-var(text-hint-color, $light-theme-text-hint-color);\n  @include theme-set-var(text-disabled-color, $light-theme-text-disabled-color);\n\n  @if not $disable-dark-elevation and $color-scheme != light {\n    @each $z-value, $background-color in $dark-elevation-colors {\n      @include set-dark-elevation-color($z-value, $light-theme-surface-color);\n    }\n  }\n}\n\n@mixin use-dark-theme-colors {\n  @include theme-set-var(background-color, $dark-theme-background-color);\n  @if $disable-dark-elevation {\n    @include theme-set-var(surface-color, $dark-theme-surface-color);\n  }\n  @include theme-set-var(text-primary-color, $dark-theme-text-primary-color);\n  @include theme-set-var(\n    text-secondary-color,\n    $dark-theme-text-secondary-color\n  );\n  @include theme-set-var(text-hint-color, $dark-theme-text-hint-color);\n  @include theme-set-var(text-disabled-color, $dark-theme-text-disabled-color);\n\n  @if not $disable-dark-elevation {\n    @each $z-value, $background-color in $dark-elevation-colors {\n      @include set-dark-elevation-color($z-value, $background-color);\n    }\n  }\n}\n\n@mixin theme-variables {\n  @include theme-set-var(background-color, $background-color);\n  @if $disable-dark-elevation {\n    @include theme-set-var(surface-color, $surface-color);\n  }\n\n  @include theme-set-var(primary-color, $primary-color);\n  @include theme-set-var(on-primary-color, $on-primary-color);\n  @include theme-set-var(secondary-color, $secondary-color);\n  @include theme-set-var(on-secondary-color, $on-secondary-color);\n  @include theme-set-var(warning-color, $warning-color);\n  @include theme-set-var(on-warning-color, $on-warning-color);\n  @include theme-set-var(error-color, $error-color);\n  @include theme-set-var(on-error-color, $on-error-color);\n  @include theme-set-var(success-color, $success-color);\n  @include theme-set-var(on-success-color, $on-success-color);\n  @include theme-set-var(text-primary-color, $text-primary-color);\n  @include theme-set-var(text-secondary-color, $text-secondary-color);\n  @include theme-set-var(text-hint-color, $text-hint-color);\n  @include theme-set-var(text-disabled-color, $text-disabled-color);\n\n  @if not $disable-dark-elevation and $color-scheme == dark {\n    @each $z-value, $background-color in $dark-elevation-colors {\n      @include set-dark-elevation-color($z-value, $background-color);\n    }\n  }\n\n  @include theme-set-var(outline-width, $outline-width);\n  @include theme-set-var(outline-color, $outline-color);\n  @include theme-set-var(outline-grey-color, $outline-grey-color);\n}\n\n@mixin create-surface($z-value, $disable-colors: $disable-dark-elevation) {\n  @if not $disable-dark-elevation {\n    @include theme-set-var(surface-color, get-dark-elevation-color($z-value));\n  }\n  @if not $disable-colors {\n    @include theme-set-var(background-color, theme-get-var(surface-color));\n    @include theme-use-var(background-color);\n    @include theme-use-var(color, text-primary-color);\n  }\n}\n\n@function get-swatch(\n  $color,\n  $swatch,\n  $accent: false,\n  $fallback-color: null,\n  $fallback-name: null\n) {\n  $current-color-index: list.index(map.values(colors.$color-map), $color);\n\n  @if not $current-color-index {\n    @if not $fallback-color {\n      $fallback: if(\n        $fallback-name,\n        "the \'$#{$fallback-name}\' variable",\n        "a fallback color"\n      );\n\n      $error-msg: "Invalid material design color: \'#{$color}\'. If this was intentional because your app does " +\n        "not use material design colors, set #{$fallback} instead to get a correct color for the provided swatch: " +\n        "#{$swatch}.";\n      @error $error-msg;\n    } @else if type-of($fallback-color) != "color" {\n      @error "Invalid fallback color: \'#{$fallback-color}\'. This must be a valid color.";\n    } @else {\n      @return $fallback-color;\n    }\n  }\n\n  $suffixes: utils.validate(\n    if($accent, colors.$accent-suffixes, colors.$primary-suffixes),\n    $swatch,\n    "material design color swatch"\n  );\n  $current-color-name: list.nth(\n    map.keys(colors.$color-map),\n    $current-color-index\n  );\n  $accent-index: string.index($current-color-name, "-a-");\n  @if $accent-index {\n    $current-color-name: string.slice(\n      $current-color-name,\n      1,\n      $accent-index - 1\n    );\n  } @else {\n    $index: 1;\n    $found: false;\n    @while not $found and $index < length(colors.$available-color-names) {\n      $suffix: list.nth(colors.$available-color-names, $index);\n      $suffix-index: string.index($current-color-name, $suffix);\n      @if $suffix-index {\n        $found: true;\n        $current-color-name: string.slice(\n          $current-color-name,\n          1,\n          $suffix-index - 1 + string.length($suffix)\n        );\n      }\n\n      $index: $index + 1;\n    }\n  }\n\n  $color-name: "#{$current-color-name}#{if($accent, "-a", "")}-#{$swatch}";\n\n  @return map-get(colors.$color-map, $color-name);\n}\n\n@mixin default-system-theme {\n  @if not $disable-default-system-theme and $color-scheme == system {\n    @media (prefers-color-scheme: dark) {\n      :root {\n        @content;\n      }\n    }\n  }\n}\n',
  "@react-md/tooltip/tooltip":
    '@use "sass:map";\n@use "../utils";\n@use "../theme/colors";\n@use "../transition/transition";\n@use "../typography/typography";\n\n$disable-everything: false !default;\n$disable-vertical: false !default;\n$disable-horizontal: false !default;\n$disable-above: $disable-vertical !default;\n$disable-below: $disable-vertical !default;\n$disable-left: $disable-horizontal !default;\n$disable-right: $disable-horizontal !default;\n$disable-dense: false !default;\n\n$background-color: #616161 !default;\n$color: colors.$white !default;\n\n$typography: map.merge(\n  typography.$body-1-styles,\n  (\n    letter-spacing: null,\n  )\n) !default;\n$border-radius: 0.25rem !default;\n$z-index: utils.$temporary-element-z-index + 20 !default;\n$max-width: 15rem !default;\n$min-height: 2rem !default;\n$horizontal-padding: 1rem !default;\n$vertical-padding: 0.5625rem !default;\n$spacing: 1.5rem !default;\n\n$dense-spacing: 0.875rem !default;\n$dense-typography: (\n  font-size: 0.625rem,\n  line-height: 0.825rem,\n) !default;\n$dense-min-height: 1.375rem !default;\n$dense-horizontal-padding: 0.5rem !default;\n$dense-vertical-padding: 0.375rem !default;\n\n$enter-duration: transition.$linear-duration !default;\n$enter-timing-function: transition.$deceleration-timing-function !default;\n$leave-duration: transition.$linear-duration !default;\n$leave-timing-function: transition.$acceleration-timing-function !default;\n$transition-distance: 0.5rem !default;\n\n$variables: (background-color, color, spacing);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "tooltip");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "tooltip")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(background-color, $background-color);\n    @include set-var(color, $color);\n\n    // do not include spacing\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-tooltip {\n      @include utils.map-to-styles($typography);\n      @include use-var(background-color);\n      @include use-var(color);\n\n      border-radius: $border-radius;\n      max-width: $max-width;\n      min-height: $min-height;\n      opacity: 0;\n      overflow: hidden;\n      overflow-wrap: anywhere;\n      padding: $vertical-padding $horizontal-padding;\n      pointer-events: none;\n      position: fixed;\n      text-transform: none;\n      user-select: none;\n      z-index: $z-index;\n\n      @if not $disable-dense {\n        &--dense {\n          @include utils.map-to-styles($dense-typography);\n          @include set-var(spacing, $dense-spacing);\n\n          min-height: $dense-min-height;\n          padding: $dense-vertical-padding $dense-horizontal-padding;\n        }\n      }\n\n      @if not $disable-above {\n        &--above {\n          transform: translateY(-$transition-distance);\n        }\n      }\n\n      @if not $disable-below {\n        &--below {\n          transform: translateY($transition-distance);\n        }\n      }\n\n      @if not $disable-left {\n        &--left {\n          transform: translateX(-$transition-distance);\n        }\n      }\n\n      @if not $disable-right {\n        &--right {\n          transform: translateX($transition-distance);\n        }\n      }\n\n      &--visible {\n        opacity: 1;\n        transform: none;\n      }\n\n      &--enter {\n        transition:\n          opacity $enter-duration,\n          transform $enter-duration * 2;\n        transition-timing-function: $enter-timing-function;\n      }\n\n      &--exit {\n        transition: opacity $leave-duration $leave-timing-function;\n      }\n\n      &--exit-active {\n        opacity: 0;\n      }\n    }\n  }\n}\n',
  "@react-md/transition/transition":
    '@use "sass:color";\n@use "sass:map";\n@use "../utils";\n@use "../theme/colors";\n@use "../theme/theme";\n\n$disable-everything: false !default;\n$disable-collapse-transition: $disable-everything !default;\n$disable-cross-fade-transition: $disable-everything !default;\n$disable-scale-transition: $disable-everything !default;\n$disable-scale-y-transition: $disable-scale-transition !default;\n$disable-skeleton-placeholder: $disable-everything !default;\n$disable-slide-transition: $disable-everything !default;\n$disable-max-width-transition: $disable-everything !default;\n$disable-max-width-transition-gap: $disable-max-width-transition !default;\n\n$linear-duration: 0.15s !default;\n$enter-duration: 0.2s !default;\n$leave-duration: 0.15s !default;\n\n$sharp-timing-function: cubic-bezier(0.4, 0, 0.6, 1) !default;\n$linear-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$acceleration-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n$deceleration-timing-function: cubic-bezier(0, 0, 0.2, 1) !default;\n\n$cross-fade-translate-distance: -1rem !default;\n$cross-fade-transition-duration: 0.3s !default;\n\n$scale-transition-enter-duration: $enter-duration !default;\n$scale-transition-leave-duration: $leave-duration !default;\n$scale-y-transition-enter-duration: $enter-duration !default;\n$scale-y-transition-leave-duration: $leave-duration !default;\n\n$skeleton-placeholder-height: 1.125em !default;\n$skeleton-placeholder-width: 43% !default;\n$skeleton-placeholder-border-radius: 0.25rem !default;\n$skeleton-placeholder-light-background-color: #000 !default;\n$skeleton-placeholder-dark-background-color: colors.$grey-300 !default;\n$skeleton-placeholder-background-color: if(\n  theme.$color-scheme == system,\n  $skeleton-placeholder-dark-background-color,\n  $skeleton-placeholder-light-background-color\n) !default;\n$skeleton-placeholder-animation: (\n  0%: (\n    opacity: 0.06,\n  ),\n  60%: (\n    opacity: 0.1,\n  ),\n  80%: (\n    opacity: 0.08,\n  ),\n  100%: (\n    opacity: 0.06,\n  ),\n) !default;\n$skeleton-placeholder-animation-duration: 1.8s !default;\n$skeleton-placeholder-animation-timing-function: ease-in-out !default;\n\n$slide-duration: $linear-duration !default;\n$slide-timing-function: $linear-timing-function !default;\n\n$max-width-transition-duration: $linear-duration !default;\n$max-width-transition-timing-function: $linear-timing-function !default;\n$max-width-transition-default: 100% !default;\n\n$transition-variables: (\n  skeleton-placeholder-background-color,\n  skeleton-placeholder-height,\n  skeleton-placeholder-width,\n  slide-duration,\n  max-width,\n  max-width-gap\n);\n\n@function transition-get-var($name, $fallback: null) {\n  $var: utils.get-var-name($transition-variables, $name, "transition");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin transition-set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($transition-variables, $name, "transition")}: #{$value};\n  }\n}\n\n@mixin transition-use-var($property, $name: $property, $fallback: null) {\n  #{$property}: transition-get-var($name, $fallback);\n}\n\n@mixin transition-use-light-theme {\n  @if not $disable-skeleton-placeholder {\n    @include transition-set-var(\n      skeleton-placeholder-background-color,\n      $skeleton-placeholder-light-background-color\n    );\n  }\n}\n\n@mixin transition-use-dark-theme {\n  @if not $disable-skeleton-placeholder {\n    @include transition-set-var(\n      skeleton-placeholder-background-color,\n      $skeleton-placeholder-dark-background-color\n    );\n  }\n}\n\n/// Note: This was only added because there was an issue with stylelint using @include as the only child within a keyframes\n@mixin keyframes($name) {\n  @keyframes #{$name} {\n    @content;\n  }\n}\n\n@mixin collapse-transition {\n  .rmd-collapse {\n    transition-property: max-height, padding-bottom, padding-top;\n    will-change: max-height, padding-bottom, padding-top;\n\n    &--no-overflow {\n      overflow: hidden;\n    }\n\n    &--enter {\n      transition-timing-function: $deceleration-timing-function;\n    }\n\n    &--leave {\n      transition-timing-function: $acceleration-timing-function;\n    }\n  }\n}\n\n@mixin cross-fade-transition {\n  .rmd-cross-fade {\n    opacity: 0;\n    transform: translateY($cross-fade-translate-distance);\n\n    &--active {\n      opacity: 1;\n      transform: translateY(0);\n      transition-duration: $cross-fade-transition-duration;\n      transition-property: opacity, transform;\n      transition-timing-function: $deceleration-timing-function;\n    }\n  }\n}\n\n@mixin scale-transition {\n  .rmd-scale-transition--enter {\n    opacity: 0;\n    transform: scale(0);\n  }\n\n  .rmd-scale-transition--enter-active {\n    opacity: 1;\n    transform: scale(1);\n    transition-duration: $scale-transition-enter-duration;\n    transition-property: opacity, transform;\n    transition-timing-function: $deceleration-timing-function;\n  }\n\n  .rmd-scale-transition--exit {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  .rmd-scale-transition--exit-active {\n    opacity: 0;\n    transform: scale(0);\n    transition-duration: $scale-transition-leave-duration;\n    transition-property: opacity, transform;\n    transition-timing-function: $acceleration-timing-function;\n  }\n}\n\n@mixin scale-y-transition {\n  .rmd-scale-transition--y-enter {\n    transform: scaleY(0);\n    transform-origin: 0 0;\n  }\n\n  .rmd-scale-transition--y-enter-active {\n    transform: scaleY(1);\n    @if $scale-y-transition-enter-duration != $scale-transition-enter-duration {\n      transition-duration: $scale-y-transition-enter-duration;\n    }\n  }\n\n  .rmd-scale-transition--y-exit {\n    transform: scaleY(1);\n    transform-origin: 0 0;\n  }\n\n  .rmd-scale-transition--y-exit-active {\n    transform: scaleY(0);\n    @if $scale-y-transition-leave-duration != $scale-transition-leave-duration {\n      transition-duration: $scale-y-transition-leave-duration;\n    }\n  }\n}\n\n@mixin skeleton-placeholder-animation {\n  .rmd-skeleton-placeholder {\n    @include transition-use-var(\n      background-color,\n      skeleton-placeholder-background-color\n    );\n    @include transition-use-var(height, skeleton-placeholder-height);\n\n    animation: rmd-skeleton-placeholder $skeleton-placeholder-animation-duration\n      $skeleton-placeholder-animation-timing-function infinite;\n    border-radius: $skeleton-placeholder-border-radius;\n    color: transparent;\n\n    // this was added so that at least _something_ renders on SSR. It would be\n    // nice to have SSR-safe random numbers for this.\n    width: $skeleton-placeholder-width;\n  }\n\n  @include keyframes(rmd-skeleton-placeholder) {\n    @include utils.map-to-animation($skeleton-placeholder-animation);\n  }\n}\n\n@mixin slide-transition {\n  .rmd-slide-container {\n    align-items: flex-start;\n    display: flex;\n    flex-wrap: nowrap;\n    height: 100%;\n    overflow: hidden auto;\n    width: 100%;\n\n    &--left {\n      --p1-start: 0;\n      --p2-start: 0;\n      --p1-end: -100%;\n      --p2-end: -100%;\n    }\n\n    &--right {\n      --p1-start: -100%;\n      --p2-start: -100%;\n      --p1-end: 0;\n      --p2-end: 0;\n    }\n  }\n\n  .rmd-slide {\n    flex: 1 0 auto;\n    height: 100%;\n    width: 100%;\n    will-change: transform;\n\n    &--animate {\n      transition: transform transition-get-var(slide-duration)\n        $slide-timing-function;\n    }\n\n    &--enter {\n      transform: translate3d(var(--p1-start), 0, 0);\n    }\n\n    &--enter-active {\n      transform: translate3d(var(--p1-end), 0, 0);\n    }\n\n    &--exit {\n      transform: translate3d(var(--p2-start), 0, 0);\n    }\n\n    &--exit-active {\n      transform: translate3d(var(--p2-end), 0, 0);\n    }\n  }\n}\n\n@mixin transition-variables {\n  @if not $disable-skeleton-placeholder {\n    @include transition-set-var(\n      skeleton-placeholder-background-color,\n      $skeleton-placeholder-background-color\n    );\n    @include transition-set-var(\n      skeleton-placeholder-height,\n      $skeleton-placeholder-height\n    );\n  }\n\n  @if not $disable-slide-transition {\n    @include transition-set-var(slide-duration, $slide-duration);\n  }\n\n  @if not $disable-max-width-transition {\n    @include transition-set-var(max-width, $max-width-transition-default);\n\n    @if not $disable-max-width-transition-gap {\n      @include transition-set-var(max-width-gap, 0);\n    }\n  }\n}\n\n@mixin transition-styles {\n  @if not $disable-collapse-transition {\n    @include collapse-transition;\n  }\n\n  @if not $disable-cross-fade-transition {\n    @include cross-fade-transition;\n  }\n\n  @if not $disable-scale-transition or not $disable-scale-y-transition {\n    @include scale-transition;\n  }\n\n  @if not $disable-scale-y-transition {\n    @include scale-y-transition;\n  }\n\n  @if not $disable-skeleton-placeholder {\n    @include skeleton-placeholder-animation;\n  }\n\n  @if not $disable-slide-transition {\n    @include slide-transition;\n  }\n\n  @if not $disable-max-width-transition {\n    .rmd-max-width-transition {\n      @if not $disable-max-width-transition-gap {\n        @include utils.auto-rtl(\n          margin-right,\n          utils.negate-var(transition-get-var(max-width-gap)),\n          0\n        );\n      }\n\n      max-width: 0;\n      overflow: hidden;\n      transition: max-width\n        $max-width-transition-duration\n        $max-width-transition-timing-function;\n      will-change: max-width;\n\n      &--visible {\n        @if not $disable-max-width-transition-gap {\n          @include utils.auto-rtl(margin-right, 0);\n        }\n        @include transition-use-var(max-width);\n      }\n    }\n  }\n}\n',
  "@react-md/tree/tree":
    '@use "sass:list" as sassList;\n@use "sass:map";\n@use "../utils";\n@use "../icon/icon";\n@use "../list/list";\n@use "../typography/typography";\n@use "../interaction/interaction";\n\n$disable-everything: false !default;\n$disable-expander-left: false !default;\n$disable-expander-left-as-media: false !default;\n$disable-expander-left-as-media-offset: false !default;\n$disable-selected-background-color: false !default;\n\n$padding-incrementor: list.$item-horizontal-padding * 1.5 !default;\n$padding-base: list.get-var(item-keyline) !default;\n$expander-right-from: icon.$rotate-from !default;\n$expander-right-to: 90deg !default;\n$expander-left-from: 0deg !default;\n$expander-left-to: -90deg !default;\n\n$selected-styles: (\n  font-weight: typography.$font-weight-bold,\n) !default;\n\n$variables: (depth, item-padding, item-padding-base, item-padding-incrementor);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "tree");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "tree")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin variables {\n  @if not $disable-everything {\n    @include set-var(depth, -1);\n    @include set-var(item-padding, 0);\n    @include set-var(item-padding-base, $padding-base);\n    @include set-var(item-padding-incrementor, $padding-incrementor);\n  }\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-tree {\n      display: block;\n      height: 100%;\n      outline-style: none;\n      overflow: auto;\n      // this is mostly for firefox. moving the mouse even 1px while clicking will\n      // select the current item and all items to the tree root\n      user-select: none;\n      width: 100%;\n    }\n\n    .rmd-tree-item {\n      @include icon.set-var(rotate-from, $expander-right-from);\n      @include icon.set-var(rotate-to, $expander-right-to);\n      @include set-var(\n        item-padding,\n        calc(\n          get-var(depth) * get-var(item-padding-incrementor) +\n            get-var(item-padding-base)\n        )\n      );\n\n      list-style: none;\n\n      @if not $disable-expander-left {\n        &--expander-left {\n          @include icon.set-var(rotate-from, $expander-left-from);\n          @include icon.set-var(rotate-to, $expander-left-to);\n        }\n      }\n\n      &__content {\n        &--disabled {\n          cursor: auto;\n\n          &:hover::before {\n            @include interaction.set-var(background-color, transparent);\n          }\n        }\n\n        &--link {\n          color: inherit;\n          text-decoration: none;\n        }\n\n        &--padded {\n          @include utils.auto-rtl(\n            padding-left,\n            get-var(item-padding),\n            list.get-var(item-horizontal-padding)\n          );\n        }\n\n        &--focused::before {\n          .rmd-tree:focus-within & {\n            @include utils.keyboard-only {\n              @include interaction.focus-styles;\n            }\n          }\n        }\n\n        @if $selected-styles {\n          &--selected {\n            @if not $disable-selected-background-color {\n              @include interaction.set-var(\n                background-color,\n                interaction.get-var(selected-background-color)\n              );\n\n              @include utils.touch-only {\n                &:hover::before {\n                  @include interaction.set-var(\n                    background-color,\n                    interaction.get-var(selected-background-color)\n                  );\n                }\n              }\n            }\n            @include utils.map-to-styles($selected-styles);\n          }\n        }\n      }\n\n      @if not $disable-expander-left-as-media {\n        &__media {\n          align-items: center;\n          display: flex;\n          justify-content: space-between;\n\n          @if not $disable-expander-left-as-media-offset {\n            &--single {\n              justify-content: flex-end;\n            }\n          }\n        }\n      }\n    }\n\n    .rmd-tree-group {\n      background-color: inherit;\n      color: inherit;\n      font-size: inherit;\n      line-height: inherit;\n\n      // remove the list padding to make it more condensed\n      padding-bottom: 0;\n      padding-top: 0;\n    }\n  }\n}\n',
  "@react-md/typography/typography":
    '@use "sass:math";\n@use "sass:map";\n@use "../media-queries/media-queries";\n@use "../utils";\n\n$disable-text-container: false !default;\n\n/// A small utility function to get the letter spacing based on tracking and\n/// font-size\n///\n/// @access private\n/// @param {Number} tracking - The tracking to use\n/// @param {Number} font-size - The font size to use\n/// @return {Number} the letter spacing value in em\n@function get-letter-spacing($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n/// The font family to use throughout the entire application.\n///\n/// @example scss - Changing the Font\n///   @use "react-md" with (\n///     $font-family: string.unquote("\'Open Sans\', Koulen, \'Roboto Flex\', sans-serif")\n///   ):\n///\n///   @include react-md.typography;\n///\n/// @type String\n$font-family: Roboto, sans-serif !default;\n\n$font-weight-thin: 100 !default;\n$font-weight-light: 300 !default;\n$font-weight-regular: 400 !default;\n$font-weight-medium: 500 !default;\n$font-weight-bold: 700 !default;\n$font-weight-semi-bold: 800 !default;\n$font-weight-black: 900 !default;\n\n/// A Map of all the font weights.\n///\n/// @type Map\n/// @prop {Number} thin [$font-weight-thin] - The thin font weight value.\n/// @prop {Number} light [$font-weight-light] - The light font weight value.\n/// @prop {Number} regular [$font-weight-regular] - The regular font weight\n/// value.\n/// @prop {Number} medium [$font-weight-medium] - The medium font weight\n/// value.\n/// @prop {Number} bold [$font-weight-bold] - The bold font weight value.\n/// @prop {Number} semi-bold [$font-weight-semi-bold] - The semi-bold font\n/// weight value.\n/// @prop {Number} black [$font-weight-black] - The black font weight value.\n$font-weights: (\n  thin: $font-weight-thin,\n  light: $font-weight-light,\n  regular: $font-weight-regular,\n  medium: $font-weight-medium,\n  bold: $font-weight-bold,\n  semi-bold: $font-weight-semi-bold,\n  black: $font-weight-black,\n) !default;\n\n$text-alignments: left center right !default;\n$text-decorations: underline overline line-through none !default;\n$text-transforms: capitalize uppercase lowercase !default;\n$font-styles: normal italic oblique !default;\n\n/// The base styles for typography.\n/// @type Map\n$base-recommended-font-styles: (\n  font-family: $font-family,\n  -moz-osx-font-smoothing: grayscale,\n  -webkit-font-smoothing: antialiased,\n);\n$base-custom-font-styles: () !default;\n$base-font-styles: map.merge(\n  $base-recommended-font-styles,\n  $base-custom-font-styles\n);\n\n$headline-1-recommended-styles: (\n  font-size: 6rem,\n  line-height: 6rem,\n  font-weight: map.get($font-weights, light),\n  letter-spacing: get-letter-spacing(-1.5, 6),\n);\n$headline-1-custom-styles: () !default;\n$headline-1-styles: map.merge(\n  $headline-1-recommended-styles,\n  $headline-1-custom-styles\n) !default;\n$headline-2-recommended-styles: (\n  font-size: 3.75rem,\n  line-height: 3.75rem,\n  font-weight: map.get($font-weights, light),\n  letter-spacing: get-letter-spacing(-0.5, 3.75),\n);\n$headline-2-custom-styles: () !default;\n$headline-2-styles: map.merge(\n  $headline-2-recommended-styles,\n  $headline-2-custom-styles\n) !default;\n$headline-3-recommended-styles: (\n  font-size: 3rem,\n  line-height: 3.125rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: normal,\n);\n$headline-3-custom-styles: () !default;\n$headline-3-styles: map.merge(\n  $headline-3-recommended-styles,\n  $headline-3-custom-styles\n) !default;\n$headline-4-recommended-styles: (\n  font-size: 2.125rem,\n  line-height: 2.5rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: get-letter-spacing(0.25, 2.125),\n);\n$headline-4-custom-styles: () !default;\n$headline-4-styles: map.merge(\n  $headline-4-recommended-styles,\n  $headline-4-custom-styles\n) !default;\n$headline-5-recommended-styles: (\n  font-size: 1.5rem,\n  line-height: 2rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: normal,\n);\n$headline-5-custom-styles: () !default;\n$headline-5-styles: map.merge(\n  $headline-5-recommended-styles,\n  $headline-5-custom-styles\n) !default;\n$headline-6-recommended-styles: (\n  font-size: 1.25rem,\n  line-height: 2rem,\n  font-weight: map.get($font-weights, medium),\n  letter-spacing: get-letter-spacing(0.25, 1.25),\n);\n$headline-6-custom-styles: () !default;\n$headline-6-styles: map.merge(\n  $headline-6-recommended-styles,\n  $headline-6-custom-styles\n) !default;\n$subtitle-1-recommended-styles: (\n  font-size: 1rem,\n  line-height: 1.75rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: get-letter-spacing(0.15, 1),\n);\n$subtitle-1-custom-styles: () !default;\n$subtitle-1-styles: map.merge(\n  $subtitle-1-recommended-styles,\n  $subtitle-1-custom-styles\n) !default;\n$subtitle-2-recommended-styles: (\n  font-size: 0.875rem,\n  line-height: 1.375rem,\n  font-weight: map.get($font-weights, medium),\n  letter-spacing: get-letter-spacing(0.1, 0.875),\n);\n$subtitle-2-custom-styles: () !default;\n$subtitle-2-styles: map.merge(\n  $subtitle-2-recommended-styles,\n  $subtitle-2-custom-styles\n) !default;\n$body-1-recommended-styles: (\n  font-size: 1rem,\n  line-height: 1.5rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: get-letter-spacing(0.5, 0.875),\n);\n$body-1-custom-styles: () !default;\n$body-1-styles: map.merge(\n  $body-1-recommended-styles,\n  $body-1-custom-styles\n) !default;\n$body-2-recommended-styles: (\n  font-size: 0.875rem,\n  line-height: 1.25rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: get-letter-spacing(0.25, 0.875),\n);\n$body-2-custom-styles: () !default;\n$body-2-styles: map.merge(\n  $body-2-recommended-styles,\n  $body-2-custom-styles\n) !default;\n$caption-recommended-styles: (\n  font-size: 0.75rem,\n  line-height: 1.25rem,\n  font-weight: map.get($font-weights, regular),\n  letter-spacing: get-letter-spacing(0.4, 0.75),\n);\n$caption-custom-styles: () !default;\n$caption-styles: map.merge(\n  $caption-recommended-styles,\n  $caption-custom-styles\n) !default;\n$overline-recommended-styles: (\n  font-size: 0.75rem,\n  line-height: 2rem,\n  font-weight: map.get($font-weights, medium),\n  letter-spacing: get-letter-spacing(2, 0.75),\n);\n$overline-custom-styles: () !default;\n$overline-styles: map.merge(\n  $overline-recommended-styles,\n  $overline-custom-styles\n) !default;\n$button-recommended-styles: map.merge(\n  $base-font-styles,\n  (\n    font-size: 0.875rem,\n    line-height: 2.25rem,\n    font-weight: map.get($font-weights, medium),\n    letter-spacing: get-letter-spacing(1.25, 0.875),\n  )\n);\n$button-custom-styles: () !default;\n$button-styles: map.merge(\n  $button-recommended-styles,\n  $button-custom-styles\n) !default;\n\n$text-container-padding: 1rem !default;\n$text-line-length: 65ch !default;\n\n$typography-variables: (line-length, text-container-padding);\n\n@function typography-get-var($name, $fallback: null) {\n  $var: utils.get-var-name($typography-variables, $name, "typography");\n  @if $fallback {\n    @return var(#{$var}, #{$fallback});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin typography-set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($typography-variables, $name, "typography")}: #{$value};\n  }\n}\n\n@mixin typography-use-var($property, $name: $property, $fallback: null) {\n  #{$property}: typography-get-var($name, $fallback);\n}\n\n@mixin typography-text-container-styles($disabled: $disable-text-container) {\n  @if not $disabled {\n    .rmd-text-container {\n      @include typography-use-var(max-width, line-length);\n      @include typography-use-var(padding, text-container-padding);\n\n      display: block;\n      margin: 0 auto;\n      width: 100%;\n    }\n  }\n}\n\n@mixin typography-base-styles {\n  .rmd-typography {\n    @include utils.map-to-styles($base-font-styles);\n\n    &--headline-1 {\n      @include utils.map-to-styles($headline-1-styles);\n    }\n\n    &--headline-2 {\n      @include utils.map-to-styles($headline-2-styles);\n    }\n\n    &--headline-3 {\n      @include utils.map-to-styles($headline-3-styles);\n    }\n\n    &--headline-4 {\n      @include utils.map-to-styles($headline-4-styles);\n    }\n\n    &--headline-5 {\n      @include utils.map-to-styles($headline-5-styles);\n    }\n\n    &--headline-6 {\n      @include utils.map-to-styles($headline-6-styles);\n    }\n\n    &--subtitle-1 {\n      @include utils.map-to-styles($subtitle-1-styles);\n    }\n\n    &--subtitle-2 {\n      @include utils.map-to-styles($subtitle-2-styles);\n    }\n\n    &--body-1 {\n      @include utils.map-to-styles($body-1-styles);\n    }\n\n    &--body-2 {\n      @include utils.map-to-styles($body-2-styles);\n    }\n\n    &--caption {\n      @include utils.map-to-styles($caption-styles);\n    }\n\n    &--overline {\n      @include utils.map-to-styles($overline-styles);\n    }\n  }\n}\n\n@mixin text-overflow($white-space: nowrap) {\n  overflow: hidden;\n  overflow-wrap: anywhere;\n  text-overflow: ellipsis;\n  white-space: $white-space;\n}\n\n@mixin line-clamp($lines: 2) {\n  // stylelint-disable order/properties-alphabetical-order\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: $lines;\n  display: -webkit-box;\n}\n\n@mixin typography-variables {\n  @if not $disable-text-container {\n    @include typography-set-var(line-length, $text-line-length);\n    @include typography-set-var(\n      text-container-padding,\n      $text-container-padding\n    );\n  }\n}\n\n@mixin typography-styles {\n  @include typography-text-container-styles;\n  @include typography-base-styles;\n}\n',
  "@react-md/utils":
    '@use "sass:string";\n@use "sass:map";\n@use "sass:meta";\n@use "sass:list";\n\n$disable-rtl: false !default;\n$disable-validation: false !default;\n$temporary-element-z-index: 30 !default;\n\n$_swappable-positions: top right bottom left;\n$_swappable-position-prefixes: border margin padding;\n$_swappable-properties: text-align;\n\n@function scrollbar-size() {\n  @return var(--rmd-scrollbar-size, 0px);\n}\n\n/// Replace `$search` with `$replace` in `$string`\n///\n/// @author Hugo Giraudel\n/// @access private\n/// @param {String} string - Initial string\n/// @param {String} search - Substring to replace\n/// @param {String} replace - New value\n/// @return {String} - Updated string\n/// @link https://css-tricks.com/snippets/sass/str-replace-function Source from CSS Tricks\n@function str-replace($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    @return string.slice($string, 1, $index - 1) + $replace +\n      str-replace(\n        string.slice($string, $index + string.length($search)),\n        $search,\n        $replace\n      );\n  }\n\n  @return $string;\n}\n\n@function negate-var($css-variable) {\n  @return calc(-1 * #{$css-variable});\n}\n\n@function validate($list-or-map, $key-or-value, $error-message) {\n  $type: meta.type-of($list-or-map);\n  $is-map: $type == map;\n  $is-list: $type == list;\n\n  @if $disable-validation {\n    @return if($is-list, $key-or-value, map.get($list-or-map, $key-or-value));\n  }\n\n  @if not $is-map and not $is-list {\n    @error \'Unable to validate anything except for lists and maps at this time. Received: #{$list-or-map}.\';\n  }\n\n  $choices: if($is-map, map.keys($list-or-map), $list-or-map);\n  @if not index($choices, $key-or-value) {\n    @error "Invalid #{$error-message}: \'#{$key-or-value}\'. Choose one of: #{$choices}";\n  }\n\n  @return if($is-list, $key-or-value, map.get($list-or-map, $key-or-value));\n}\n\n@function get-var-name($variables, $name, $group) {\n  @if $group == icon {\n    @if $name == symbol-grade {\n      @return --rmd-symbol-grad;\n    }\n    @if $name == symbol-weight {\n      @return --rmd-symbol-wght;\n    }\n    @if $name == optical-size {\n      @return --rmd-symbol-opsz;\n    }\n  }\n  @if $group == name and $name == fab-offset {\n    @return --rmd-fab-offset;\n  }\n\n  @if $group == form {\n    @if $name ==\n      addon-top or\n      $name ==\n      addon-margin-top or\n      $name ==\n      active-color or\n      $name ==\n      focus-color\n    {\n      @return --rmd-form-#{$name};\n    }\n  }\n  @if $group == interaction and $name == background-color {\n    @return --rmd-interaction-#{$name};\n  }\n\n  @if $group == list {\n    $updated: str-replace(\n      str-replace($name, "horizontal-padding", "padding-h"),\n      "vertical-padding",\n      "padding-v"\n    );\n    @if $updated != $name {\n      @return --rmd-list-#{$name};\n    }\n  }\n\n  @if $group == snackbar and $name != offset {\n    @return --rmd-toast-#{$name};\n  }\n\n  $prefix: "";\n  @if not list.index((theme, form, interaction, transition, typography), $group)\n  {\n    $prefix: $group + "-";\n  }\n\n  @return "--rmd-" + $prefix + validate($variables, $name, $group + " var");\n}\n\n@mixin map-to-styles($map) {\n  @each $property, $value in $map {\n    @if meta.type-of($value) == map {\n      #{$property} {\n        @include map-to-styles($value);\n      }\n    } @else {\n      #{$property}: $value;\n    }\n  }\n}\n\n@mixin map-to-animation($map) {\n  @each $percentage, $styles in $map {\n    #{$percentage} {\n      @include map-to-styles($styles);\n    }\n  }\n}\n\n@mixin pseudo-element(\n  $z-index: 0,\n  $fixed: false,\n  $inset: 0,\n  $border-radius: inherit\n) {\n  border-radius: $border-radius;\n  content: "";\n  inset: $inset;\n  pointer-events: none;\n  position: if($fixed, fixed, absolute);\n  z-index: $z-index;\n}\n\n@mixin _sr-only-focusable {\n  &:active,\n  &:focus {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    margin: auto;\n    overflow: visible;\n    white-space: normal;\n    width: auto;\n  }\n}\n\n@mixin sr-only($focusable: false, $focus-selector: "&--focusable") {\n  border: 0;\n  clip: rect(1px, 1px, 1px, 1px);\n  clip-path: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n\n  @if $focusable {\n    @if not $focus-selector {\n      @include _sr-only-focusable;\n    } @else {\n      #{$focus-selector} {\n        @include _sr-only-focusable;\n      }\n    }\n  }\n}\n\n@mixin hide-scrollbar {\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    height: 0;\n    width: 0;\n  }\n}\n\n@mixin optional-css-modules(\n  $class-name,\n  $css-modules: false,\n  $parent-selector: true\n) {\n  $selector: if($css-modules, ":global #{$class-name} :local", $class-name);\n  $selector: if($parent-selector, "#{$selector} &", $selector);\n\n  #{$selector} {\n    @content;\n  }\n}\n\n@mixin rtl {\n  @if not $disable-rtl {\n    [dir="rtl"] & {\n      @content;\n    }\n  }\n}\n\n@function _swap-position($property) {\n  $prefix: "";\n  $position: $property;\n  @each $valid-prefix in $_swappable-position-prefixes {\n    @if string.index($property, "#{$valid-prefix}-") {\n      $prefix: "#{$valid-prefix}-";\n      $position: str-replace($property, $prefix, "");\n    }\n  }\n\n  @if not list.index($_swappable-positions, $position) {\n    @error "Invalid swappable position: \'#{$position}\'. Choose one of #{$_swappable-positions}";\n  }\n\n  $next-position: bottom;\n  @if $position == left {\n    $next-position: right;\n  } @else if $position == right {\n    $next-position: left;\n  } @else if $position == bottom {\n    $next-position: top;\n  }\n\n  @return "#{$prefix}#{$next-position}";\n}\n\n@mixin auto-rtl-group($styles, $swapped-styles: ()) {\n  @include map-to-styles($styles);\n  @include rtl {\n    @each $property, $value in $styles {\n      $inversed-property: _swap-position($property);\n      $inversed-value: auto;\n      @if map.has-key($swapped-styles, $property) {\n        $inversed-value: map.get($swapped-styles, $property);\n      } @else if map.has-key($styles, $inversed-property) {\n        $inversed-value: map.get($swapped-styles, $inversed-property);\n      }\n\n      #{$property}: #{$inversed-value};\n      #{$inversed-property}: #{$value};\n\n      @content;\n    }\n  }\n}\n\n@mixin auto-rtl($property, $value, $swapped-value: null) {\n  @include rtl {\n    @if list.index($_swappable-properties, $property) {\n      $swapped-property-value: $swapped-value or _swap-position($value);\n      #{$property}: #{$swapped-property-value};\n    } @else {\n      $inversed-property: _swap-position($property);\n      @if not $swapped-value {\n        $swapped-value: auto;\n\n        @each $prefix in $_swappable-position-prefixes {\n          @if string.index($property, "#{$prefix}-") {\n            $swapped-value: 0;\n          }\n        }\n      }\n\n      #{$property}: #{$swapped-value};\n      #{$inversed-property}: #{$value};\n    }\n    @content;\n  }\n\n  #{$property}: #{$value};\n}\n\n@mixin keyboard-only($css-modules: false, $parent-selector: true) {\n  @include optional-css-modules(\n    ".keyboard-mode",\n    $css-modules,\n    $parent-selector\n  ) {\n    @content;\n  }\n}\n\n@mixin mouse-only($css-modules: false) {\n  @include optional-css-modules(".mouse-mode", $css-modules) {\n    @content;\n  }\n}\n\n@mixin touch-only($css-modules: false) {\n  @include optional-css-modules(".touch-mode", $css-modules) {\n    @content;\n  }\n}\n',
  "@react-md/window-splitter/window-splitter":
    '@use "sass:map";\n@use "../utils";\n@use "../interaction/interaction";\n@use "../transition/transition";\n\n$disable-everything: false !default;\n$disable-horizontal: false !default;\n$disable-vertical: false !default;\n$disable-reversed: false !default;\n$disable-absolute-position: false !default;\n\n$size: 1rem !default;\n$background-size: 0.25rem !default;\n$background-color: interaction.get-var(focus-color) !default;\n$z-index: 30 !default;\n\n$variables: (top, right, bottom, left, opacity, position);\n\n@function get-var($name, $fallback: null) {\n  $var: utils.get-var-name($variables, $name, "window-splitter");\n  // window-splitter variables don\'t make much sense to set globally\n  $value: if($fallback, $fallback, 0);\n  @if $value {\n    @return var(#{$var}, #{$value});\n  }\n\n  @return var(#{$var});\n}\n\n@mixin set-var($name, $value) {\n  @if $value {\n    #{utils.get-var-name($variables, $name, "window-splitter")}: #{$value};\n  }\n}\n\n@mixin use-var($property, $name: $property, $fallback: null) {\n  #{$property}: get-var($name, $fallback);\n}\n\n@mixin styles {\n  @if not $disable-everything {\n    .rmd-window-splitter {\n      @include use-var(opacity);\n\n      background-color: transparent;\n      border: 0;\n      outline-style: none;\n      padding: 0;\n      position: fixed;\n      transition: opacity transition.$linear-duration;\n      z-index: $z-index;\n\n      &::after {\n        background-color: $background-color;\n        content: "";\n        inset: 0;\n        position: absolute;\n      }\n\n      &:hover {\n        @include set-var(opacity, 1);\n      }\n\n      @include utils.keyboard-only {\n        &:focus {\n          @include set-var(opacity, 1);\n        }\n      }\n\n      @include utils.touch-only {\n        &:hover {\n          @include set-var(opacity, 0);\n        }\n      }\n\n      @if not $disable-horizontal {\n        &--h {\n          @include utils.auto-rtl(left, get-var(position));\n          @include use-var(bottom);\n          @include use-var(top);\n\n          cursor: col-resize;\n          width: $size;\n\n          &::after {\n            width: $background-size;\n          }\n        }\n\n        @if not $disable-reversed {\n          &--hr {\n            @include utils.auto-rtl(right, get-var(position));\n\n            left: auto;\n\n            &::after {\n              @include utils.auto-rtl(margin-left, auto);\n            }\n          }\n        }\n      }\n\n      @if not $disable-vertical {\n        &--v {\n          @include use-var(left);\n          @include use-var(right);\n          @include use-var(top, position);\n\n          cursor: row-resize;\n          height: $size;\n          width: 100%;\n\n          &::after {\n            height: $background-size;\n          }\n        }\n\n        @if not $disable-reversed {\n          &--vr {\n            @include use-var(bottom, position);\n\n            top: auto;\n\n            &::after {\n              top: calc(100% - $background-size);\n            }\n          }\n        }\n      }\n\n      @if not $disable-absolute-position {\n        &--a {\n          position: absolute;\n        }\n      }\n\n      &--dragging {\n        @include set-var(opacity, 1);\n\n        // set to important so that the `.rmd-dragging` styles do not affect\n        // window splitter\n        pointer-events: auto !important;\n      }\n    }\n  }\n}\n',
  everything:
    '@forward "overrides";\n\n@use "@react-md/core";\n\n@mixin light-theme($core) {\n  @if $core {\n    @include core.use-light-theme;\n  }\n\n  // Maybe add this one into core? Useful when you want a "transparent"\n  // background on any surface that actually has a background color so it can\n  // cover other elements\n  --background-color: #{core.$light-theme-background-color};\n  --code-color: #{core.$pink-600};\n  --preview-bg: #{core.$white};\n  --on-bg-color: #{core.$black};\n  --logo-shadow: #{core.$black};\n  --logo-outline: #{core.$grey-500};\n  --phone-app-bar-bg: #{core.$grey-100};\n  // TODO: Figure out good colors for these...\n  --info-bg: #{core.$light-blue-50};\n  --info-color: #{core.$blue-900};\n  --warning-bg: #{core.$yellow-700};\n  --warning-color: #{core.$black};\n  --error-bg: #{rgba(core.$red-700, 0.24)};\n  --error-color: #{core.$red-700};\n  --success-bg: #{core.$green-a-100};\n  --success-color: #{core.$green-900};\n}\n\n@mixin dark-theme($core) {\n  @if $core {\n    @include core.use-dark-theme;\n  }\n\n  --background-color: #{core.$dark-theme-background-color};\n  --code-color: #{core.$pink-400};\n  --preview-bg: #{core.$dark-theme-background-color};\n  --on-bg-color: #{core.$white};\n  --logo-shadow: #{core.$white};\n  --logo-outline: #{core.$white};\n  --phone-app-bar-bg: #{core.$grey-900};\n  // TODO: Figure out good colors for these...\n  --info-bg: #{rgba(core.$blue-900, 0.12)};\n  --info-color: #{core.$light-blue-200};\n  --warning-bg: #{rgba(core.$yellow-700, 0.24)};\n  --warning-color: #{core.$yellow-700};\n  --error-bg: #{rgba(core.$red-700, 0.24)};\n  --error-color: #{core.$red-700};\n  --success-bg: #{core.$green-900};\n  --success-color: #{core.$light-green-a-100};\n}\n',
  overrides:
    '@use "@react-md/core/colors";\n\n@forward "@react-md/core" with (\n  $color-scheme: system,\n  $font-family: var(--roboto, Roboto, sans-serif),\n  // transitions in a layer cause performance issues on mobile firefox. I think.\n  $disable-transition-layer: true,\n  // $color-scheme: light,\n  // $color-scheme: dark,\n  // disabled since it makes debugging a bit easier by having all the css\n  // variables in one block\n  $disable-default-root-theme: true,\n  $disable-default-system-theme: true,\n  // $interaction-disable-ripple-inset-var: true,\n  // $interaction-disable-ripple-border-radius-var: true,\n  // $interaction-disable-surface-inset-var: true,\n  // $interaction-disable-surface-border-radius-var: true,\n  // $font-family: var(--roboto),\n  $primary-color: colors.$teal-500,\n  $secondary-color: colors.$pink-a-200,\n  $icon-disable-font: true,\n  $layout-navigation-breakpoint: desktop,\n  // $disable-rtl: true,\n  // $box-grids: (\n  //   small: (\n  //     min: 2rem,\n  //   ),\n  //   half-padding: (\n  //     padding: 0.5rem,\n  //   ),\n  //   extra-padding: (\n  //     padding: 2rem,\n  //     gap: 0.5rem,\n  //   ),\n  // )\n);\n',
};
