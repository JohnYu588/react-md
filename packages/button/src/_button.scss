@use "sass:list";
@use "sass:map";
@use "@react-md/core";
@use "@react-md/icon";
@use "@react-md/progress";

$use-text: true !default;
$use-icon: true !default;
$use-outline: true !default;
$use-contained: true !default;
$use-contained-pressed-elevation: true !default;
$use-floating: true !default;
$use-floating-absolute-position: true !default;
$use-circular-progress: progress.$use-circular !default;

$background-color-var: --rmd-button-background-color;
$color-var: --rmd-button-color;
$border-radius-var: --rmd-button-text-border-radius;
$outline-color-var: --rmd-button-outline-color;
$contained-background-color-var: --rmd-button-contained-background-color;
$contained-color-var: --rmd-button-contained-color;

$themes: primary secondary warning error disabled !default;

$text-horizontal-padding-var: --rmd-button-text-horizontal-padding;
$text-vertical-padding-var: --rmd-button-text-vertical-padding;
$text-min-height-var: --rmd-button-text-min-height;
$text-min-width-var: --rmd-button-text-min-width;
$icon-size-var: --rmd-button-icon-size;

$text-border-radius: 0.5rem !default;
$text-horizontal-padding: 1rem !default;
$text-vertical-padding: 0 !default;
$text-min-height: 2.25rem !default;
$text-min-width: 4rem !default;
$text-icon-size: 1.125rem !default;

$icon-border-radius: 50% !default;
$icon-size: 3rem !default;

$outline-width: 1px !default;

$clear-color: var(core.$text-primary-color-var) !default;
$clear-outline-color: #999 !default;

$contained-elevation: 2 !default;
$contained-pressed-elevation: 4 !default;
$clear-contained-background-color: core.$light-theme-surface-color !default;
$clear-contained-color: core.contrast-color(
  $clear-contained-background-color
) !default;

$circular-progress-size: var(icon.$size-var) !default;

$floating-margin: 1.5rem !default;
$floating-z-index: core.$temporary-element-z-index !default;
$floating-positions: (
  tl: (
    left: $floating-margin,
    top: $floating-margin,
  ),
  tr: (
    right: $floating-margin,
    top: $floating-margin,
  ),
  bl: (
    bottom: $floating-margin,
    left: $floating-margin,
  ),
  br: (
    bottom: $floating-margin,
    right: $floating-margin,
  ),
) !default;

@mixin _theme($theme-name, $theme-color, $on-theme) {
  @if list.index($themes, $theme-name) {
    @if $use-contained {
      &--#{$theme-name} {
        #{$background-color-var}: var($theme-color);
        #{$color-var}: var($on-theme);
      }
    }

    &--text-#{$theme-name} {
      #{$color-var}: var($theme-color);
      @if $use-outline {
        #{$outline-color-var}: var($theme-color);
      }
    }
  }
}

@mixin styles {
  .rmd-button {
    @if $use-circular-progress {
      #{progress.$circular-size-var}: $circular-progress-size;
    }

    @include core.interaction-surface(
      $disabled-selector: "&:disabled" +
        if(list.index($themes, disabled), ",&[aria-disabled='true']", "")
    );

    align-items: center;
    background-color: var($background-color-var, transparent);
    border-radius: var($border-radius-var);
    border-width: 0;
    color: var($color-var);
    display: inline-flex;
    flex-shrink: 0;
    gap: var(icon.$spacing-var, icon.$spacing);
    justify-content: center;

    @if $use-text {
      &--text {
        #{$border-radius-var}: $text-border-radius;
        #{icon.$size-var}: $text-icon-size;

        @include core.map-to-styles(core.$button-styles);

        border: 0;
        min-height: var($text-min-height-var, $text-min-height);
        min-width: var($text-min-width-var, $text-min-width);
        padding: var($text-vertical-padding-var, $text-vertical-padding)
          var($text-horizontal-padding-var, $text-horizontal-padding);
      }
    }

    @if $use-icon {
      &--icon {
        #{$border-radius-var}: $icon-border-radius;
        #{icon.$color-var}: currentColor;

        height: var($icon-size-var, $icon-size);
        padding: 0;
        width: var($icon-size-var, $icon-size);
      }
    }

    @if $use-outline {
      &--outline {
        box-shadow: inset
          0
          0
          0
          $outline-width
          var($outline-color-var, $clear-outline-color);
      }
    }

    @if $use-contained {
      &--contained {
        @include core.elevation-transition(
          $contained-elevation,
          if(
            $use-contained-pressed-elevation,
            $contained-pressed-elevation,
            null
          ),
          "&.rmd-button--pressed",
          $pseudo-before: false
        );

        #{$background-color-var}: var(
          $contained-background-color-var,
          $clear-contained-background-color
        );
        #{$color-var}: var($contained-color-var, $clear-contained-color);
      }
    }

    @include _theme(
      primary,
      core.$primary-color-var,
      core.$on-primary-color-var
    );
    @include _theme(
      secondary,
      core.$secondary-color-var,
      core.$on-secondary-color-var
    );
    @include _theme(
      warning,
      core.$warning-color-var,
      core.$on-warning-color-var
    );
    @include _theme(error, core.$error-color-var, core.$on-error-color-var);

    @if list.index($themes, disabled) {
      &--disabled {
        #{$outline-color-var}: var(core.$text-disabled-color-var);
        color: var(core.$text-disabled-color-var);
      }
    }
  }

  @if $use-floating {
    .rmd-fab {
      position: fixed;
      z-index: $floating-z-index;

      @if $use-floating-absolute-position {
        &--absolute {
          position: absolute;
        }
      }

      @each $suffix, $styles in $floating-positions {
        &--#{$suffix} {
          @each $property, $value in $styles {
            @if $property == left or $property == right {
              @include core.auto-rtl($property, $value);
            } @else {
              #{$property}: #{$value};
            }
          }
        }
      }
    }
  }
}
