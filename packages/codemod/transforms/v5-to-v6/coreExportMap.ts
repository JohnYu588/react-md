// THIS FILE WAS GENERATED BY A SCRIPT AND SHOULD NOT BE UPDATED MANUALLY

export const TYPES: ReadonlySet<string> = new Set([
  "ActiveHeadingIdOptions",
  "AlphaNumericSortOptions",
  "AnyFunction",
  "AppBarClassNameOptions",
  "AppBarHeight",
  "AppBarPosition",
  "AppBarProps",
  "AppBarTheme",
  "AppBarTitleClassNameOptions",
  "AppBarTitleKeyline",
  "AppBarTitleProps",
  "AppSize",
  "AppSizeProviderProps",
  "AppSizeQueries",
  "AsyncButtonLoadingType",
  "AsyncButtonProps",
  "AsyncFunction",
  "AsyncFunctionHookImplementation",
  "AsyncFunctionHookOptions",
  "AutocompleteAttributeValue",
  "AutocompleteBaseProps",
  "AutocompleteChipClassNameOptions",
  "AutocompleteChipProps",
  "AutocompleteCircularProgressProps",
  "AutocompleteClassNameOptions",
  "AutocompleteClearButtonClassNameOptions",
  "AutocompleteClearButtonProps",
  "AutocompleteComboboxProps",
  "AutocompleteControlledQuery",
  "AutocompleteControlledValue",
  "AutocompleteDropdownButtonClassNameOptions",
  "AutocompleteDropdownButtonProps",
  "AutocompleteEditableComboboxOptions",
  "AutocompleteFilterAndListboxOptions",
  "AutocompleteFilterFunction",
  "AutocompleteFilteringOptions",
  "AutocompleteFilterOptions",
  "AutocompleteGetChipProps",
  "AutocompleteGetOptionLabel",
  "AutocompleteGetOptionProps",
  "AutocompleteGetOptionPropsOptions",
  "AutocompleteImplementation",
  "AutocompleteLabeledOption",
  "AutocompleteListboxChildrenProps",
  "AutocompleteListboxLabelProps",
  "AutocompleteListboxProps",
  "AutocompleteMultiSelectImplementation",
  "AutocompleteMultiSelectOptions",
  "AutocompleteMultiSelectProps",
  "AutocompleteOption",
  "AutocompleteOptionLabelExtractor",
  "AutocompleteOptions",
  "AutocompleteProps",
  "AutocompleteQuery",
  "AutocompleteQueryAndExtractorOptions",
  "AutocompleteQueryAndExtractorProps",
  "AutocompleteRightAddonClassNameOptions",
  "AutocompleteSingleSelectImplementation",
  "AutocompleteSingleSelectOptions",
  "AutocompleteSingleSelectProps",
  "AutocompleteUncontrolledQuery",
  "AutocompleteUncontrolledValue",
  "AutocompleteUnknownQueryAndValueOptions",
  "AutocompleteUpdateQueryOnSelect",
  "AutocompleteValue",
  "AutocompleteWithQueryImplementation",
  "AvatarClassNameOptions",
  "AvatarImageClassNameOptions",
  "AvatarImgAttributes",
  "AvatarProps",
  "BackgroundColor",
  "BadgeClassNameOptions",
  "BadgeProps",
  "BadgeTheme",
  "BaseDialogProps",
  "BaseDraggableOptions",
  "BaseDropdownMenuProps",
  "BaseFileUploadStats",
  "BaseFixedDialogProps",
  "BaseInputToggleProps",
  "BaseIntersectionObserverHookOptions",
  "BaseMenuButtonProps",
  "BaseMenuItemInputToggleProps",
  "BaseOptions",
  "BaseSearchOptions",
  "BaseSheetClassNameOptions",
  "BaseSheetProps",
  "BaseSliderProps",
  "BaseTabListScrollButtonProps",
  "BaseTabProps",
  "BaseWindowSplitterOptions",
  "BaseWindowSplitterProps",
  "BEMModifier",
  "BEMResult",
  "BoxAlignItems",
  "BoxFlexDirection",
  "BoxJustifyContent",
  "BoxOptions",
  "BoxProps",
  "BuildTreeOptions",
  "ButtonClassNameOptions",
  "ButtonClassNameThemeOptions",
  "ButtonProps",
  "ButtonTheme",
  "ButtonThemeType",
  "ButtonType",
  "ButtonUnstyledClassNameOptions",
  "ButtonUnstyledProps",
  "CalculateFixedPositionOptions",
  "CancelableFunction",
  "CardClassNameOptions",
  "CardContentClassNameOptions",
  "CardContentProps",
  "CardFooterClassNameOptions",
  "CardFooterProps",
  "CardHeaderClassNameOptions",
  "CardHeaderContentClassNameOptions",
  "CardHeaderProps",
  "CardProps",
  "CardSubtitleClassNameOptions",
  "CardSubtitleProps",
  "CardTitleClassNameOptions",
  "CardTitleProps",
  "CarouselImplementation",
  "CarouselOptions",
  "CarouselSlideState",
  "CarouselState",
  "CaseInsensitiveOptions",
  "CaseInsensitiveStartsWithOptions",
  "ChangeableHTMLElement",
  "CheckboxGroupImplementation",
  "CheckboxGroupOptions",
  "CheckboxInputToggleProps",
  "CheckboxProps",
  "ChipClassNameOptions",
  "ChipContentClassNameOptions",
  "ChipProps",
  "CircularProgressProps",
  "CircularProgressSuspenseProps",
  "ClassNameCloneableChild",
  "ClickableCardProps",
  "ClientPositionEvent",
  "ClientPositionMouseEvent",
  "ClientPositionOptions",
  "ClientPositionTouchEvent",
  "ClosestThumbEventHandlersOptions",
  "CollapseClassNameOptions",
  "CollapseConfigurationStyle",
  "CollapseElementProps",
  "CollapseProps",
  "CollapseSizing",
  "CollapseStyle",
  "CollapseTransitionHookOptions",
  "CollapseTransitionHookReturnValue",
  "CollapsibleNavGroupProps",
  "ColorScheme",
  "ColorSchemeContext",
  "ColorSchemeMetaTagOptions",
  "ColorSchemeProviderOptions",
  "ColorSchemeState",
  "CombinedCheckboxGroupReturnValue",
  "CombinedRadioGroupReturnValue",
  "ComboboxGetEnterDefaultFocusedIndexOptions",
  "ComboboxImplementation",
  "ComboboxKeyboardMovementData",
  "ComboboxKeyboardMovementOptions",
  "ComboboxMenuProps",
  "ComboboxOptions",
  "ComboboxTransitionCallbacks",
  "ComboboxTransitionOptions",
  "ComboboxVisibilityOptions",
  "ComboboxWidgetPopupProps",
  "ComboboxWidgetProps",
  "CompletedFileUploadStats",
  "ComponentWithRippleProps",
  "ConfigurableAutocompleteClearButtonProps",
  "ConfigurableAutocompleteDropdownButtonProps",
  "ConfigurableAutocompleteListboxProps",
  "ConfigurableAutocompleteOptionProps",
  "ConfigurableComboboxMenuProps",
  "ConfigurableComboboxOptions",
  "ConfigurableIconName",
  "ConfigurableIcons",
  "ConfigurableTextFieldAddonProps",
  "ConfigurableThemeColors",
  "ConfigurableThemeColorsName",
  "ConfigurableToastProps",
  "ConfigurableVisibilityIcon",
  "ConfiguredIcons",
  "ContextMenuHookOptions",
  "ContextMenuImplementation",
  "ContextMenuProps",
  "ContrastRatioCompliance",
  "ControllableDraggableStateOptions",
  "ControlledDraggingDraggableOptions",
  "ControlledHoverModeImplementation",
  "ControlledHoverModeOptions",
  "ControlledValueDraggableOptions",
  "Coords",
  "CoreProvidersProps",
  "CreateHorizontalPositionOptions",
  "CreateHoverModeContextOptions",
  "CreateToastOptions",
  "CreateVerticalPositionOptions",
  "CrossFadeProps",
  "CrossFadeTransitionHookOptions",
  "CssPosition",
  "CSSTransitionClassNames",
  "CSSTransitionClassNamesObject",
  "CSSTransitionComponentImplementation",
  "CSSTransitionComponentProps",
  "CSSTransitionElementProps",
  "CSSTransitionHookOptions",
  "CSSTransitionHookReturnValue",
  "CSSTransitionProps",
  "CssUtilsOptions",
  "CSSVariable",
  "CSSVariableName",
  "CSSVariablesProperties",
  "CurrentToastActions",
  "CustomAppBarComponent",
  "CustomizableSliderMarkLabelProps",
  "CustomLinkComponent",
  "CustomMainElement",
  "CustomNavigationLinkComponent",
  "CustomTypographyComponent",
  "DebouncedFunction",
  "DefaultDir",
  "DefaultNavigationRendererProps",
  "DefaultTreeItemNode",
  "DefinedCSSVariableName",
  "DefinedCustomProperty",
  "DelegableEvent",
  "DelegatedEventHandler",
  "DelegatedEventTarget",
  "DeserializeDraggableValueOptions",
  "DialogClassNameOptions",
  "DialogContainerClassNameOptions",
  "DialogContentClassNameOptions",
  "DialogContentProps",
  "DialogFooterAlignment",
  "DialogFooterClassNameOptions",
  "DialogFooterProps",
  "DialogHeaderClassNameOptions",
  "DialogHeaderProps",
  "DialogProps",
  "DialogTitleProps",
  "DialogType",
  "DialogWidth",
  "Dir",
  "DividerClassNameOptions",
  "DividerElement",
  "DividerProps",
  "DraggableEventHandlers",
  "DraggableImplementation",
  "DraggableKeyboardEventHandlers",
  "DraggableMouseEventHandlers",
  "DraggableOptions",
  "DraggableStateOptions",
  "DraggableTouchEventHandlers",
  "DropdownMenuButtonProps",
  "DropdownMenuItemButtonProps",
  "DropdownMenuProps",
  "DropdownMenuStateProps",
  "DropzoneHandlers",
  "DropzoneImplementation",
  "DropzoneOptions",
  "EditableComboboxImplementation",
  "EditableComboboxOptions",
  "EditableComboboxWidgetProps",
  "EditableHTMLElement",
  "ElementFocusType",
  "ElementInteractionConfiguration",
  "ElementInteractionHandlers",
  "ElementInteractionImplementation",
  "ElementInteractionMode",
  "ElementInteractionOptions",
  "ElementInteractionState",
  "ElementSize",
  "ElementSizeImplementation",
  "ElementSizeOptions",
  "EnforceSelectedValueOptions",
  "EnsuredRefs",
  "EnsuredStateOptions",
  "EqualWidthOptions",
  "ErrorChangeHandler",
  "ErrorChangeHandlerOptions",
  "ErrorMessageOptions",
  "ExpandableLayoutImplementation",
  "ExpandableLayoutOptions",
  "ExpansionListHookOptions",
  "ExpansionListImplementation",
  "ExpansionListProps",
  "ExpansionPanelButtonClassNameOptions",
  "ExpansionPanelClassNameOptions",
  "ExpansionPanelHeaderProps",
  "ExpansionPanelHeadingClassNameOptions",
  "ExpansionPanelHookOptions",
  "ExpansionPanelImplementation",
  "ExpansionPanelProps",
  "ExtendComboboxKeyDown",
  "ExtendKeyDown",
  "FieldsetClassNameOptions",
  "FieldsetProps",
  "FileInputClassNameOptions",
  "FileInputHTMLAttributes",
  "FileInputProps",
  "FileReaderParser",
  "FileReaderResult",
  "FilesValidationOptions",
  "FilesValidator",
  "FileUploadActions",
  "FileUploadHandlers",
  "FileUploadHookReturnValue",
  "FileUploadHookState",
  "FileUploadOptions",
  "FileUploadState",
  "FileUploadStats",
  "FileUploadStatus",
  "FileValidationError",
  "FileValidationOptions",
  "FixConfig",
  "FixedDialogProps",
  "FixedPosition",
  "FixedPositioningImplementation",
  "FixedPositioningOptions",
  "FixedPositioningScrollData",
  "FixedPositioningTransitionCallbacks",
  "FixedPositioningTransitionOptions",
  "FixedPositionOptions",
  "FixedPositionStyle",
  "FloatingActionButtonClassNameOptions",
  "FloatingActionButtonPosition",
  "FloatingActionButtonProps",
  "FocusableIndexOptions",
  "FocusContainerComponentProps",
  "FocusContainerEventHandlers",
  "FocusContainerImplementation",
  "FocusContainerOptions",
  "FocusContainerTransitionCallbacks",
  "FocusContainerTransitionOptions",
  "FocusElementWithinOptions",
  "FocusElementWithinType",
  "FocusType",
  "FontIconClassNameOptions",
  "FontIconProps",
  "FontStyle",
  "FontWeight",
  "FormComponentStates",
  "FormConfiguration",
  "FormFieldOptions",
  "FormMessageClassNameOptions",
  "FormMessageContainerClassNameOptions",
  "FormMessageContainerExtension",
  "FormMessageContainerProps",
  "FormMessageCounterClassNameOptions",
  "FormMessageCounterProps",
  "FormMessageInputLengthCounterProps",
  "FormMessageProps",
  "FormMessageTextClassNameOptions",
  "FormMessageWithCounterProps",
  "FormMessageWithoutCounterProps",
  "FormProps",
  "FormResetOptions",
  "FormTheme",
  "FormThemeOptions",
  "FormUnderlineDirection",
  "FullyControlledDraggableOptions",
  "FuzzyMatch",
  "FuzzyMatchOptions",
  "FuzzySearchOptions",
  "GetDefaultFocusedIndex",
  "GetDefaultValueOptions",
  "GetErrorIcon",
  "GetErrorIconOptions",
  "GetErrorMessage",
  "GetExpansionPanelProps",
  "GetFileParser",
  "GetFocusableElements",
  "GetItemFromStorageOptions",
  "GetMenuItemRadioGroupProps",
  "GetMiddleOfRangeOptions",
  "GetPasswordVisibilityIcon",
  "GetPercentageOptions",
  "GetPositionOptions",
  "GetRadioGroupProps",
  "GetStorageSerializers",
  "GetTableOfContentsHeadingsOptions",
  "GetTabListScrollToOptions",
  "HandleAsyncFunction",
  "HeadingReference",
  "HeadingReferenceWithChildren",
  "HorizontalLayoutTransitionOptions",
  "HorizontalPosition",
  "HoverModeConfiguration",
  "HoverModeConfigurationOptions",
  "HoverModeContext",
  "HoverModeImplementation",
  "HtmlTagName",
  "IconClassNameOptions",
  "IconRotatorBaseProps",
  "IconRotatorClassNameOptions",
  "IconRotatorProps",
  "IndeterminateCheckboxGroupImplementation",
  "IndeterminateCheckboxProps",
  "IndeterminateMenuItemCheckboxGroupImplementation",
  "IndicatorCSSProperties",
  "InitialCoords",
  "InputToggleClassNameOptions",
  "InputToggleIconProps",
  "InputToggleLabelProps",
  "InputToggleProps",
  "InputToggleSize",
  "InternalListItemClassNameOptions",
  "IntersectionObserverHookOptions",
  "IntersectionObserverRoot",
  "IntersectionObserverRootMargin",
  "IntersectionObserverThreshold",
  "IsCaseInsensitiveMatchOptions",
  "IsErrored",
  "IsErroredOptions",
  "IsFocusTypeDisabled",
  "IsStickyTableSectionActive",
  "IsValidFileName",
  "KeyboardMovementBehavior",
  "KeyboardMovementConfig",
  "KeyboardMovementConfiguration",
  "KeyboardMovementContext",
  "KeyboardMovementExtensionData",
  "KeyboardMovementFocusChangeEvent",
  "KeyboardMovementFocusChangeEventHandler",
  "KeyboardMovementProps",
  "KeyboardMovementProviderImplementation",
  "KeyboardMovementProviderOptions",
  "LabelA11y",
  "LabelClassNameOptions",
  "LabelProps",
  "LabelRequiredForA11y",
  "LayoutAppBarHeightResult",
  "LayoutAppBarProps",
  "LayoutNavClassNameOptions",
  "LayoutNavProps",
  "LayoutTreeImplementation",
  "LayoutTreeOptions",
  "LayoutWindowSplitterClassNameOptions",
  "LayoutWindowSplitterImplementation",
  "LayoutWindowSplitterOptions",
  "LayoutWindowSplitterProps",
  "LegendProps",
  "LightDarkColorScheme",
  "LinearProgressProps",
  "LinkClassNameOptions",
  "LinkProps",
  "ListboxContext",
  "ListboxProps",
  "ListboxValue",
  "ListClassNameOptions",
  "ListElement",
  "ListItemAddonClassNameOptions",
  "ListItemAddonPosition",
  "ListItemAddonProps",
  "ListItemAddonType",
  "ListItemChildrenAddonProps",
  "ListItemChildrenProps",
  "ListItemChildrenTextProps",
  "ListItemClassNameOptions",
  "ListItemHeight",
  "ListItemHeightOptions",
  "ListItemLinkProps",
  "ListItemProps",
  "ListItemTextClassNameOptions",
  "ListItemTextProps",
  "ListProps",
  "ListSubheaderClassNameOptions",
  "ListSubheaderProps",
  "LocalStorageColorSchemeProviderProps",
  "LoopOptions",
  "MainClassNameOptions",
  "MainProps",
  "Margin",
  "MatchIndexOptions",
  "MatchInRangeOptions",
  "MaterialConfiguration",
  "MaterialIconClassNameOptions",
  "MaterialIconConfiguration",
  "MaterialIconCustomization",
  "MaterialIconFamily",
  "MaterialIconName",
  "MaterialIconProps",
  "MaterialSymbolClassNameOptions",
  "MaterialSymbolConfiguration",
  "MaterialSymbolCustomization",
  "MaterialSymbolFamily",
  "MaterialSymbolFill",
  "MaterialSymbolFontVariationSettings",
  "MaterialSymbolGrade",
  "MaterialSymbolName",
  "MaterialSymbolOpticalSize",
  "MaterialSymbolProps",
  "MaterialSymbolWeight",
  "MaxTabPanelHeightImplementation",
  "MaxTabPanelHeightOptions",
  "MaxWidthTransitionClassNameOptions",
  "MaxWidthTransitionOptions",
  "MenuBarContext",
  "MenuBarProps",
  "MenuBarProviderOptions",
  "MenuButtonIconRotatorProps",
  "MenuButtonProps",
  "MenuButtonTextIconSpacingProps",
  "MenuClassNameOptions",
  "MenuConfiguration",
  "MenuConfigurationContext",
  "MenuConfigurationProps",
  "MenuConfigurationProviderProps",
  "MenuConvenienceProps",
  "MenuFixedPositioningOptions",
  "MenuItemButtonProps",
  "MenuItemCheckboxGroupImplementation",
  "MenuItemCheckboxProps",
  "MenuItemCircularProgressProps",
  "MenuItemFileInputProps",
  "MenuItemGroupProps",
  "MenuItemInputToggleBallClassNameOptions",
  "MenuItemInputToggleCheckedCallback",
  "MenuItemInputToggleClassNameOptions",
  "MenuItemInputToggleIconClassNameOptions",
  "MenuItemInputToggleProps",
  "MenuItemInputToggleTrackClassNameOptions",
  "MenuItemProps",
  "MenuItemRadioGroupImplementation",
  "MenuItemRadioProps",
  "MenuItemSeparatorProps",
  "MenuItemSwitchProps",
  "MenuItemTextFieldProps",
  "MenuListConvenienceProps",
  "MenuOrientationProps",
  "MenuProps",
  "MenuSheetConfigurableProps",
  "MenuSheetConvenienceProps",
  "MenuSheetProps",
  "MenuTransitionProps",
  "MenuVisibilityContext",
  "MenuVisibilityProviderProps",
  "MenuWidgetKeyboardProviderProps",
  "MenuWidgetProps",
  "ModifyStorageOptions",
  "MutationObserverHookOptions",
  "NativeSelectClassNameOptions",
  "NativeSelectContainerClassNameOptions",
  "NativeSelectProps",
  "NavGroupClassNameOptions",
  "NavGroupProps",
  "NavigationExpansion",
  "NavigationExpansionImplementation",
  "NavigationExpansionOptions",
  "NavigationItem",
  "NavigationItemDivider",
  "NavigationItemGroup",
  "NavigationItemRoute",
  "NavigationItemSubheader",
  "NavigationLinkComponent",
  "NavigationProps",
  "NavigationRenderData",
  "NavItemButtonProps",
  "NavItemButtonRotatorProps",
  "NavItemClassNameOptions",
  "NavItemContentClassNameOptions",
  "NavItemContentProps",
  "NavItemLinkClassNameOptions",
  "NavItemLinkProps",
  "NavItemProps",
  "NavSubheaderProps",
  "NearestOptions",
  "NonNullMutableRef",
  "NonNullRef",
  "NoSsrProps",
  "NullableTypographyClassNameOptions",
  "NullSuspenseProps",
  "NumberFieldConstraints",
  "NumberFieldHookOptions",
  "NumberFieldHookState",
  "NumberFieldImplementation",
  "NumberFieldWithMessageImplementation",
  "ObjectFitOptions",
  "OptGroupProps",
  "OptionClassNameOptions",
  "OptionProps",
  "OptionSelectedIconProps",
  "OutlineColor",
  "OverlayClassNameOptions",
  "OverlayProps",
  "OverridableTreeGroupProps",
  "PageInactiveOptions",
  "PageInactiveType",
  "ParseCssLengthUnitOptions",
  "PasswordClassNameOptions",
  "PasswordInputClassNameOptions",
  "PasswordInputToggleClassNameOptions",
  "PasswordProps",
  "PortalContainer",
  "PortalContainerNode",
  "PortalContainerProviderProps",
  "PortalProps",
  "PositionAnchor",
  "PositionWidth",
  "PreconfiguredCSSTransitionInDefaultedOptions",
  "PreconfiguredCSSTransitionOptions",
  "PreconfiguredTransitionInDefaultedOptions",
  "PreconfiguredTransitionOptions",
  "ProcessingFileUploadStats",
  "ProgressA11y",
  "ProgressProps",
  "ProgressTheme",
  "PropsWithRef",
  "ProvidedComboboxMenuProps",
  "ProvidedExpandableLayoutNavToggleProps",
  "ProvidedExpansionPanelProps",
  "ProvidedFormMessageProps",
  "ProvidedLayoutAppBarProps",
  "ProvidedLayoutMainProps",
  "ProvidedLayoutNavProps",
  "ProvidedLayoutNavToggleProps",
  "ProvidedLayoutWindowSplitterProps",
  "ProvidedMaxTabPanelsHeightProps",
  "ProvidedNumberFieldMessageProps",
  "ProvidedNumberFieldProps",
  "ProvidedRadioGroupProps",
  "ProvidedResizableLayoutNavProps",
  "ProvidedRippleContainerProps",
  "ProvidedTabListProps",
  "ProvidedTabPanelProps",
  "ProvidedTabPanelsProps",
  "ProvidedTabProps",
  "ProvidedTemporaryLayoutAppBarProps",
  "ProvidedTemporaryLayoutMainProps",
  "ProvidedTemporaryLayoutNavProps",
  "ProvidedTextFieldMessageProps",
  "ProvidedTextFieldProps",
  "ProvidedTooltippedElementProps",
  "ProvidedTooltipProps",
  "QuerySize",
  "QueuedToast",
  "RadioGroupImplementation",
  "RadioGroupOptions",
  "RadioInputToggleProps",
  "RadioProps",
  "RandomIntOptions",
  "RangeDefaultValueOptions",
  "RangeSliderImplementation",
  "RangeSliderOptions",
  "RangeSliderProps",
  "RangeSliderState",
  "RangeSliderValue",
  "RangeStepsOptions",
  "ReactMDCoreConfiguration",
  "ReadonlyCSSVariableList",
  "ReadonlySetImplementation",
  "ReadonlySetOptions",
  "RecalculateOptions",
  "RecursiveItem",
  "RecursiveItemKeyOptions",
  "RenameKeysWithPrefix",
  "RenderableTreeItemNode",
  "RenderMenuAsSheet",
  "RenderRecursiveItemsProps",
  "RenderRecursivelyProps",
  "RequireAtLeastOne",
  "RequiredThumbProps",
  "ResizableLayoutImplementation",
  "ResizableLayoutOptions",
  "ResizeListenerOptions",
  "ResizeObserverEntryCallback",
  "ResizeObserverHookOptions",
  "ResizingTextAreaOptions",
  "ResizingTextAreaReturnValue",
  "ResizingTextAreaWrapperProps",
  "ResponsiveItemClassNameOptions",
  "ResponsiveItemOverlayClassNameOptions",
  "ResponsiveItemOverlayPosition",
  "ResponsiveItemOverlayProps",
  "ResponsiveItemProps",
  "RGB",
  "RippleContainerProps",
  "RippleProps",
  "RippleState",
  "RippleStateList",
  "RippleStyle",
  "RippleTransitionCallbacks",
  "RootHtmlProps",
  "ScaleTransitionHookOptions",
  "ScaleTransitionProps",
  "SearchOptions",
  "SegmentedButtonClassNameOptions",
  "SegmentedButtonContainerClassNameOptions",
  "SegmentedButtonContainerProps",
  "SegmentedButtonProps",
  "SelectChangeEvent",
  "SelectClassNameOptions",
  "SelectComboboxImplementation",
  "SelectComboboxOptions",
  "SelectedOptionProps",
  "SelectOption",
  "SelectProps",
  "SetChildDialogVisible",
  "SetItemInStorageOptions",
  "SheetClassNameOptions",
  "SheetDialogProps",
  "SheetHorizontalSize",
  "SheetPosition",
  "SheetProps",
  "SheetVerticalSize",
  "SimpleHoverModeContext",
  "SimplePosition",
  "SimpleTabPanelProps",
  "SimpleTabPanelsProps",
  "SkeletonPlaceholderOptions",
  "SkeletonPlaceholderProps",
  "SkeletonPlaceholderRandomOptions",
  "SkeletonPlaceholderStylingProps",
  "SkipToMainContentClassNameOptions",
  "SkipToMainContentProps",
  "SlideContainerClassNameOptions",
  "SlideContainerProps",
  "SlideDirection",
  "SlideProps",
  "SliderAddonProps",
  "SliderContainerClassNameOptions",
  "SliderContainerProps",
  "SliderImplementation",
  "SliderMarkClassNameOptions",
  "SliderMarkLabelClassNameOptions",
  "SliderMarkLabelProps",
  "SliderMarkProps",
  "SliderMarksOptions",
  "SliderOptions",
  "SliderProps",
  "SliderState",
  "SliderThumbClassNameOptions",
  "SliderThumbInputClassNameOptions",
  "SliderThumbPresentation",
  "SliderThumbProps",
  "SliderTooltipVisibility",
  "SliderTrackClassNameOptions",
  "SliderTrackProps",
  "SliderValueMark",
  "SliderValueMarksProps",
  "SliderValueMarkState",
  "SliderValueOptions",
  "SliderValueTooltipClassNameOptions",
  "SliderValueTooltipProps",
  "SlideTransitionOptions",
  "SnackbarClassNameOptions",
  "SnackbarPosition",
  "SnackbarProps",
  "SortOrder",
  "SplitFileUploads",
  "SrOnlyProps",
  "SsrProviderProps",
  "SSRTransitionOptions",
  "StickyTableSectionProps",
  "StorageDeserializer",
  "StorageImplementation",
  "StorageOptions",
  "StorageSerializer",
  "StorageSerializers",
  "SupportedComboboxPopup",
  "SupportedInputTypes",
  "SVGIconClassNameOptions",
  "SVGIconProps",
  "SwitchBallClassNameOptions",
  "SwitchClassNameOptions",
  "SwitchProps",
  "SwitchTrackClassNameOptions",
  "SwitchTrackProps",
  "TabButtonProps",
  "TabClassNameOptions",
  "TabIndexBehavior",
  "TabIndicatorClassNameOptions",
  "TableBodyProps",
  "TableCellAttributes",
  "TableCellClassNameOptions",
  "TableCellConfig",
  "TableCellConfiguration",
  "TableCellContentProps",
  "TableCellContentsIconRotatorProps",
  "TableCellHorizontalAlignment",
  "TableCellOptions",
  "TableCellProps",
  "TableCellVerticalAlignment",
  "TableCheckboxProps",
  "TableCheckboxSupportedCheckboxProps",
  "TableCheckboxTdHTMLAttributes",
  "TableClassNameOptions",
  "TableConfig",
  "TableConfigContext",
  "TableConfiguration",
  "TableContainerClassNameOptions",
  "TableContainerContext",
  "TableContainerProps",
  "TableFooterClassNameOptions",
  "TableFooterProps",
  "TableHeaderClassNameOptions",
  "TableHeaderProps",
  "TableOfContentsHeading",
  "TableOfContentsHeadingItem",
  "TableOfContentsHeadings",
  "TableOfContentsHeadingsOptions",
  "TableProps",
  "TableRadioProps",
  "TableRadioSupportedRadioProps",
  "TableRadioTdHTMLAttributes",
  "TableRowClassNameOptions",
  "TableRowConfiguration",
  "TableRowProps",
  "TableSectionConfigOptions",
  "TableSectionConfiguration",
  "TableStickySectionConfiguration",
  "TableStickySectionImplementation",
  "TableStickySectionIntersectionObserverOptions",
  "TableStickySectionOptions",
  "TabLinkProps",
  "TabListActivationMode",
  "TabListClassNameOptions",
  "TabListHookOptions",
  "TabListHookReturnValue",
  "TabListProps",
  "TabListScrollButtonClassNameOptions",
  "TabListScrollButtonContainerClassNameOptions",
  "TabListScrollButtonProps",
  "TabListScrollButtonsBehavior",
  "TabListScrollToOptions",
  "TabOffsetVar",
  "TabProps",
  "TabsAlignment",
  "TabsHookOptions",
  "TabsImplementation",
  "TabWidthVar",
  "TemporaryLayoutImplementation",
  "TemporaryLayoutOptions",
  "TextAlign",
  "TextareaClassNameOptions",
  "TextareaContainerClassNameOptions",
  "TextAreaProps",
  "TextAreaResize",
  "TextColor",
  "TextContainerClassNameOptions",
  "TextContainerProps",
  "TextCssUtilsOptions",
  "TextDecoration",
  "TextExtractor",
  "TextFieldAddonClassNameOptions",
  "TextFieldAddonProps",
  "TextFieldChangeHandlers",
  "TextFieldClassNameOptions",
  "TextFieldContainerAddonsImplementation",
  "TextFieldContainerAddonsOptions",
  "TextFieldContainerClassNameOptions",
  "TextFieldContainerOptions",
  "TextFieldContainerProps",
  "TextFieldHookOptions",
  "TextFieldHookState",
  "TextFieldImplementation",
  "TextFieldInputAttributes",
  "TextFieldProps",
  "TextFieldValidationOptions",
  "TextFieldValidationType",
  "TextFieldWithMessageImplementation",
  "TextIconSpacingProps",
  "TextOverflow",
  "TextTransform",
  "ThemeColor",
  "ThemeColors",
  "ThemeContext",
  "ThemeProviderProps",
  "ThemeTextColors",
  "ThrottledFunction",
  "ThumbOffsetsOptions",
  "ToastActionButtonProps",
  "ToastCallback",
  "ToastClassNameOptions",
  "ToastCloseButtonProps",
  "ToastContentClassNameOptions",
  "ToastContentProps",
  "ToastDuplicateBehavior",
  "ToastManagerProviderProps",
  "ToastMeta",
  "ToastPriority",
  "ToastProps",
  "ToastQueue",
  "ToastRendererProps",
  "ToastVisibilityTimers",
  "ToggleImplementation",
  "TooltipClassNameOptions",
  "TooltipHoverModeContext",
  "TooltipHoverModeProviderProps",
  "TooltipImplementation",
  "TooltipOptions",
  "TooltippedButtonProps",
  "TooltippedElementEventHandlers",
  "TooltipPositionHookOptions",
  "TooltipPositionHookReturnValue",
  "TooltipPositioningOptions",
  "TooltipProps",
  "TransformOriginOptions",
  "TransitionActions",
  "TransitionCallbacks",
  "TransitionClassNamesOptions",
  "TransitionConfig",
  "TransitionEnterHandler",
  "TransitionExitHandler",
  "TransitionHookOptions",
  "TransitionHookReturnValue",
  "TransitionOptions",
  "TransitionScrollCallback",
  "TransitionStage",
  "TransitionState",
  "TransitionTimeout",
  "TransitionTimeoutObject",
  "TransitionTimeoutOptions",
  "TreeClassNameOptions",
  "TreeContext",
  "TreeData",
  "TreeDefaultIds",
  "TreeExpansion",
  "TreeExpansionMode",
  "TreeGroupClassNameOptions",
  "TreeGroupProps",
  "TreeHookOptions",
  "TreeHTMLAttributes",
  "TreeImplementation",
  "TreeItemChildIds",
  "TreeItemClassNameOptions",
  "TreeItemContentClassNameOptions",
  "TreeItemExpanderProps",
  "TreeItemIdSet",
  "TreeItemMediaClassNameOptions",
  "TreeItemMetadataLookup",
  "TreeItemNode",
  "TreeItemOptions",
  "TreeItemProps",
  "TreeItemRendererProps",
  "TreeItems",
  "TreeItemSorter",
  "TreeProps",
  "TreeProviderProps",
  "TreeSelection",
  "TypographyClassNameOptions",
  "TypographyHTMLElement",
  "TypographyProps",
  "TypographyType",
  "UncontrolledDraggableOptions",
  "UncontrolledHoverModeImplementation",
  "UncontrolledHoverModeOptions",
  "UpdateTooltipPosition",
  "UserAgentAutocompleteProps",
  "UserInteractionMode",
  "UserInteractionModeProviderProps",
  "UseStateInitializer",
  "UseStateObject",
  "UseStateSetter",
  "ValidatedFilesResult",
  "ValidatedNumberFieldImplementation",
  "ValidatedTextFieldImplementation",
  "VerticalPosition",
  "VirtualFocusableIndexOptions",
  "WhitespaceFilter",
  "WindowSizeOptions",
  "WindowSplitterClassNameOptions",
  "WindowSplitterImplementation",
  "WindowSplitterOptions",
  "WindowSplitterProps",
  "WindowSplitterWidgetProps",
  "WithinRangeOptions",
  "WritingDirectionContext",
  "WritingDirectionProviderProps",
  "XCoordConfig",
  "YCoordConfig",
]);
export const VARIABLES: ReadonlySet<string> = new Set([
  "AAA_CONTRAST_RATIO",
  "ABOVE_CENTER_ANCHOR",
  "ABOVE_INNER_LEFT_ANCHOR",
  "ABOVE_INNER_RIGHT_ANCHOR",
  "ABOVE_LEFT_ANCHOR",
  "ABOVE_RIGHT_ANCHOR",
  "addToast",
  "alphaNumericSort",
  "amber50",
  "amber100",
  "amber200",
  "amber300",
  "amber400",
  "amber500",
  "amber600",
  "amber700",
  "amber800",
  "amber900",
  "amberAccent100",
  "amberAccent200",
  "amberAccent400",
  "amberAccent700",
  "AppBar",
  "appBar",
  "AppBarTitle",
  "appBarTitle",
  "applyRef",
  "AppSizeProvider",
  "AsyncButton",
  "Autocomplete",
  "autocomplete",
  "AutocompleteChip",
  "autocompleteChip",
  "AutocompleteCircularProgress",
  "AutocompleteClearButton",
  "autocompleteClearButton",
  "AutocompleteDropdownButton",
  "autocompleteDropdownButton",
  "AutocompleteListboxChildren",
  "autocompleteRightAddon",
  "Avatar",
  "avatar",
  "avatarImage",
  "backgroundColorVar",
  "Badge",
  "badge",
  "BELOW_CENTER_ANCHOR",
  "BELOW_INNER_LEFT_ANCHOR",
  "BELOW_INNER_RIGHT_ANCHOR",
  "BELOW_LEFT_ANCHOR",
  "BELOW_RIGHT_ANCHOR",
  "bem",
  "black",
  "blue50",
  "blue100",
  "blue200",
  "blue300",
  "blue400",
  "blue500",
  "blue600",
  "blue700",
  "blue800",
  "blue900",
  "blueAccent100",
  "blueAccent200",
  "blueAccent400",
  "blueAccent700",
  "blueGrey50",
  "blueGrey100",
  "blueGrey200",
  "blueGrey300",
  "blueGrey400",
  "blueGrey500",
  "blueGrey600",
  "blueGrey700",
  "blueGrey800",
  "blueGrey900",
  "BOTTOM_CENTER_ANCHOR",
  "BOTTOM_INNER_LEFT_ANCHOR",
  "BOTTOM_INNER_RIGHT_ANCHOR",
  "BOTTOM_LEFT_ANCHOR",
  "BOTTOM_RIGHT_ANCHOR",
  "Box",
  "box",
  "brown50",
  "brown100",
  "brown200",
  "brown300",
  "brown400",
  "brown500",
  "brown600",
  "brown700",
  "brown800",
  "brown900",
  "buildTree",
  "Button",
  "button",
  "ButtonUnstyled",
  "buttonUnstyled",
  "Card",
  "card",
  "CardContent",
  "cardContent",
  "CardFooter",
  "cardFooter",
  "CardHeader",
  "cardHeader",
  "cardHeaderContent",
  "CardSubtitle",
  "cardSubtitle",
  "CardTitle",
  "cardTitle",
  "caseInsensitiveSearch",
  "CENTER_CENTER_ANCHOR",
  "CENTER_INNER_LEFT_ANCHOR",
  "CENTER_INNER_RIGHT_ANCHOR",
  "CENTER_LEFT_ANCHOR",
  "CENTER_RIGHT_ANCHOR",
  "Checkbox",
  "Chip",
  "chip",
  "chipContent",
  "CircularProgress",
  "CircularProgressSuspense",
  "clearToasts",
  "ClickableCard",
  "Collapse",
  "collapse",
  "CollapsibleNavGroup",
  "ColorSchemeProvider",
  "configureIcons",
  "contrastColor",
  "CoreProviders",
  "createAnchoredAbove",
  "createAnchoredBelow",
  "createAnchoredBottom",
  "createAnchoredCenter",
  "createAnchoredInnerLeft",
  "createAnchoredInnerRight",
  "createAnchoredLeft",
  "createAnchoredRight",
  "createAnchoredTop",
  "createEqualWidth",
  "createFuzzyRegExp",
  "createHorizontalPosition",
  "createHoverModeContext",
  "createVerticalPosition",
  "CROSS_FADE_CLASSNAMES",
  "CROSS_FADE_TIMEOUT",
  "CrossFade",
  "CSSTransition",
  "cssUtils",
  "CurrentToastActionsProvider",
  "cyan50",
  "cyan100",
  "cyan200",
  "cyan300",
  "cyan400",
  "cyan500",
  "cyan600",
  "cyan700",
  "cyan800",
  "cyan900",
  "cyanAccent100",
  "cyanAccent200",
  "cyanAccent400",
  "cyanAccent700",
  "debounce",
  "deepOrange50",
  "deepOrange100",
  "deepOrange200",
  "deepOrange300",
  "deepOrange400",
  "deepOrange500",
  "deepOrange600",
  "deepOrange700",
  "deepOrange800",
  "deepOrange900",
  "deepOrangeAccent100",
  "deepOrangeAccent200",
  "deepOrangeAccent400",
  "deepOrangeAccent700",
  "deepPurple50",
  "deepPurple100",
  "deepPurple200",
  "deepPurple300",
  "deepPurple400",
  "deepPurple500",
  "deepPurple600",
  "deepPurple700",
  "deepPurple800",
  "deepPurple900",
  "deepPurpleAccent100",
  "deepPurpleAccent200",
  "deepPurpleAccent400",
  "deepPurpleAccent700",
  "DEFAULT_ACTIVE_HEADING_GET_ROOT_MARGIN",
  "DEFAULT_ACTIVE_HEADING_THRESHOLD",
  "DEFAULT_APP_SIZE",
  "DEFAULT_APP_SIZE_QUERIES",
  "DEFAULT_COLLAPSE_TIMEOUT",
  "DEFAULT_COLLATOR",
  "DEFAULT_COLLATOR_OPTIONS",
  "DEFAULT_DARK_THEME",
  "DEFAULT_DESKTOP_LARGE_MIN_WIDTH",
  "DEFAULT_DESKTOP_MIN_WIDTH",
  "DEFAULT_DIALOG_CLASSNAMES",
  "DEFAULT_DIALOG_TIMEOUT",
  "DEFAULT_GET_HEADING_DEPTH",
  "DEFAULT_GET_HEADING_TEXT",
  "DEFAULT_HEADING_SELECTOR",
  "DEFAULT_HORIZONTAL_LAYOUT_TRANSITION_CLASSNAMES",
  "DEFAULT_KEYBOARD_MOVEMENT",
  "DEFAULT_LIGHT_THEME",
  "DEFAULT_LTR_KEYBOARD_MOVEMENT",
  "DEFAULT_MENU_CONFIGURATION",
  "DEFAULT_OPTION_UNSELECTED_ICON",
  "DEFAULT_OVERLAY_CLASSNAMES",
  "DEFAULT_OVERLAY_TIMEOUT",
  "DEFAULT_PHONE_MAX_WIDTH",
  "DEFAULT_RIPPLE_CLASSNAMES",
  "DEFAULT_RIPPLE_TIMEOUT",
  "DEFAULT_RTL_KEYBOARD_MOVEMENT",
  "DEFAULT_SHEET_CLASSNAMES",
  "DEFAULT_SHEET_TIMEOUT",
  "DEFAULT_SLIDE_TRANSITION_CLASSNAMES",
  "DEFAULT_SLIDE_TRANSITION_TIMEOUT",
  "DEFAULT_TABLET_MAX_WIDTH",
  "DEFAULT_TABLET_MIN_WIDTH",
  "DEFAULT_THEME_COLORS",
  "DEFAULT_TOAST_VISIBLE_TIME",
  "DEFAULT_TOOLTIP_CLASSNAMES",
  "DEFAULT_TOOLTIP_DELAY",
  "DEFAULT_TOOLTIP_DENSE_SPACING",
  "DEFAULT_TOOLTIP_MARGIN",
  "DEFAULT_TOOLTIP_POSITION",
  "DEFAULT_TOOLTIP_SPACING",
  "DEFAULT_TOOLTIP_THRESHOLD",
  "DEFAULT_TOOLTIP_TIMEOUT",
  "DEFAULT_WRITING_DIRECTION",
  "defaultAutocompleteExtractor",
  "defaultAutocompleteFilter",
  "defaultAutocompleteGetOptionProps",
  "defaultExtractor",
  "defaultGetErrorIcon",
  "defaultGetErrorMessage",
  "defaultIsErrored",
  "defaultLocalStorageSerializer",
  "DefaultNavigationRenderer",
  "DefaultToastRenderer",
  "DefaultTreeItemRenderer",
  "delegateEvent",
  "deserializeDraggableValue",
  "Dialog",
  "dialog",
  "dialogContainer",
  "DialogContent",
  "dialogContent",
  "DialogFooter",
  "dialogFooter",
  "DialogHeader",
  "dialogHeader",
  "DialogTitle",
  "DISPLAY_NONE_CLASS",
  "Divider",
  "divider",
  "DropdownMenu",
  "enforceSelectedValue",
  "errorColorVar",
  "ExpansionList",
  "ExpansionPanel",
  "expansionPanel",
  "expansionPanelButton",
  "ExpansionPanelHeader",
  "expansionPanelHeading",
  "extractOptionsFromChildren",
  "fab",
  "Fieldset",
  "fieldset",
  "FileAccessError",
  "FileExtensionError",
  "FileInput",
  "fileInput",
  "FileSizeError",
  "findMatchIndex",
  "findMatchInRange",
  "findSizingContainer",
  "FixedDialog",
  "FloatingActionButton",
  "focusElementWithin",
  "FontIcon",
  "Form",
  "FORM_CONFIG",
  "FormMessage",
  "formMessage",
  "FormMessageContainer",
  "formMessageContainer",
  "FormMessageCounter",
  "formMessageCounter",
  "formMessageText",
  "fuzzySearch",
  "GenericFileError",
  "getAboveCoord",
  "getAnchor",
  "getBelowCoord",
  "getBottomCoord",
  "getCenterXCoord",
  "getCenterYCoord",
  "getChildTreeItems",
  "getClientPosition",
  "getClosestThumbEventHandlers",
  "getContrastRatio",
  "getDefaultAnchor",
  "getDefaultQuery",
  "getDefaultValue",
  "getDerivedTheme",
  "getDragPosition",
  "getElementRect",
  "getElementSizing",
  "getFileParser",
  "getFirstFocusableIndex",
  "getFixedPosition",
  "getFocusableElement",
  "getFocusableElements",
  "getFontVariationSettings",
  "getFormConfig",
  "getHrefFromParents",
  "getIcon",
  "getInnerLeftCoord",
  "getInnerRightCoord",
  "getItemFromStorage",
  "getJumpValue",
  "getLastFocusableIndex",
  "getLeftCoord",
  "getListItemHeight",
  "getLuminance",
  "getMiddleOfRange",
  "getNavigationGroupId",
  "getNextFocusableIndex",
  "getNonDisabledOptions",
  "getOrientationType",
  "getPartsFromPathname",
  "getPercentage",
  "getPosition",
  "getProgressA11y",
  "getRangeDefaultValue",
  "getRangeSteps",
  "getRecursiveItemKey",
  "getRecursiveNavItemKey",
  "getRelativeDragPosition",
  "getRGB",
  "getRightCoord",
  "getRippleStyle",
  "getScrollbarWidth",
  "getSearchText",
  "getSplitFileUploads",
  "getStorageSerializers",
  "getTableOfContentsHeadings",
  "getTabListScrollToOptions",
  "getTabPanelRoleOnly",
  "getTabRoleOnly",
  "getThumbOffsets",
  "getTopCoord",
  "getTransformOrigin",
  "getTransitionClassNames",
  "getTransitionTimeout",
  "getTreeItemsFrom",
  "getVirtualFocusDefaultIndex",
  "green50",
  "green100",
  "green200",
  "green300",
  "green400",
  "green500",
  "green600",
  "green700",
  "green800",
  "green900",
  "greenAccent100",
  "greenAccent200",
  "greenAccent400",
  "greenAccent700",
  "grey50",
  "grey100",
  "grey200",
  "grey300",
  "grey400",
  "grey500",
  "grey600",
  "grey700",
  "grey800",
  "grey900",
  "hexToRGB",
  "icon",
  "ICON_CONFIG",
  "IconRotator",
  "iconRotator",
  "identity",
  "indigo50",
  "indigo100",
  "indigo200",
  "indigo300",
  "indigo400",
  "indigo500",
  "indigo600",
  "indigo700",
  "indigo800",
  "indigo900",
  "indigoAccent100",
  "indigoAccent200",
  "indigoAccent400",
  "indigoAccent700",
  "InputToggle",
  "inputToggle",
  "InputToggleIcon",
  "INTERACTION_CONFIG",
  "isAudioFile",
  "isCaseInsensitiveMatch",
  "isChangeableHTMLElement",
  "isColorScheme",
  "isContrastCompliant",
  "isElementDisabled",
  "isElementVisible",
  "isFileAccessError",
  "isFileExtensionError",
  "isFileSizeError",
  "isFocusable",
  "isGenericFileError",
  "isImageFile",
  "isLightDarkColorScheme",
  "isMediaFile",
  "isMouseDragStartEvent",
  "isMultipleValues",
  "isNotFocusable",
  "isSearchableEvent",
  "isTableFooterStickyActive",
  "isTableHeaderStickyActive",
  "isTextFile",
  "isTooManyFilesError",
  "isTouchDragStartEvent",
  "isTypeEvent",
  "isValidFileName",
  "isVideoFile",
  "isWithinViewport",
  "KeyboardMovementProvider",
  "Label",
  "label",
  "LARGE_TEXT_CONTRAST_RATIO",
  "LayoutAppBar",
  "LayoutNav",
  "layoutNav",
  "LayoutWindowSplitter",
  "layoutWindowSplitter",
  "Legend",
  "lightBlue50",
  "lightBlue100",
  "lightBlue200",
  "lightBlue300",
  "lightBlue400",
  "lightBlue500",
  "lightBlue600",
  "lightBlue700",
  "lightBlue800",
  "lightBlue900",
  "lightBlueAccent100",
  "lightBlueAccent200",
  "lightBlueAccent400",
  "lightBlueAccent700",
  "lightGreen50",
  "lightGreen100",
  "lightGreen200",
  "lightGreen300",
  "lightGreen400",
  "lightGreen500",
  "lightGreen600",
  "lightGreen700",
  "lightGreen800",
  "lightGreen900",
  "lightGreenAccent100",
  "lightGreenAccent200",
  "lightGreenAccent400",
  "lightGreenAccent700",
  "lime50",
  "lime100",
  "lime200",
  "lime300",
  "lime400",
  "lime500",
  "lime600",
  "lime700",
  "lime800",
  "lime900",
  "limeAccent100",
  "limeAccent200",
  "limeAccent400",
  "limeAccent700",
  "LinearProgress",
  "Link",
  "link",
  "List",
  "list",
  "Listbox",
  "ListboxProvider",
  "ListItem",
  "listItem",
  "ListItemAddon",
  "listItemAddon",
  "ListItemChildren",
  "ListItemLink",
  "ListItemText",
  "listItemText",
  "ListSubheader",
  "listSubheader",
  "LocalStorageColorSchemeProvider",
  "loop",
  "Main",
  "main",
  "MATERIAL_CONFIG",
  "MaterialIcon",
  "MaterialSymbol",
  "maxWidthTransition",
  "Menu",
  "menu",
  "MenuBar",
  "MenuBarProvider",
  "MenuButton",
  "MenuConfigurationProvider",
  "MenuItem",
  "MenuItemButton",
  "MenuItemCheckbox",
  "MenuItemCircularProgress",
  "MenuItemFileInput",
  "MenuItemGroup",
  "MenuItemInputToggle",
  "menuItemInputToggle",
  "menuItemInputToggleBall",
  "menuItemInputToggleIcon",
  "menuItemInputToggleTrack",
  "MenuItemRadio",
  "MenuItemSeparator",
  "MenuItemSwitch",
  "MenuItemTextField",
  "MenuSheet",
  "MenuVisibilityProvider",
  "MenuWidget",
  "MenuWidgetKeyboardProvider",
  "NativeSelect",
  "nativeSelect",
  "nativeSelectContainer",
  "NavGroup",
  "navGroup",
  "Navigation",
  "NavItem",
  "navItem",
  "NavItemButton",
  "navItemContent",
  "NavItemLink",
  "navItemLink",
  "NavSubheader",
  "nearest",
  "NestedDialogProvider",
  "noopAutocompleteFilter",
  "NORMAL_TEXT_CONTRAST_RATIO",
  "NoSsr",
  "NullSuspense",
  "objectFit",
  "onErrorColorVar",
  "onPrimaryColorVar",
  "onSecondaryColorVar",
  "onSuccessColorVar",
  "onWarningColorVar",
  "OptGroup",
  "Option",
  "option",
  "orange50",
  "orange100",
  "orange200",
  "orange300",
  "orange400",
  "orange500",
  "orange600",
  "orange700",
  "orange800",
  "orange900",
  "orangeAccent100",
  "orangeAccent200",
  "orangeAccent400",
  "orangeAccent700",
  "Overlay",
  "overlay",
  "parseCssLengthUnit",
  "Password",
  "password",
  "passwordInput",
  "passwordInputToggle",
  "pink50",
  "pink100",
  "pink200",
  "pink300",
  "pink400",
  "pink500",
  "pink600",
  "pink700",
  "pink800",
  "pink900",
  "pinkAccent100",
  "pinkAccent200",
  "pinkAccent400",
  "pinkAccent700",
  "popToast",
  "Portal",
  "PORTAL_CONTAINER_ID",
  "PortalContainerProvider",
  "PRESSED_CLASS_NAME",
  "primaryColorVar",
  "PROGRAMMATICALLY_FOCUSABLE",
  "purple50",
  "purple100",
  "purple200",
  "purple300",
  "purple400",
  "purple500",
  "purple600",
  "purple700",
  "purple800",
  "purple900",
  "purpleAccent100",
  "purpleAccent200",
  "purpleAccent400",
  "purpleAccent700",
  "Radio",
  "randomInt",
  "randomSkeletonPlaceholder",
  "recalculateFocusIndex",
  "RECOMMENDED_NUMBER_STATE_KEYS",
  "RECOMMENDED_STATE_KEYS",
  "red50",
  "red100",
  "red200",
  "red300",
  "red400",
  "red500",
  "red600",
  "red700",
  "red800",
  "red900",
  "redAccent100",
  "redAccent200",
  "redAccent400",
  "redAccent700",
  "releaseRipple",
  "removeItemFromStorage",
  "removeToast",
  "RenderRecursively",
  "ResizeObserverManager",
  "resizeObserverManager",
  "ResizingTextAreaWrapper",
  "ResponsiveItem",
  "responsiveItem",
  "ResponsiveItemOverlay",
  "responsiveItemOverlay",
  "Ripple",
  "RippleContainer",
  "RootHtml",
  "SCALE_CLASSNAMES",
  "SCALE_TIMEOUT",
  "SCALE_Y_CLASSNAMES",
  "ScaleTransition",
  "SCROLLBAR_SIZE_VAR",
  "ScrollLock",
  "scrollTabIntoView",
  "search",
  "secondaryColorVar",
  "SegmentedButton",
  "segmentedButton",
  "SegmentedButtonContainer",
  "segmentedButtonContainer",
  "Select",
  "select",
  "SelectedOption",
  "setItemInStorage",
  "Sheet",
  "sheet",
  "SimpleTabPanel",
  "SimpleTabPanels",
  "SkeletonPlaceholder",
  "skeletonPlaceholder",
  "SkipToMainContent",
  "skipToMainContent",
  "Slide",
  "SlideContainer",
  "slideContainer",
  "Slider",
  "SliderContainer",
  "sliderContainer",
  "SliderMark",
  "sliderMark",
  "SliderMarkLabel",
  "sliderMarkLabel",
  "SliderThumb",
  "sliderThumb",
  "sliderThumbInput",
  "SliderTrack",
  "sliderTrack",
  "SliderValueMarks",
  "SliderValueTooltip",
  "sliderValueTooltip",
  "Snackbar",
  "snackbar",
  "SrOnly",
  "SsrProvider",
  "startRemoveToastTimeout",
  "StickyTableSection",
  "successColorVar",
  "SVGIcon",
  "Switch",
  "switchBall",
  "switchStyles",
  "SwitchTrack",
  "switchTrack",
  "Tab",
  "tab",
  "TAB_FOCUSABLE",
  "tabIndicator",
  "Table",
  "table",
  "TableBody",
  "TableCell",
  "tableCell",
  "TableCellContent",
  "TableCheckbox",
  "TableConfigProvider",
  "TableContainer",
  "tableContainer",
  "TableContainerProvider",
  "TableFooter",
  "tableFooter",
  "TableHeader",
  "tableHeader",
  "TableRadio",
  "TableRow",
  "tableRow",
  "TabList",
  "tabList",
  "TabListScrollButton",
  "tabListScrollButton",
  "tabListScrollButtonContainer",
  "teal50",
  "teal100",
  "teal200",
  "teal300",
  "teal400",
  "teal500",
  "teal600",
  "teal700",
  "teal800",
  "teal900",
  "tealAccent100",
  "tealAccent200",
  "tealAccent400",
  "tealAccent700",
  "TextArea",
  "textArea",
  "textAreaContainer",
  "TextContainer",
  "textContainer",
  "textDisabledColorVar",
  "TextField",
  "textField",
  "TextFieldAddon",
  "textFieldAddon",
  "TextFieldContainer",
  "textFieldContainer",
  "textHintColorVar",
  "TextIconSpacing",
  "textPrimaryColorVar",
  "textSecondaryColorVar",
  "ThemeProvider",
  "throttle",
  "Toast",
  "toast",
  "ToastActionButton",
  "ToastCloseButton",
  "ToastContent",
  "toastContent",
  "ToastManager",
  "toastManager",
  "ToastManagerProvider",
  "Tooltip",
  "tooltip",
  "TOOLTIP_SPACING_VAR",
  "TooltipHoverModeProvider",
  "TooltippedButton",
  "TooManyFilesError",
  "TOP_CENTER_ANCHOR",
  "TOP_INNER_LEFT_ANCHOR",
  "TOP_INNER_RIGHT_ANCHOR",
  "TOP_LEFT_ANCHOR",
  "TOP_RIGHT_ANCHOR",
  "toSearchQuery",
  "TRANSITION_CONFIG",
  "Tree",
  "tree",
  "TreeGroup",
  "treeGroup",
  "TreeItem",
  "treeItem",
  "treeItemContent",
  "TreeItemExpander",
  "treeItemMedia",
  "TreeProvider",
  "triggerManualChangeEvent",
  "tryToSubmitRelatedForm",
  "Typography",
  "typography",
  "updateDragPosition",
  "updateRipplesState",
  "useActiveHeadingId",
  "useAddToast",
  "useAppSize",
  "useAsyncFunction",
  "useAutocomplete",
  "useCarousel",
  "useCheckboxGroup",
  "useCollapseTransition",
  "useColorScheme",
  "useColorSchemeMetaTag",
  "useColorSchemeProvider",
  "useCombobox",
  "useContextMenu",
  "useCrossFadeTransition",
  "useCSSTransition",
  "useCSSVariables",
  "useCurrentToastActions",
  "useDebouncedFunction",
  "useDir",
  "useDraggable",
  "useDropzone",
  "useEditableCombobox",
  "useElementInteraction",
  "useElementSize",
  "useEnsuredId",
  "useEnsuredRef",
  "useEnsuredState",
  "useExpandableLayout",
  "useExpansionList",
  "useExpansionPanels",
  "useFileUpload",
  "useFixedPositioning",
  "useFocusContainer",
  "useFormReset",
  "useFuzzyMatch",
  "useHigherContrastChildren",
  "useHorizontalLayoutTransition",
  "useHoverMode",
  "useHoverModeProvider",
  "useHtmlClassName",
  "useIntersectionObserver",
  "useIsomorphicLayoutEffect",
  "useKeyboardMovementContext",
  "useKeyboardMovementProvider",
  "useLayoutAppBarHeight",
  "useLayoutTree",
  "useLayoutWindowSplitter",
  "useListboxContext",
  "useMainTabIndex",
  "useMaxTabPanelHeight",
  "useMaxWidthTransition",
  "useMediaQuery",
  "useMenuBarContext",
  "useMenuBarProvider",
  "useMenuConfiguration",
  "useMenuVisibility",
  "useMutationObserver",
  "useNavigationExpansion",
  "useNestedDialogContext",
  "useNumberField",
  "useOrientation",
  "usePageInactive",
  "usePortalContainer",
  "usePrefersDarkTheme",
  "useRadioGroup",
  "useRangeSlider",
  "useReadonlySet",
  "useRemoveToast",
  "useResizableLayout",
  "useResizeListener",
  "useResizeObserver",
  "useResizingTextArea",
  "UserInteractionModeProvider",
  "useScaleTransition",
  "useScrollLock",
  "useSelectCombobox",
  "useSkeletonPlaceholder",
  "useSlider",
  "useSliderDraggable",
  "useSlideTransition",
  "useSsr",
  "useStickyTableSection",
  "useStorage",
  "useTableConfig",
  "useTableContainer",
  "useTableOfContentsHeadings",
  "useTableSectionConfig",
  "useTabList",
  "useTabs",
  "useTemporaryLayout",
  "useTextField",
  "useTextFieldContainerAddons",
  "useTheme",
  "useThrottledFunction",
  "useToastManager",
  "useToastQueue",
  "useToggle",
  "useTooltip",
  "useTooltipHoverMode",
  "useTooltipPosition",
  "useTransition",
  "useTree",
  "useTreeContext",
  "useTreeExpansion",
  "useTreeItems",
  "useTreeMovement",
  "useTreeSelection",
  "useUnmounted",
  "useUserInteractionMode",
  "useWindowSize",
  "useWindowSplitter",
  "validateFiles",
  "wait",
  "warningColorVar",
  "white",
  "WindowSplitter",
  "windowSplitter",
  "withinRange",
  "WritingDirectionProvider",
  "yellow50",
  "yellow100",
  "yellow200",
  "yellow300",
  "yellow400",
  "yellow500",
  "yellow600",
  "yellow700",
  "yellow800",
  "yellow900",
  "yellowAccent100",
  "yellowAccent200",
  "yellowAccent400",
  "yellowAccent700",
]);
export const EXPORT_MAP: Record<string, string> = {
  AAA_CONTRAST_RATIO: "@react-md/core/theme/utils",
  ABOVE_CENTER_ANCHOR: "@react-md/core/positioning/constants",
  ABOVE_INNER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  ABOVE_INNER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  ABOVE_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  ABOVE_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  ActiveHeadingIdOptions: "@react-md/core/navigation/useActiveHeadingId",
  addToast: "@react-md/core/snackbar/ToastManager",
  alphaNumericSort: "@react-md/core/utils/alphaNumericSort",
  AlphaNumericSortOptions: "@react-md/core/utils/alphaNumericSort",
  amber50: "@react-md/core/theme/colors",
  amber100: "@react-md/core/theme/colors",
  amber200: "@react-md/core/theme/colors",
  amber300: "@react-md/core/theme/colors",
  amber400: "@react-md/core/theme/colors",
  amber500: "@react-md/core/theme/colors",
  amber600: "@react-md/core/theme/colors",
  amber700: "@react-md/core/theme/colors",
  amber800: "@react-md/core/theme/colors",
  amber900: "@react-md/core/theme/colors",
  amberAccent100: "@react-md/core/theme/colors",
  amberAccent200: "@react-md/core/theme/colors",
  amberAccent400: "@react-md/core/theme/colors",
  amberAccent700: "@react-md/core/theme/colors",
  AnyFunction: "@react-md/core/types",
  AppBar: "@react-md/core/app-bar/AppBar",
  appBar: "@react-md/core/app-bar/styles",
  AppBarClassNameOptions: "@react-md/core/app-bar/styles",
  AppBarHeight: "@react-md/core/app-bar/styles",
  AppBarPosition: "@react-md/core/app-bar/styles",
  AppBarProps: "@react-md/core/app-bar/AppBar",
  AppBarTheme: "@react-md/core/app-bar/styles",
  AppBarTitle: "@react-md/core/app-bar/AppBarTitle",
  appBarTitle: "@react-md/core/app-bar/styles",
  AppBarTitleClassNameOptions: "@react-md/core/app-bar/styles",
  AppBarTitleKeyline: "@react-md/core/app-bar/styles",
  AppBarTitleProps: "@react-md/core/app-bar/AppBarTitle",
  applyRef: "@react-md/core/utils/applyRef",
  AppSize: "@react-md/core/media-queries/appSize",
  AppSizeProvider: "@react-md/core/media-queries/AppSizeProvider",
  AppSizeProviderProps: "@react-md/core/media-queries/AppSizeProvider",
  AppSizeQueries: "@react-md/core/media-queries/appSize",
  AsyncButton: "@react-md/core/button/AsyncButton",
  AsyncButtonLoadingType: "@react-md/core/button/AsyncButton",
  AsyncButtonProps: "@react-md/core/button/AsyncButton",
  AsyncFunction: "@react-md/core/useAsyncFunction",
  AsyncFunctionHookImplementation: "@react-md/core/useAsyncFunction",
  AsyncFunctionHookOptions: "@react-md/core/useAsyncFunction",
  Autocomplete: "@react-md/core/autocomplete/Autocomplete",
  autocomplete: "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteAttributeValue: "@react-md/core/form/types",
  AutocompleteBaseProps: "@react-md/core/autocomplete/types",
  AutocompleteChip: "@react-md/core/autocomplete/AutocompleteChip",
  autocompleteChip: "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteChipClassNameOptions:
    "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteChipProps: "@react-md/core/autocomplete/types",
  AutocompleteCircularProgress:
    "@react-md/core/autocomplete/AutocompleteCircularProgress",
  AutocompleteCircularProgressProps: "@react-md/core/autocomplete/types",
  AutocompleteClassNameOptions:
    "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteClearButton:
    "@react-md/core/autocomplete/AutocompleteClearButton",
  autocompleteClearButton: "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteClearButtonClassNameOptions:
    "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteClearButtonProps: "@react-md/core/autocomplete/types",
  AutocompleteComboboxProps: "@react-md/core/autocomplete/types",
  AutocompleteControlledQuery: "@react-md/core/autocomplete/types",
  AutocompleteControlledValue: "@react-md/core/autocomplete/types",
  AutocompleteDropdownButton:
    "@react-md/core/autocomplete/AutocompleteDropdownButton",
  autocompleteDropdownButton: "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteDropdownButtonClassNameOptions:
    "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteDropdownButtonProps: "@react-md/core/autocomplete/types",
  AutocompleteEditableComboboxOptions: "@react-md/core/autocomplete/types",
  AutocompleteFilterAndListboxOptions: "@react-md/core/autocomplete/types",
  AutocompleteFilterFunction: "@react-md/core/autocomplete/types",
  AutocompleteFilteringOptions: "@react-md/core/autocomplete/types",
  AutocompleteFilterOptions: "@react-md/core/autocomplete/types",
  AutocompleteGetChipProps: "@react-md/core/autocomplete/types",
  AutocompleteGetOptionLabel: "@react-md/core/autocomplete/types",
  AutocompleteGetOptionProps: "@react-md/core/autocomplete/types",
  AutocompleteGetOptionPropsOptions: "@react-md/core/autocomplete/types",
  AutocompleteImplementation: "@react-md/core/autocomplete/types",
  AutocompleteLabeledOption: "@react-md/core/autocomplete/types",
  AutocompleteListboxChildren:
    "@react-md/core/autocomplete/AutocompleteListboxChildren",
  AutocompleteListboxChildrenProps:
    "@react-md/core/autocomplete/AutocompleteListboxChildren",
  AutocompleteListboxLabelProps: "@react-md/core/autocomplete/types",
  AutocompleteListboxProps: "@react-md/core/autocomplete/types",
  AutocompleteMultiSelectImplementation: "@react-md/core/autocomplete/types",
  AutocompleteMultiSelectOptions: "@react-md/core/autocomplete/types",
  AutocompleteMultiSelectProps: "@react-md/core/autocomplete/types",
  AutocompleteOption: "@react-md/core/autocomplete/types",
  AutocompleteOptionLabelExtractor: "@react-md/core/autocomplete/types",
  AutocompleteOptions: "@react-md/core/autocomplete/types",
  AutocompleteProps: "@react-md/core/autocomplete/types",
  AutocompleteQuery: "@react-md/core/autocomplete/types",
  AutocompleteQueryAndExtractorOptions: "@react-md/core/autocomplete/types",
  AutocompleteQueryAndExtractorProps: "@react-md/core/autocomplete/types",
  autocompleteRightAddon: "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteRightAddonClassNameOptions:
    "@react-md/core/autocomplete/autocompleteStyles",
  AutocompleteSingleSelectImplementation: "@react-md/core/autocomplete/types",
  AutocompleteSingleSelectOptions: "@react-md/core/autocomplete/types",
  AutocompleteSingleSelectProps: "@react-md/core/autocomplete/types",
  AutocompleteUncontrolledQuery: "@react-md/core/autocomplete/types",
  AutocompleteUncontrolledValue: "@react-md/core/autocomplete/types",
  AutocompleteUnknownQueryAndValueOptions: "@react-md/core/autocomplete/types",
  AutocompleteUpdateQueryOnSelect: "@react-md/core/autocomplete/types",
  AutocompleteValue: "@react-md/core/autocomplete/types",
  AutocompleteWithQueryImplementation: "@react-md/core/autocomplete/types",
  Avatar: "@react-md/core/avatar/Avatar",
  avatar: "@react-md/core/avatar/styles",
  AvatarClassNameOptions: "@react-md/core/avatar/styles",
  avatarImage: "@react-md/core/avatar/styles",
  AvatarImageClassNameOptions: "@react-md/core/avatar/styles",
  AvatarImgAttributes: "@react-md/core/avatar/Avatar",
  AvatarProps: "@react-md/core/avatar/Avatar",
  BackgroundColor: "@react-md/core/cssUtils",
  backgroundColorVar: "@react-md/core/theme/cssVars",
  Badge: "@react-md/core/badge/Badge",
  badge: "@react-md/core/badge/styles",
  BadgeClassNameOptions: "@react-md/core/badge/styles",
  BadgeProps: "@react-md/core/badge/Badge",
  BadgeTheme: "@react-md/core/badge/styles",
  BaseDialogProps: "@react-md/core/dialog/Dialog",
  BaseDraggableOptions: "@react-md/core/draggable/useDraggable",
  BaseDropdownMenuProps: "@react-md/core/menu/DropdownMenu",
  BaseFileUploadStats: "@react-md/core/files/utils",
  BaseFixedDialogProps: "@react-md/core/dialog/FixedDialog",
  BaseInputToggleProps: "@react-md/core/form/InputToggle",
  BaseIntersectionObserverHookOptions: "@react-md/core/useIntersectionObserver",
  BaseMenuButtonProps: "@react-md/core/menu/MenuButton",
  BaseMenuItemInputToggleProps: "@react-md/core/form/MenuItemInputToggle",
  BaseOptions: "@react-md/core/movement/findMatchIndex",
  BaseSearchOptions: "@react-md/core/searching/types",
  BaseSheetClassNameOptions: "@react-md/core/sheet/styles",
  BaseSheetProps: "@react-md/core/sheet/Sheet",
  BaseSliderProps: "@react-md/core/form/Slider",
  BaseTabListScrollButtonProps: "@react-md/core/tabs/TabListScrollButton",
  BaseTabProps: "@react-md/core/tabs/Tab",
  BaseWindowSplitterOptions: "@react-md/core/window-splitter/useWindowSplitter",
  BaseWindowSplitterProps: "@react-md/core/window-splitter/WindowSplitter",
  BELOW_CENTER_ANCHOR: "@react-md/core/positioning/constants",
  BELOW_INNER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  BELOW_INNER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  BELOW_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  BELOW_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  bem: "@react-md/core/utils/bem",
  BEMModifier: "@react-md/core/utils/bem",
  BEMResult: "@react-md/core/utils/bem",
  black: "@react-md/core/theme/colors",
  blue50: "@react-md/core/theme/colors",
  blue100: "@react-md/core/theme/colors",
  blue200: "@react-md/core/theme/colors",
  blue300: "@react-md/core/theme/colors",
  blue400: "@react-md/core/theme/colors",
  blue500: "@react-md/core/theme/colors",
  blue600: "@react-md/core/theme/colors",
  blue700: "@react-md/core/theme/colors",
  blue800: "@react-md/core/theme/colors",
  blue900: "@react-md/core/theme/colors",
  blueAccent100: "@react-md/core/theme/colors",
  blueAccent200: "@react-md/core/theme/colors",
  blueAccent400: "@react-md/core/theme/colors",
  blueAccent700: "@react-md/core/theme/colors",
  blueGrey50: "@react-md/core/theme/colors",
  blueGrey100: "@react-md/core/theme/colors",
  blueGrey200: "@react-md/core/theme/colors",
  blueGrey300: "@react-md/core/theme/colors",
  blueGrey400: "@react-md/core/theme/colors",
  blueGrey500: "@react-md/core/theme/colors",
  blueGrey600: "@react-md/core/theme/colors",
  blueGrey700: "@react-md/core/theme/colors",
  blueGrey800: "@react-md/core/theme/colors",
  blueGrey900: "@react-md/core/theme/colors",
  BOTTOM_CENTER_ANCHOR: "@react-md/core/positioning/constants",
  BOTTOM_INNER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  BOTTOM_INNER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  BOTTOM_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  BOTTOM_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  Box: "@react-md/core/box/Box",
  box: "@react-md/core/box/styles",
  BoxAlignItems: "@react-md/core/box/styles",
  BoxFlexDirection: "@react-md/core/box/styles",
  BoxJustifyContent: "@react-md/core/box/styles",
  BoxOptions: "@react-md/core/box/styles",
  BoxProps: "@react-md/core/box/Box",
  brown50: "@react-md/core/theme/colors",
  brown100: "@react-md/core/theme/colors",
  brown200: "@react-md/core/theme/colors",
  brown300: "@react-md/core/theme/colors",
  brown400: "@react-md/core/theme/colors",
  brown500: "@react-md/core/theme/colors",
  brown600: "@react-md/core/theme/colors",
  brown700: "@react-md/core/theme/colors",
  brown800: "@react-md/core/theme/colors",
  brown900: "@react-md/core/theme/colors",
  buildTree: "@react-md/core/tree/useTreeItems",
  BuildTreeOptions: "@react-md/core/tree/useTreeItems",
  Button: "@react-md/core/button/Button",
  button: "@react-md/core/button/styles",
  ButtonClassNameOptions: "@react-md/core/button/styles",
  ButtonClassNameThemeOptions: "@react-md/core/button/styles",
  ButtonProps: "@react-md/core/button/Button",
  ButtonTheme: "@react-md/core/button/styles",
  ButtonThemeType: "@react-md/core/button/styles",
  ButtonType: "@react-md/core/button/styles",
  ButtonUnstyled: "@react-md/core/button/ButtonUnstyled",
  buttonUnstyled: "@react-md/core/button/styles",
  ButtonUnstyledClassNameOptions: "@react-md/core/button/styles",
  ButtonUnstyledProps: "@react-md/core/button/ButtonUnstyled",
  CalculateFixedPositionOptions: "@react-md/core/positioning/types",
  CancelableFunction: "@react-md/core/types",
  Card: "@react-md/core/card/Card",
  card: "@react-md/core/card/styles",
  CardClassNameOptions: "@react-md/core/card/styles",
  CardContent: "@react-md/core/card/CardContent",
  cardContent: "@react-md/core/card/styles",
  CardContentClassNameOptions: "@react-md/core/card/styles",
  CardContentProps: "@react-md/core/card/CardContent",
  CardFooter: "@react-md/core/card/CardFooter",
  cardFooter: "@react-md/core/card/styles",
  CardFooterClassNameOptions: "@react-md/core/card/styles",
  CardFooterProps: "@react-md/core/card/CardFooter",
  CardHeader: "@react-md/core/card/CardHeader",
  cardHeader: "@react-md/core/card/styles",
  CardHeaderClassNameOptions: "@react-md/core/card/styles",
  cardHeaderContent: "@react-md/core/card/styles",
  CardHeaderContentClassNameOptions: "@react-md/core/card/styles",
  CardHeaderProps: "@react-md/core/card/CardHeader",
  CardProps: "@react-md/core/card/Card",
  CardSubtitle: "@react-md/core/card/CardSubtitle",
  cardSubtitle: "@react-md/core/card/styles",
  CardSubtitleClassNameOptions: "@react-md/core/card/styles",
  CardSubtitleProps: "@react-md/core/card/CardSubtitle",
  CardTitle: "@react-md/core/card/CardTitle",
  cardTitle: "@react-md/core/card/styles",
  CardTitleClassNameOptions: "@react-md/core/card/styles",
  CardTitleProps: "@react-md/core/card/CardTitle",
  CarouselImplementation: "@react-md/core/transition/useCarousel",
  CarouselOptions: "@react-md/core/transition/useCarousel",
  CarouselSlideState: "@react-md/core/transition/useCarousel",
  CarouselState: "@react-md/core/transition/useCarousel",
  CaseInsensitiveOptions: "@react-md/core/searching/caseInsensitive",
  caseInsensitiveSearch: "@react-md/core/searching/caseInsensitive",
  CaseInsensitiveStartsWithOptions: "@react-md/core/searching/caseInsensitive",
  CENTER_CENTER_ANCHOR: "@react-md/core/positioning/constants",
  CENTER_INNER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  CENTER_INNER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  CENTER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  CENTER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  ChangeableHTMLElement: "@react-md/core/form/utils",
  Checkbox: "@react-md/core/form/Checkbox",
  CheckboxGroupImplementation: "@react-md/core/form/useCheckboxGroup",
  CheckboxGroupOptions: "@react-md/core/form/useCheckboxGroup",
  CheckboxInputToggleProps: "@react-md/core/form/InputToggle",
  CheckboxProps: "@react-md/core/form/InputToggle",
  Chip: "@react-md/core/chip/Chip",
  chip: "@react-md/core/chip/styles",
  ChipClassNameOptions: "@react-md/core/chip/styles",
  chipContent: "@react-md/core/chip/styles",
  ChipContentClassNameOptions: "@react-md/core/chip/styles",
  ChipProps: "@react-md/core/chip/Chip",
  CircularProgress: "@react-md/core/progress/CircularProgress",
  CircularProgressProps: "@react-md/core/progress/CircularProgress",
  CircularProgressSuspense: "@react-md/core/suspense/CircularProgressSuspense",
  CircularProgressSuspenseProps:
    "@react-md/core/suspense/CircularProgressSuspense",
  ClassNameCloneableChild: "@react-md/core/types",
  clearToasts: "@react-md/core/snackbar/ToastManager",
  ClickableCard: "@react-md/core/card/ClickableCard",
  ClickableCardProps: "@react-md/core/card/ClickableCard",
  ClientPositionEvent: "@react-md/core/utils/getClientPosition",
  ClientPositionMouseEvent: "@react-md/core/utils/getClientPosition",
  ClientPositionOptions: "@react-md/core/utils/getClientPosition",
  ClientPositionTouchEvent: "@react-md/core/utils/getClientPosition",
  ClosestThumbEventHandlersOptions: "@react-md/core/form/sliderUtils",
  Collapse: "@react-md/core/transition/Collapse",
  collapse: "@react-md/core/transition/collapseStyles",
  CollapseClassNameOptions: "@react-md/core/transition/collapseStyles",
  CollapseConfigurationStyle: "@react-md/core/transition/useCollapseTransition",
  CollapseElementProps: "@react-md/core/transition/useCollapseTransition",
  CollapseProps: "@react-md/core/transition/Collapse",
  CollapseSizing: "@react-md/core/transition/utils",
  CollapseStyle: "@react-md/core/transition/useCollapseTransition",
  CollapseTransitionHookOptions:
    "@react-md/core/transition/useCollapseTransition",
  CollapseTransitionHookReturnValue:
    "@react-md/core/transition/useCollapseTransition",
  CollapsibleNavGroup: "@react-md/core/navigation/CollapsibleNavGroup",
  CollapsibleNavGroupProps: "@react-md/core/navigation/CollapsibleNavGroup",
  ColorScheme: "@react-md/core/theme/types",
  ColorSchemeContext: "@react-md/core/theme/types",
  ColorSchemeMetaTagOptions: "@react-md/core/theme/useColorSchemeMetaTag",
  ColorSchemeProvider: "@react-md/core/theme/useColorScheme",
  ColorSchemeProviderOptions: "@react-md/core/theme/useColorSchemeProvider",
  ColorSchemeState: "@react-md/core/theme/types",
  CombinedCheckboxGroupReturnValue: "@react-md/core/form/useCheckboxGroup",
  CombinedRadioGroupReturnValue: "@react-md/core/form/useRadioGroup",
  ComboboxGetEnterDefaultFocusedIndexOptions: "@react-md/core/form/useCombobox",
  ComboboxImplementation: "@react-md/core/form/useCombobox",
  ComboboxKeyboardMovementData: "@react-md/core/form/useCombobox",
  ComboboxKeyboardMovementOptions: "@react-md/core/form/useCombobox",
  ComboboxMenuProps: "@react-md/core/form/useCombobox",
  ComboboxOptions: "@react-md/core/form/useCombobox",
  ComboboxTransitionCallbacks: "@react-md/core/form/useCombobox",
  ComboboxTransitionOptions: "@react-md/core/form/useCombobox",
  ComboboxVisibilityOptions: "@react-md/core/form/useCombobox",
  ComboboxWidgetPopupProps: "@react-md/core/form/useCombobox",
  ComboboxWidgetProps: "@react-md/core/form/useCombobox",
  CompletedFileUploadStats: "@react-md/core/files/utils",
  ComponentWithRippleProps: "@react-md/core/interaction/types",
  ConfigurableAutocompleteClearButtonProps: "@react-md/core/autocomplete/types",
  ConfigurableAutocompleteDropdownButtonProps:
    "@react-md/core/autocomplete/types",
  ConfigurableAutocompleteListboxProps: "@react-md/core/autocomplete/types",
  ConfigurableAutocompleteOptionProps: "@react-md/core/autocomplete/types",
  ConfigurableComboboxMenuProps: "@react-md/core/form/useCombobox",
  ConfigurableComboboxOptions: "@react-md/core/form/useCombobox",
  ConfigurableIconName: "@react-md/core/icon/config",
  ConfigurableIcons: "@react-md/core/icon/config",
  ConfigurableTextFieldAddonProps: "@react-md/core/form/types",
  ConfigurableThemeColors: "@react-md/core/theme/ThemeProvider",
  ConfigurableThemeColorsName: "@react-md/core/theme/ThemeProvider",
  ConfigurableToastProps: "@react-md/core/snackbar/Toast",
  ConfigurableVisibilityIcon: "@react-md/core/form/Password",
  ConfiguredIcons: "@react-md/core/icon/config",
  configureIcons: "@react-md/core/icon/config",
  ContextMenuHookOptions: "@react-md/core/menu/useContextMenu",
  ContextMenuImplementation: "@react-md/core/menu/useContextMenu",
  ContextMenuProps: "@react-md/core/menu/useContextMenu",
  contrastColor: "@react-md/core/theme/utils",
  ContrastRatioCompliance: "@react-md/core/theme/utils",
  ControllableDraggableStateOptions: "@react-md/core/draggable/useDraggable",
  ControlledDraggingDraggableOptions: "@react-md/core/draggable/useDraggable",
  ControlledHoverModeImplementation: "@react-md/core/hoverMode/useHoverMode",
  ControlledHoverModeOptions: "@react-md/core/hoverMode/useHoverMode",
  ControlledValueDraggableOptions: "@react-md/core/draggable/useDraggable",
  Coords: "@react-md/core/positioning/types",
  CoreProviders: "@react-md/core/CoreProviders",
  CoreProvidersProps: "@react-md/core/CoreProviders",
  createAnchoredAbove: "@react-md/core/positioning/createVerticalPosition",
  createAnchoredBelow: "@react-md/core/positioning/createVerticalPosition",
  createAnchoredBottom: "@react-md/core/positioning/createVerticalPosition",
  createAnchoredCenter: "@react-md/core/positioning/createHorizontalPosition",
  createAnchoredInnerLeft:
    "@react-md/core/positioning/createHorizontalPosition",
  createAnchoredInnerRight:
    "@react-md/core/positioning/createHorizontalPosition",
  createAnchoredLeft: "@react-md/core/positioning/createHorizontalPosition",
  createAnchoredRight: "@react-md/core/positioning/createHorizontalPosition",
  createAnchoredTop: "@react-md/core/positioning/createVerticalPosition",
  createEqualWidth: "@react-md/core/positioning/createHorizontalPosition",
  createFuzzyRegExp: "@react-md/core/searching/fuzzy",
  createHorizontalPosition:
    "@react-md/core/positioning/createHorizontalPosition",
  CreateHorizontalPositionOptions:
    "@react-md/core/positioning/createHorizontalPosition",
  createHoverModeContext: "@react-md/core/hoverMode/useHoverModeProvider",
  CreateHoverModeContextOptions:
    "@react-md/core/hoverMode/useHoverModeProvider",
  CreateToastOptions: "@react-md/core/snackbar/ToastManager",
  createVerticalPosition: "@react-md/core/positioning/createVerticalPosition",
  CreateVerticalPositionOptions:
    "@react-md/core/positioning/createVerticalPosition",
  CROSS_FADE_CLASSNAMES: "@react-md/core/transition/useCrossFadeTransition",
  CROSS_FADE_TIMEOUT: "@react-md/core/transition/useCrossFadeTransition",
  CrossFade: "@react-md/core/transition/CrossFade",
  CrossFadeProps: "@react-md/core/transition/CrossFade",
  CrossFadeTransitionHookOptions:
    "@react-md/core/transition/useCrossFadeTransition",
  CssPosition: "@react-md/core/types",
  CSSTransition: "@react-md/core/transition/CSSTransition",
  CSSTransitionClassNames: "@react-md/core/transition/types",
  CSSTransitionClassNamesObject: "@react-md/core/transition/types",
  CSSTransitionComponentImplementation: "@react-md/core/transition/types",
  CSSTransitionComponentProps: "@react-md/core/transition/types",
  CSSTransitionElementProps: "@react-md/core/transition/types",
  CSSTransitionHookOptions: "@react-md/core/transition/types",
  CSSTransitionHookReturnValue: "@react-md/core/transition/types",
  CSSTransitionProps: "@react-md/core/transition/CSSTransition",
  cssUtils: "@react-md/core/cssUtils",
  CssUtilsOptions: "@react-md/core/cssUtils",
  CSSVariable: "@react-md/core/theme/types",
  CSSVariableName: "@react-md/core/theme/types",
  CSSVariablesProperties: "@react-md/core/theme/types",
  CurrentToastActions: "@react-md/core/snackbar/useCurrentToastActions",
  CurrentToastActionsProvider: "@react-md/core/snackbar/useCurrentToastActions",
  CustomAppBarComponent: "@react-md/core/app-bar/AppBar",
  CustomizableSliderMarkLabelProps: "@react-md/core/form/SliderMarkLabel",
  CustomLinkComponent: "@react-md/core/link/Link",
  CustomMainElement: "@react-md/core/layout/Main",
  CustomNavigationLinkComponent: "@react-md/core/navigation/types",
  CustomTypographyComponent: "@react-md/core/typography/Typography",
  cyan50: "@react-md/core/theme/colors",
  cyan100: "@react-md/core/theme/colors",
  cyan200: "@react-md/core/theme/colors",
  cyan300: "@react-md/core/theme/colors",
  cyan400: "@react-md/core/theme/colors",
  cyan500: "@react-md/core/theme/colors",
  cyan600: "@react-md/core/theme/colors",
  cyan700: "@react-md/core/theme/colors",
  cyan800: "@react-md/core/theme/colors",
  cyan900: "@react-md/core/theme/colors",
  cyanAccent100: "@react-md/core/theme/colors",
  cyanAccent200: "@react-md/core/theme/colors",
  cyanAccent400: "@react-md/core/theme/colors",
  cyanAccent700: "@react-md/core/theme/colors",
  debounce: "@react-md/core/utils/debounce",
  DebouncedFunction: "@react-md/core/types",
  deepOrange50: "@react-md/core/theme/colors",
  deepOrange100: "@react-md/core/theme/colors",
  deepOrange200: "@react-md/core/theme/colors",
  deepOrange300: "@react-md/core/theme/colors",
  deepOrange400: "@react-md/core/theme/colors",
  deepOrange500: "@react-md/core/theme/colors",
  deepOrange600: "@react-md/core/theme/colors",
  deepOrange700: "@react-md/core/theme/colors",
  deepOrange800: "@react-md/core/theme/colors",
  deepOrange900: "@react-md/core/theme/colors",
  deepOrangeAccent100: "@react-md/core/theme/colors",
  deepOrangeAccent200: "@react-md/core/theme/colors",
  deepOrangeAccent400: "@react-md/core/theme/colors",
  deepOrangeAccent700: "@react-md/core/theme/colors",
  deepPurple50: "@react-md/core/theme/colors",
  deepPurple100: "@react-md/core/theme/colors",
  deepPurple200: "@react-md/core/theme/colors",
  deepPurple300: "@react-md/core/theme/colors",
  deepPurple400: "@react-md/core/theme/colors",
  deepPurple500: "@react-md/core/theme/colors",
  deepPurple600: "@react-md/core/theme/colors",
  deepPurple700: "@react-md/core/theme/colors",
  deepPurple800: "@react-md/core/theme/colors",
  deepPurple900: "@react-md/core/theme/colors",
  deepPurpleAccent100: "@react-md/core/theme/colors",
  deepPurpleAccent200: "@react-md/core/theme/colors",
  deepPurpleAccent400: "@react-md/core/theme/colors",
  deepPurpleAccent700: "@react-md/core/theme/colors",
  DEFAULT_ACTIVE_HEADING_GET_ROOT_MARGIN:
    "@react-md/core/navigation/useActiveHeadingId",
  DEFAULT_ACTIVE_HEADING_THRESHOLD:
    "@react-md/core/navigation/useActiveHeadingId",
  DEFAULT_APP_SIZE: "@react-md/core/media-queries/appSize",
  DEFAULT_APP_SIZE_QUERIES: "@react-md/core/media-queries/appSize",
  DEFAULT_COLLAPSE_TIMEOUT: "@react-md/core/transition/useCollapseTransition",
  DEFAULT_COLLATOR: "@react-md/core/utils/alphaNumericSort",
  DEFAULT_COLLATOR_OPTIONS: "@react-md/core/utils/alphaNumericSort",
  DEFAULT_DARK_THEME: "@react-md/core/theme/ThemeProvider",
  DEFAULT_DESKTOP_LARGE_MIN_WIDTH: "@react-md/core/media-queries/appSize",
  DEFAULT_DESKTOP_MIN_WIDTH: "@react-md/core/media-queries/appSize",
  DEFAULT_DIALOG_CLASSNAMES: "@react-md/core/dialog/styles",
  DEFAULT_DIALOG_TIMEOUT: "@react-md/core/dialog/styles",
  DEFAULT_GET_HEADING_DEPTH:
    "@react-md/core/navigation/useTableOfContentsHeadings",
  DEFAULT_GET_HEADING_TEXT:
    "@react-md/core/navigation/useTableOfContentsHeadings",
  DEFAULT_HEADING_SELECTOR:
    "@react-md/core/navigation/useTableOfContentsHeadings",
  DEFAULT_HORIZONTAL_LAYOUT_TRANSITION_CLASSNAMES:
    "@react-md/core/layout/useHorizontalLayoutTransition",
  DEFAULT_KEYBOARD_MOVEMENT: "@react-md/core/movement/constants",
  DEFAULT_LIGHT_THEME: "@react-md/core/theme/ThemeProvider",
  DEFAULT_LTR_KEYBOARD_MOVEMENT: "@react-md/core/movement/constants",
  DEFAULT_MENU_CONFIGURATION: "@react-md/core/menu/MenuConfigurationProvider",
  DEFAULT_OPTION_UNSELECTED_ICON: "@react-md/core/form/Option",
  DEFAULT_OVERLAY_CLASSNAMES: "@react-md/core/overlay/overlayStyles",
  DEFAULT_OVERLAY_TIMEOUT: "@react-md/core/overlay/overlayStyles",
  DEFAULT_PHONE_MAX_WIDTH: "@react-md/core/media-queries/appSize",
  DEFAULT_RIPPLE_CLASSNAMES: "@react-md/core/interaction/Ripple",
  DEFAULT_RIPPLE_TIMEOUT: "@react-md/core/interaction/Ripple",
  DEFAULT_RTL_KEYBOARD_MOVEMENT: "@react-md/core/movement/constants",
  DEFAULT_SHEET_CLASSNAMES: "@react-md/core/sheet/styles",
  DEFAULT_SHEET_TIMEOUT: "@react-md/core/sheet/styles",
  DEFAULT_SLIDE_TRANSITION_CLASSNAMES:
    "@react-md/core/transition/useSlideTransition",
  DEFAULT_SLIDE_TRANSITION_TIMEOUT:
    "@react-md/core/transition/useSlideTransition",
  DEFAULT_TABLET_MAX_WIDTH: "@react-md/core/media-queries/appSize",
  DEFAULT_TABLET_MIN_WIDTH: "@react-md/core/media-queries/appSize",
  DEFAULT_THEME_COLORS: "@react-md/core/theme/ThemeProvider",
  DEFAULT_TOAST_VISIBLE_TIME: "@react-md/core/snackbar/ToastManager",
  DEFAULT_TOOLTIP_CLASSNAMES: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_DELAY: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_DENSE_SPACING: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_MARGIN: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_POSITION: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_SPACING: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_THRESHOLD: "@react-md/core/tooltip/constants",
  DEFAULT_TOOLTIP_TIMEOUT: "@react-md/core/tooltip/constants",
  DEFAULT_WRITING_DIRECTION:
    "@react-md/core/typography/WritingDirectionProvider",
  defaultAutocompleteExtractor: "@react-md/core/autocomplete/defaults",
  defaultAutocompleteFilter: "@react-md/core/autocomplete/defaults",
  defaultAutocompleteGetOptionProps: "@react-md/core/autocomplete/defaults",
  DefaultDir: "@react-md/core/typography/WritingDirectionProvider",
  defaultExtractor: "@react-md/core/searching/utils",
  defaultGetErrorIcon: "@react-md/core/form/validation",
  defaultGetErrorMessage: "@react-md/core/form/validation",
  defaultIsErrored: "@react-md/core/form/validation",
  defaultLocalStorageSerializer: "@react-md/core/storage/internalUtils",
  DefaultNavigationRenderer:
    "@react-md/core/navigation/DefaultNavigationRenderer",
  DefaultNavigationRendererProps:
    "@react-md/core/navigation/DefaultNavigationRenderer",
  DefaultToastRenderer: "@react-md/core/snackbar/DefaultToastRenderer",
  DefaultTreeItemNode: "@react-md/core/tree/types",
  DefaultTreeItemRenderer: "@react-md/core/tree/DefaultTreeItemRenderer",
  DefinedCSSVariableName: "@react-md/core/theme/types",
  DefinedCustomProperty: "@react-md/core/theme/types",
  DelegableEvent: "@react-md/core/delegateEvent",
  DelegatedEventHandler: "@react-md/core/delegateEvent",
  DelegatedEventTarget: "@react-md/core/delegateEvent",
  delegateEvent: "@react-md/core/delegateEvent",
  deserializeDraggableValue: "@react-md/core/draggable/utils",
  DeserializeDraggableValueOptions: "@react-md/core/draggable/utils",
  Dialog: "@react-md/core/dialog/Dialog",
  dialog: "@react-md/core/dialog/styles",
  DialogClassNameOptions: "@react-md/core/dialog/styles",
  dialogContainer: "@react-md/core/dialog/styles",
  DialogContainerClassNameOptions: "@react-md/core/dialog/styles",
  DialogContent: "@react-md/core/dialog/DialogContent",
  dialogContent: "@react-md/core/dialog/styles",
  DialogContentClassNameOptions: "@react-md/core/dialog/styles",
  DialogContentProps: "@react-md/core/dialog/DialogContent",
  DialogFooter: "@react-md/core/dialog/DialogFooter",
  dialogFooter: "@react-md/core/dialog/styles",
  DialogFooterAlignment: "@react-md/core/dialog/styles",
  DialogFooterClassNameOptions: "@react-md/core/dialog/styles",
  DialogFooterProps: "@react-md/core/dialog/DialogFooter",
  DialogHeader: "@react-md/core/dialog/DialogHeader",
  dialogHeader: "@react-md/core/dialog/styles",
  DialogHeaderClassNameOptions: "@react-md/core/dialog/styles",
  DialogHeaderProps: "@react-md/core/dialog/DialogHeader",
  DialogProps: "@react-md/core/dialog/Dialog",
  DialogTitle: "@react-md/core/dialog/DialogTitle",
  DialogTitleProps: "@react-md/core/dialog/DialogTitle",
  DialogType: "@react-md/core/dialog/styles",
  DialogWidth: "@react-md/core/dialog/styles",
  Dir: "@react-md/core/typography/WritingDirectionProvider",
  DISPLAY_NONE_CLASS: "@react-md/core/utils/isElementVisible",
  Divider: "@react-md/core/divider/Divider",
  divider: "@react-md/core/divider/styles",
  DividerClassNameOptions: "@react-md/core/divider/styles",
  DividerElement: "@react-md/core/divider/Divider",
  DividerProps: "@react-md/core/divider/Divider",
  DraggableEventHandlers: "@react-md/core/draggable/useDraggable",
  DraggableImplementation: "@react-md/core/draggable/useDraggable",
  DraggableKeyboardEventHandlers: "@react-md/core/draggable/useDraggable",
  DraggableMouseEventHandlers: "@react-md/core/draggable/useDraggable",
  DraggableOptions: "@react-md/core/draggable/useDraggable",
  DraggableStateOptions: "@react-md/core/draggable/useDraggable",
  DraggableTouchEventHandlers: "@react-md/core/draggable/useDraggable",
  DropdownMenu: "@react-md/core/menu/DropdownMenu",
  DropdownMenuButtonProps: "@react-md/core/menu/DropdownMenu",
  DropdownMenuItemButtonProps: "@react-md/core/menu/DropdownMenu",
  DropdownMenuProps: "@react-md/core/menu/DropdownMenu",
  DropdownMenuStateProps: "@react-md/core/menu/DropdownMenu",
  DropzoneHandlers: "@react-md/core/useDropzone",
  DropzoneImplementation: "@react-md/core/useDropzone",
  DropzoneOptions: "@react-md/core/useDropzone",
  EditableComboboxImplementation: "@react-md/core/form/useEditableCombobox",
  EditableComboboxOptions: "@react-md/core/form/useEditableCombobox",
  EditableComboboxWidgetProps: "@react-md/core/form/useEditableCombobox",
  EditableHTMLElement: "@react-md/core/form/utils",
  ElementFocusType: "@react-md/core/focus/utils",
  ElementInteractionConfiguration: "@react-md/core/interaction/config",
  ElementInteractionHandlers: "@react-md/core/interaction/types",
  ElementInteractionImplementation:
    "@react-md/core/interaction/useElementInteraction",
  ElementInteractionMode: "@react-md/core/interaction/types",
  ElementInteractionOptions: "@react-md/core/interaction/useElementInteraction",
  ElementInteractionState: "@react-md/core/interaction/types",
  ElementSize: "@react-md/core/types",
  ElementSizeImplementation: "@react-md/core/useElementSize",
  ElementSizeOptions: "@react-md/core/useElementSize",
  enforceSelectedValue: "@react-md/core/autocomplete/utils",
  EnforceSelectedValueOptions: "@react-md/core/autocomplete/utils",
  EnsuredRefs: "@react-md/core/useEnsuredRef",
  EnsuredStateOptions: "@react-md/core/useEnsuredState",
  EqualWidthOptions: "@react-md/core/positioning/createHorizontalPosition",
  ErrorChangeHandler: "@react-md/core/form/useTextField",
  ErrorChangeHandlerOptions: "@react-md/core/form/useTextField",
  errorColorVar: "@react-md/core/theme/cssVars",
  ErrorMessageOptions: "@react-md/core/form/validation",
  ExpandableLayoutImplementation: "@react-md/core/layout/useExpandableLayout",
  ExpandableLayoutOptions: "@react-md/core/layout/useExpandableLayout",
  ExpansionList: "@react-md/core/expansion-panel/ExpansionList",
  ExpansionListHookOptions: "@react-md/core/expansion-panel/useExpansionList",
  ExpansionListImplementation:
    "@react-md/core/expansion-panel/useExpansionList",
  ExpansionListProps: "@react-md/core/expansion-panel/ExpansionList",
  ExpansionPanel: "@react-md/core/expansion-panel/ExpansionPanel",
  expansionPanel: "@react-md/core/expansion-panel/expansionPanelStyles",
  expansionPanelButton: "@react-md/core/expansion-panel/expansionPanelStyles",
  ExpansionPanelButtonClassNameOptions:
    "@react-md/core/expansion-panel/expansionPanelStyles",
  ExpansionPanelClassNameOptions:
    "@react-md/core/expansion-panel/expansionPanelStyles",
  ExpansionPanelHeader: "@react-md/core/expansion-panel/ExpansionPanelHeader",
  ExpansionPanelHeaderProps:
    "@react-md/core/expansion-panel/ExpansionPanelHeader",
  expansionPanelHeading: "@react-md/core/expansion-panel/expansionPanelStyles",
  ExpansionPanelHeadingClassNameOptions:
    "@react-md/core/expansion-panel/expansionPanelStyles",
  ExpansionPanelHookOptions:
    "@react-md/core/expansion-panel/useExpansionPanels",
  ExpansionPanelImplementation:
    "@react-md/core/expansion-panel/useExpansionPanels",
  ExpansionPanelProps: "@react-md/core/expansion-panel/ExpansionPanel",
  ExtendComboboxKeyDown: "@react-md/core/form/useCombobox",
  ExtendKeyDown: "@react-md/core/movement/types",
  extractOptionsFromChildren: "@react-md/core/form/selectUtils",
  fab: "@react-md/core/button/FloatingActionButton",
  Fieldset: "@react-md/core/form/Fieldset",
  fieldset: "@react-md/core/form/fieldsetStyles",
  FieldsetClassNameOptions: "@react-md/core/form/fieldsetStyles",
  FieldsetProps: "@react-md/core/form/Fieldset",
  FileAccessError: "@react-md/core/files/validation",
  FileExtensionError: "@react-md/core/files/validation",
  FileInput: "@react-md/core/files/FileInput",
  fileInput: "@react-md/core/files/styles",
  FileInputClassNameOptions: "@react-md/core/files/styles",
  FileInputHTMLAttributes: "@react-md/core/files/FileInput",
  FileInputProps: "@react-md/core/files/FileInput",
  FileReaderParser: "@react-md/core/files/utils",
  FileReaderResult: "@react-md/core/files/utils",
  FileSizeError: "@react-md/core/files/validation",
  FilesValidationOptions: "@react-md/core/files/validation",
  FilesValidator: "@react-md/core/files/validation",
  FileUploadActions: "@react-md/core/files/useFileUpload",
  FileUploadHandlers: "@react-md/core/files/utils",
  FileUploadHookReturnValue: "@react-md/core/files/useFileUpload",
  FileUploadHookState: "@react-md/core/files/useFileUpload",
  FileUploadOptions: "@react-md/core/files/useFileUpload",
  FileUploadState: "@react-md/core/files/useFileUpload",
  FileUploadStats: "@react-md/core/files/utils",
  FileUploadStatus: "@react-md/core/files/utils",
  FileValidationError: "@react-md/core/files/validation",
  FileValidationOptions: "@react-md/core/files/validation",
  findMatchIndex: "@react-md/core/movement/findMatchIndex",
  findMatchInRange: "@react-md/core/movement/findMatchIndex",
  findSizingContainer: "@react-md/core/positioning/utils",
  FixConfig: "@react-md/core/positioning/createHorizontalPosition",
  FixedDialog: "@react-md/core/dialog/FixedDialog",
  FixedDialogProps: "@react-md/core/dialog/FixedDialog",
  FixedPosition: "@react-md/core/positioning/types",
  FixedPositioningImplementation:
    "@react-md/core/positioning/useFixedPositioning",
  FixedPositioningOptions: "@react-md/core/positioning/useFixedPositioning",
  FixedPositioningScrollData: "@react-md/core/positioning/useFixedPositioning",
  FixedPositioningTransitionCallbacks:
    "@react-md/core/positioning/useFixedPositioning",
  FixedPositioningTransitionOptions:
    "@react-md/core/positioning/useFixedPositioning",
  FixedPositionOptions: "@react-md/core/positioning/types",
  FixedPositionStyle: "@react-md/core/positioning/types",
  FloatingActionButton: "@react-md/core/button/FloatingActionButton",
  FloatingActionButtonClassNameOptions:
    "@react-md/core/button/FloatingActionButton",
  FloatingActionButtonPosition: "@react-md/core/button/FloatingActionButton",
  FloatingActionButtonProps: "@react-md/core/button/FloatingActionButton",
  FocusableIndexOptions: "@react-md/core/movement/types",
  FocusContainerComponentProps: "@react-md/core/focus/useFocusContainer",
  FocusContainerEventHandlers: "@react-md/core/focus/useFocusContainer",
  FocusContainerImplementation: "@react-md/core/focus/useFocusContainer",
  FocusContainerOptions: "@react-md/core/focus/useFocusContainer",
  FocusContainerTransitionCallbacks: "@react-md/core/focus/useFocusContainer",
  FocusContainerTransitionOptions: "@react-md/core/focus/useFocusContainer",
  focusElementWithin: "@react-md/core/focus/utils",
  FocusElementWithinOptions: "@react-md/core/focus/utils",
  FocusElementWithinType: "@react-md/core/focus/utils",
  FocusType: "@react-md/core/focus/useFocusContainer",
  FontIcon: "@react-md/core/icon/FontIcon",
  FontIconClassNameOptions: "@react-md/core/icon/styles",
  FontIconProps: "@react-md/core/icon/FontIcon",
  FontStyle: "@react-md/core/cssUtils",
  FontWeight: "@react-md/core/cssUtils",
  Form: "@react-md/core/form/Form",
  FORM_CONFIG: "@react-md/core/form/formConfig",
  FormComponentStates: "@react-md/core/form/types",
  FormConfiguration: "@react-md/core/form/types",
  FormFieldOptions: "@react-md/core/form/types",
  FormMessage: "@react-md/core/form/FormMessage",
  formMessage: "@react-md/core/form/formMessageStyles",
  FormMessageClassNameOptions: "@react-md/core/form/types",
  FormMessageContainer: "@react-md/core/form/FormMessageContainer",
  formMessageContainer: "@react-md/core/form/formMessageContainerStyles",
  FormMessageContainerClassNameOptions:
    "@react-md/core/form/formMessageContainerStyles",
  FormMessageContainerExtension: "@react-md/core/form/types",
  FormMessageContainerProps: "@react-md/core/form/FormMessageContainer",
  FormMessageCounter: "@react-md/core/form/FormMessageCounter",
  formMessageCounter: "@react-md/core/form/formMessageStyles",
  FormMessageCounterClassNameOptions: "@react-md/core/form/formMessageStyles",
  FormMessageCounterProps: "@react-md/core/form/FormMessageCounter",
  FormMessageInputLengthCounterProps: "@react-md/core/form/types",
  FormMessageProps: "@react-md/core/form/types",
  formMessageText: "@react-md/core/form/formMessageStyles",
  FormMessageTextClassNameOptions: "@react-md/core/form/formMessageStyles",
  FormMessageWithCounterProps: "@react-md/core/form/types",
  FormMessageWithoutCounterProps: "@react-md/core/form/types",
  FormProps: "@react-md/core/form/Form",
  FormResetOptions: "@react-md/core/form/useFormReset",
  FormTheme: "@react-md/core/form/types",
  FormThemeOptions: "@react-md/core/form/types",
  FormUnderlineDirection: "@react-md/core/form/types",
  FullyControlledDraggableOptions: "@react-md/core/draggable/useDraggable",
  FuzzyMatch: "@react-md/core/searching/useFuzzyMatch",
  FuzzyMatchOptions: "@react-md/core/searching/useFuzzyMatch",
  fuzzySearch: "@react-md/core/searching/fuzzy",
  FuzzySearchOptions: "@react-md/core/searching/fuzzy",
  GenericFileError: "@react-md/core/files/validation",
  getAboveCoord: "@react-md/core/positioning/utils",
  getAnchor: "@react-md/core/tooltip/utils",
  getBelowCoord: "@react-md/core/positioning/utils",
  getBottomCoord: "@react-md/core/positioning/utils",
  getCenterXCoord: "@react-md/core/positioning/utils",
  getCenterYCoord: "@react-md/core/positioning/utils",
  getChildTreeItems: "@react-md/core/tree/utils",
  getClientPosition: "@react-md/core/utils/getClientPosition",
  getClosestThumbEventHandlers: "@react-md/core/form/sliderUtils",
  getContrastRatio: "@react-md/core/theme/utils",
  getDefaultAnchor: "@react-md/core/menu/utils",
  GetDefaultFocusedIndex: "@react-md/core/movement/types",
  getDefaultQuery: "@react-md/core/autocomplete/utils",
  getDefaultValue: "@react-md/core/autocomplete/utils",
  GetDefaultValueOptions: "@react-md/core/autocomplete/utils",
  getDerivedTheme: "@react-md/core/theme/ThemeProvider",
  getDragPosition: "@react-md/core/draggable/utils",
  getElementRect: "@react-md/core/positioning/utils",
  getElementSizing: "@react-md/core/transition/utils",
  GetErrorIcon: "@react-md/core/form/validation",
  GetErrorIconOptions: "@react-md/core/form/validation",
  GetErrorMessage: "@react-md/core/form/validation",
  GetExpansionPanelProps: "@react-md/core/expansion-panel/useExpansionPanels",
  GetFileParser: "@react-md/core/files/utils",
  getFileParser: "@react-md/core/files/utils",
  getFirstFocusableIndex: "@react-md/core/movement/utils",
  getFixedPosition: "@react-md/core/positioning/getFixedPosition",
  getFocusableElement: "@react-md/core/focus/utils",
  GetFocusableElements: "@react-md/core/movement/types",
  getFocusableElements: "@react-md/core/focus/utils",
  getFontVariationSettings: "@react-md/core/icon/materialConfig",
  getFormConfig: "@react-md/core/form/formConfig",
  getHrefFromParents: "@react-md/core/navigation/utils",
  getIcon: "@react-md/core/icon/config",
  getInnerLeftCoord: "@react-md/core/positioning/utils",
  getInnerRightCoord: "@react-md/core/positioning/utils",
  getItemFromStorage: "@react-md/core/storage/utils",
  GetItemFromStorageOptions: "@react-md/core/storage/utils",
  getJumpValue: "@react-md/core/form/sliderUtils",
  getLastFocusableIndex: "@react-md/core/movement/utils",
  getLeftCoord: "@react-md/core/positioning/utils",
  getListItemHeight: "@react-md/core/list/getListItemHeight",
  getLuminance: "@react-md/core/theme/utils",
  GetMenuItemRadioGroupProps: "@react-md/core/form/useRadioGroup",
  getMiddleOfRange: "@react-md/core/utils/getMiddleOfRange",
  GetMiddleOfRangeOptions: "@react-md/core/utils/getMiddleOfRange",
  getNavigationGroupId: "@react-md/core/navigation/utils",
  getNextFocusableIndex: "@react-md/core/movement/utils",
  getNonDisabledOptions: "@react-md/core/form/useCombobox",
  getOrientationType: "@react-md/core/useOrientation",
  getPartsFromPathname: "@react-md/core/navigation/utils",
  GetPasswordVisibilityIcon: "@react-md/core/form/Password",
  getPercentage: "@react-md/core/utils/getPercentage",
  GetPercentageOptions: "@react-md/core/utils/getPercentage",
  getPosition: "@react-md/core/tooltip/utils",
  GetPositionOptions: "@react-md/core/tooltip/utils",
  getProgressA11y: "@react-md/core/progress/getProgressA11y",
  GetRadioGroupProps: "@react-md/core/form/useRadioGroup",
  getRangeDefaultValue: "@react-md/core/utils/getRangeDefaultValue",
  getRangeSteps: "@react-md/core/utils/getRangeSteps",
  getRecursiveItemKey: "@react-md/core/utils/RenderRecursively",
  getRecursiveNavItemKey: "@react-md/core/navigation/Navigation",
  getRelativeDragPosition: "@react-md/core/draggable/utils",
  getRGB: "@react-md/core/theme/utils",
  getRightCoord: "@react-md/core/positioning/utils",
  getRippleStyle: "@react-md/core/interaction/utils",
  getScrollbarWidth: "@react-md/core/scroll/getScrollbarWidth",
  getSearchText: "@react-md/core/movement/utils",
  getSplitFileUploads: "@react-md/core/files/utils",
  GetStorageSerializers: "@react-md/core/storage/internalUtils",
  getStorageSerializers: "@react-md/core/storage/internalUtils",
  getTableOfContentsHeadings:
    "@react-md/core/navigation/getTableOfContentsHeadings",
  GetTableOfContentsHeadingsOptions:
    "@react-md/core/navigation/getTableOfContentsHeadings",
  GetTabListScrollToOptions: "@react-md/core/tabs/getTabListScrollToOptions",
  getTabListScrollToOptions: "@react-md/core/tabs/getTabListScrollToOptions",
  getTabPanelRoleOnly: "@react-md/core/tabs/utils",
  getTabRoleOnly: "@react-md/core/tabs/utils",
  getThumbOffsets: "@react-md/core/form/sliderUtils",
  getTopCoord: "@react-md/core/positioning/utils",
  getTransformOrigin: "@react-md/core/positioning/utils",
  getTransitionClassNames: "@react-md/core/transition/utils",
  getTransitionTimeout: "@react-md/core/transition/utils",
  getTreeItemsFrom: "@react-md/core/tree/utils",
  getVirtualFocusDefaultIndex: "@react-md/core/movement/utils",
  green50: "@react-md/core/theme/colors",
  green100: "@react-md/core/theme/colors",
  green200: "@react-md/core/theme/colors",
  green300: "@react-md/core/theme/colors",
  green400: "@react-md/core/theme/colors",
  green500: "@react-md/core/theme/colors",
  green600: "@react-md/core/theme/colors",
  green700: "@react-md/core/theme/colors",
  green800: "@react-md/core/theme/colors",
  green900: "@react-md/core/theme/colors",
  greenAccent100: "@react-md/core/theme/colors",
  greenAccent200: "@react-md/core/theme/colors",
  greenAccent400: "@react-md/core/theme/colors",
  greenAccent700: "@react-md/core/theme/colors",
  grey50: "@react-md/core/theme/colors",
  grey100: "@react-md/core/theme/colors",
  grey200: "@react-md/core/theme/colors",
  grey300: "@react-md/core/theme/colors",
  grey400: "@react-md/core/theme/colors",
  grey500: "@react-md/core/theme/colors",
  grey600: "@react-md/core/theme/colors",
  grey700: "@react-md/core/theme/colors",
  grey800: "@react-md/core/theme/colors",
  grey900: "@react-md/core/theme/colors",
  HandleAsyncFunction: "@react-md/core/useAsyncFunction",
  HeadingReference: "@react-md/core/navigation/types",
  HeadingReferenceWithChildren: "@react-md/core/navigation/types",
  hexToRGB: "@react-md/core/theme/utils",
  HorizontalLayoutTransitionOptions:
    "@react-md/core/layout/useHorizontalLayoutTransition",
  HorizontalPosition: "@react-md/core/positioning/types",
  HoverModeConfiguration: "@react-md/core/hoverMode/useHoverModeProvider",
  HoverModeConfigurationOptions: "@react-md/core/hoverMode/useHoverMode",
  HoverModeContext: "@react-md/core/hoverMode/useHoverModeProvider",
  HoverModeImplementation: "@react-md/core/hoverMode/useHoverMode",
  HtmlTagName: "@react-md/core/types",
  icon: "@react-md/core/icon/styles",
  ICON_CONFIG: "@react-md/core/icon/config",
  IconClassNameOptions: "@react-md/core/icon/styles",
  IconRotator: "@react-md/core/icon/IconRotator",
  iconRotator: "@react-md/core/icon/styles",
  IconRotatorBaseProps: "@react-md/core/icon/IconRotator",
  IconRotatorClassNameOptions: "@react-md/core/icon/styles",
  IconRotatorProps: "@react-md/core/icon/IconRotator",
  identity: "@react-md/core/utils/identity",
  IndeterminateCheckboxGroupImplementation:
    "@react-md/core/form/useCheckboxGroup",
  IndeterminateCheckboxProps: "@react-md/core/form/InputToggle",
  IndeterminateMenuItemCheckboxGroupImplementation:
    "@react-md/core/form/useCheckboxGroup",
  IndicatorCSSProperties: "@react-md/core/tabs/useTabList",
  indigo50: "@react-md/core/theme/colors",
  indigo100: "@react-md/core/theme/colors",
  indigo200: "@react-md/core/theme/colors",
  indigo300: "@react-md/core/theme/colors",
  indigo400: "@react-md/core/theme/colors",
  indigo500: "@react-md/core/theme/colors",
  indigo600: "@react-md/core/theme/colors",
  indigo700: "@react-md/core/theme/colors",
  indigo800: "@react-md/core/theme/colors",
  indigo900: "@react-md/core/theme/colors",
  indigoAccent100: "@react-md/core/theme/colors",
  indigoAccent200: "@react-md/core/theme/colors",
  indigoAccent400: "@react-md/core/theme/colors",
  indigoAccent700: "@react-md/core/theme/colors",
  InitialCoords: "@react-md/core/positioning/types",
  InputToggle: "@react-md/core/form/InputToggle",
  inputToggle: "@react-md/core/form/inputToggleStyles",
  InputToggleClassNameOptions: "@react-md/core/form/inputToggleStyles",
  InputToggleIcon: "@react-md/core/form/InputToggleIcon",
  InputToggleIconProps: "@react-md/core/form/InputToggle",
  InputToggleLabelProps: "@react-md/core/form/InputToggle",
  InputToggleProps: "@react-md/core/form/InputToggle",
  InputToggleSize: "@react-md/core/form/inputToggleStyles",
  INTERACTION_CONFIG: "@react-md/core/interaction/config",
  InternalListItemClassNameOptions: "@react-md/core/list/listItemStyles",
  IntersectionObserverHookOptions: "@react-md/core/useIntersectionObserver",
  IntersectionObserverRoot: "@react-md/core/useIntersectionObserver",
  IntersectionObserverRootMargin: "@react-md/core/useIntersectionObserver",
  IntersectionObserverThreshold: "@react-md/core/useIntersectionObserver",
  isAudioFile: "@react-md/core/files/utils",
  isCaseInsensitiveMatch: "@react-md/core/searching/caseInsensitive",
  IsCaseInsensitiveMatchOptions: "@react-md/core/searching/caseInsensitive",
  isChangeableHTMLElement: "@react-md/core/form/utils",
  isColorScheme: "@react-md/core/theme/isColorScheme",
  isContrastCompliant: "@react-md/core/theme/utils",
  isElementDisabled: "@react-md/core/movement/utils",
  isElementVisible: "@react-md/core/utils/isElementVisible",
  IsErrored: "@react-md/core/form/validation",
  IsErroredOptions: "@react-md/core/form/validation",
  isFileAccessError: "@react-md/core/files/validation",
  isFileExtensionError: "@react-md/core/files/validation",
  isFileSizeError: "@react-md/core/files/validation",
  isFocusable: "@react-md/core/focus/utils",
  IsFocusTypeDisabled: "@react-md/core/focus/useFocusContainer",
  isGenericFileError: "@react-md/core/files/validation",
  isImageFile: "@react-md/core/files/utils",
  isLightDarkColorScheme: "@react-md/core/theme/isColorScheme",
  isMediaFile: "@react-md/core/files/utils",
  isMouseDragStartEvent: "@react-md/core/draggable/utils",
  isMultipleValues: "@react-md/core/autocomplete/utils",
  isNotFocusable: "@react-md/core/movement/utils",
  isSearchableEvent: "@react-md/core/movement/utils",
  IsStickyTableSectionActive: "@react-md/core/table/types",
  isTableFooterStickyActive: "@react-md/core/table/useStickyTableSection",
  isTableHeaderStickyActive: "@react-md/core/table/useStickyTableSection",
  isTextFile: "@react-md/core/files/utils",
  isTooManyFilesError: "@react-md/core/files/validation",
  isTouchDragStartEvent: "@react-md/core/draggable/utils",
  isTypeEvent: "@react-md/core/movement/utils",
  IsValidFileName: "@react-md/core/files/validation",
  isValidFileName: "@react-md/core/files/validation",
  isVideoFile: "@react-md/core/files/utils",
  isWithinViewport: "@react-md/core/positioning/utils",
  KeyboardMovementBehavior: "@react-md/core/movement/types",
  KeyboardMovementConfig: "@react-md/core/movement/types",
  KeyboardMovementConfiguration: "@react-md/core/movement/types",
  KeyboardMovementContext: "@react-md/core/movement/types",
  KeyboardMovementExtensionData: "@react-md/core/movement/types",
  KeyboardMovementFocusChangeEvent: "@react-md/core/movement/types",
  KeyboardMovementFocusChangeEventHandler: "@react-md/core/movement/types",
  KeyboardMovementProps: "@react-md/core/movement/types",
  KeyboardMovementProvider:
    "@react-md/core/movement/useKeyboardMovementProvider",
  KeyboardMovementProviderImplementation: "@react-md/core/movement/types",
  KeyboardMovementProviderOptions: "@react-md/core/movement/types",
  Label: "@react-md/core/form/Label",
  label: "@react-md/core/form/labelStyles",
  LabelA11y: "@react-md/core/types",
  LabelClassNameOptions: "@react-md/core/form/types",
  LabelProps: "@react-md/core/form/types",
  LabelRequiredForA11y: "@react-md/core/types",
  LARGE_TEXT_CONTRAST_RATIO: "@react-md/core/theme/utils",
  LayoutAppBar: "@react-md/core/layout/LayoutAppBar",
  LayoutAppBarHeightResult: "@react-md/core/layout/useLayoutAppBarHeight",
  LayoutAppBarProps: "@react-md/core/layout/LayoutAppBar",
  LayoutNav: "@react-md/core/layout/LayoutNav",
  layoutNav: "@react-md/core/layout/layoutNavStyles",
  LayoutNavClassNameOptions: "@react-md/core/layout/layoutNavStyles",
  LayoutNavProps: "@react-md/core/layout/LayoutNav",
  LayoutTreeImplementation: "@react-md/core/layout/useLayoutTree",
  LayoutTreeOptions: "@react-md/core/layout/useLayoutTree",
  LayoutWindowSplitter: "@react-md/core/layout/LayoutWindowSplitter",
  layoutWindowSplitter: "@react-md/core/layout/layoutWindowSplitterStyles",
  LayoutWindowSplitterClassNameOptions:
    "@react-md/core/layout/layoutWindowSplitterStyles",
  LayoutWindowSplitterImplementation:
    "@react-md/core/layout/useLayoutWindowSplitter",
  LayoutWindowSplitterOptions: "@react-md/core/layout/useLayoutWindowSplitter",
  LayoutWindowSplitterProps: "@react-md/core/layout/LayoutWindowSplitter",
  Legend: "@react-md/core/form/Legend",
  LegendProps: "@react-md/core/form/Legend",
  lightBlue50: "@react-md/core/theme/colors",
  lightBlue100: "@react-md/core/theme/colors",
  lightBlue200: "@react-md/core/theme/colors",
  lightBlue300: "@react-md/core/theme/colors",
  lightBlue400: "@react-md/core/theme/colors",
  lightBlue500: "@react-md/core/theme/colors",
  lightBlue600: "@react-md/core/theme/colors",
  lightBlue700: "@react-md/core/theme/colors",
  lightBlue800: "@react-md/core/theme/colors",
  lightBlue900: "@react-md/core/theme/colors",
  lightBlueAccent100: "@react-md/core/theme/colors",
  lightBlueAccent200: "@react-md/core/theme/colors",
  lightBlueAccent400: "@react-md/core/theme/colors",
  lightBlueAccent700: "@react-md/core/theme/colors",
  LightDarkColorScheme: "@react-md/core/theme/types",
  lightGreen50: "@react-md/core/theme/colors",
  lightGreen100: "@react-md/core/theme/colors",
  lightGreen200: "@react-md/core/theme/colors",
  lightGreen300: "@react-md/core/theme/colors",
  lightGreen400: "@react-md/core/theme/colors",
  lightGreen500: "@react-md/core/theme/colors",
  lightGreen600: "@react-md/core/theme/colors",
  lightGreen700: "@react-md/core/theme/colors",
  lightGreen800: "@react-md/core/theme/colors",
  lightGreen900: "@react-md/core/theme/colors",
  lightGreenAccent100: "@react-md/core/theme/colors",
  lightGreenAccent200: "@react-md/core/theme/colors",
  lightGreenAccent400: "@react-md/core/theme/colors",
  lightGreenAccent700: "@react-md/core/theme/colors",
  lime50: "@react-md/core/theme/colors",
  lime100: "@react-md/core/theme/colors",
  lime200: "@react-md/core/theme/colors",
  lime300: "@react-md/core/theme/colors",
  lime400: "@react-md/core/theme/colors",
  lime500: "@react-md/core/theme/colors",
  lime600: "@react-md/core/theme/colors",
  lime700: "@react-md/core/theme/colors",
  lime800: "@react-md/core/theme/colors",
  lime900: "@react-md/core/theme/colors",
  limeAccent100: "@react-md/core/theme/colors",
  limeAccent200: "@react-md/core/theme/colors",
  limeAccent400: "@react-md/core/theme/colors",
  limeAccent700: "@react-md/core/theme/colors",
  LinearProgress: "@react-md/core/progress/LinearProgress",
  LinearProgressProps: "@react-md/core/progress/LinearProgress",
  Link: "@react-md/core/link/Link",
  link: "@react-md/core/link/styles",
  LinkClassNameOptions: "@react-md/core/link/styles",
  LinkProps: "@react-md/core/link/Link",
  List: "@react-md/core/list/List",
  list: "@react-md/core/list/listStyles",
  Listbox: "@react-md/core/form/Listbox",
  ListboxContext: "@react-md/core/form/ListboxProvider",
  ListboxProps: "@react-md/core/form/Listbox",
  ListboxProvider: "@react-md/core/form/ListboxProvider",
  ListboxValue: "@react-md/core/form/Listbox",
  ListClassNameOptions: "@react-md/core/list/listStyles",
  ListElement: "@react-md/core/list/List",
  ListItem: "@react-md/core/list/ListItem",
  listItem: "@react-md/core/list/listItemStyles",
  ListItemAddon: "@react-md/core/list/ListItemAddon",
  listItemAddon: "@react-md/core/list/listItemStyles",
  ListItemAddonClassNameOptions: "@react-md/core/list/listItemStyles",
  ListItemAddonPosition: "@react-md/core/list/types",
  ListItemAddonProps: "@react-md/core/list/ListItemAddon",
  ListItemAddonType: "@react-md/core/list/types",
  ListItemChildren: "@react-md/core/list/ListItemChildren",
  ListItemChildrenAddonProps: "@react-md/core/list/types",
  ListItemChildrenProps: "@react-md/core/list/types",
  ListItemChildrenTextProps: "@react-md/core/list/types",
  ListItemClassNameOptions: "@react-md/core/list/listItemStyles",
  ListItemHeight: "@react-md/core/list/types",
  ListItemHeightOptions: "@react-md/core/list/getListItemHeight",
  ListItemLink: "@react-md/core/list/ListItemLink",
  ListItemLinkProps: "@react-md/core/list/ListItemLink",
  ListItemProps: "@react-md/core/list/ListItem",
  ListItemText: "@react-md/core/list/ListItemText",
  listItemText: "@react-md/core/list/listItemStyles",
  ListItemTextClassNameOptions: "@react-md/core/list/listItemStyles",
  ListItemTextProps: "@react-md/core/list/ListItemText",
  ListProps: "@react-md/core/list/List",
  ListSubheader: "@react-md/core/list/ListSubheader",
  listSubheader: "@react-md/core/list/ListSubheader",
  ListSubheaderClassNameOptions: "@react-md/core/list/ListSubheader",
  ListSubheaderProps: "@react-md/core/list/ListSubheader",
  LocalStorageColorSchemeProvider:
    "@react-md/core/theme/LocalStorageColorSchemeProvider",
  LocalStorageColorSchemeProviderProps:
    "@react-md/core/theme/LocalStorageColorSchemeProvider",
  loop: "@react-md/core/utils/loop",
  LoopOptions: "@react-md/core/utils/loop",
  Main: "@react-md/core/layout/Main",
  main: "@react-md/core/layout/mainStyles",
  MainClassNameOptions: "@react-md/core/layout/mainStyles",
  MainProps: "@react-md/core/layout/Main",
  Margin: "@react-md/core/cssUtils",
  MatchIndexOptions: "@react-md/core/movement/findMatchIndex",
  MatchInRangeOptions: "@react-md/core/movement/findMatchIndex",
  MATERIAL_CONFIG: "@react-md/core/icon/materialConfig",
  MaterialConfiguration: "@react-md/core/icon/materialConfig",
  MaterialIcon: "@react-md/core/icon/MaterialIcon",
  MaterialIconClassNameOptions: "@react-md/core/icon/styles",
  MaterialIconConfiguration: "@react-md/core/icon/materialConfig",
  MaterialIconCustomization: "@react-md/core/icon/materialConfig",
  MaterialIconFamily: "@react-md/core/icon/material",
  MaterialIconName: "@react-md/core/icon/material",
  MaterialIconProps: "@react-md/core/icon/MaterialIcon",
  MaterialSymbol: "@react-md/core/icon/MaterialSymbol",
  MaterialSymbolClassNameOptions: "@react-md/core/icon/styles",
  MaterialSymbolConfiguration: "@react-md/core/icon/materialConfig",
  MaterialSymbolCustomization: "@react-md/core/icon/materialConfig",
  MaterialSymbolFamily: "@react-md/core/icon/material",
  MaterialSymbolFill: "@react-md/core/icon/materialConfig",
  MaterialSymbolFontVariationSettings: "@react-md/core/icon/materialConfig",
  MaterialSymbolGrade: "@react-md/core/icon/materialConfig",
  MaterialSymbolName: "@react-md/core/icon/material",
  MaterialSymbolOpticalSize: "@react-md/core/icon/materialConfig",
  MaterialSymbolProps: "@react-md/core/icon/MaterialSymbol",
  MaterialSymbolWeight: "@react-md/core/icon/materialConfig",
  MaxTabPanelHeightImplementation: "@react-md/core/tabs/useMaxTabPanelHeight",
  MaxTabPanelHeightOptions: "@react-md/core/tabs/useMaxTabPanelHeight",
  maxWidthTransition: "@react-md/core/transition/maxWidthTransition",
  MaxWidthTransitionClassNameOptions:
    "@react-md/core/transition/maxWidthTransition",
  MaxWidthTransitionOptions: "@react-md/core/transition/useMaxWidthTransition",
  Menu: "@react-md/core/menu/Menu",
  menu: "@react-md/core/menu/MenuWidget",
  MenuBar: "@react-md/core/menu/MenuBar",
  MenuBarContext: "@react-md/core/menu/useMenuBarProvider",
  MenuBarProps: "@react-md/core/menu/MenuBar",
  MenuBarProvider: "@react-md/core/menu/useMenuBarProvider",
  MenuBarProviderOptions: "@react-md/core/menu/useMenuBarProvider",
  MenuButton: "@react-md/core/menu/MenuButton",
  MenuButtonIconRotatorProps: "@react-md/core/menu/MenuButton",
  MenuButtonProps: "@react-md/core/menu/MenuButton",
  MenuButtonTextIconSpacingProps: "@react-md/core/menu/MenuButton",
  MenuClassNameOptions: "@react-md/core/menu/MenuWidget",
  MenuConfiguration: "@react-md/core/menu/MenuConfigurationProvider",
  MenuConfigurationContext: "@react-md/core/menu/MenuConfigurationProvider",
  MenuConfigurationProps: "@react-md/core/menu/Menu",
  MenuConfigurationProvider: "@react-md/core/menu/MenuConfigurationProvider",
  MenuConfigurationProviderProps:
    "@react-md/core/menu/MenuConfigurationProvider",
  MenuConvenienceProps: "@react-md/core/menu/Menu",
  MenuFixedPositioningOptions: "@react-md/core/menu/Menu",
  MenuItem: "@react-md/core/menu/MenuItem",
  MenuItemButton: "@react-md/core/menu/MenuItemButton",
  MenuItemButtonProps: "@react-md/core/menu/MenuItemButton",
  MenuItemCheckbox: "@react-md/core/form/MenuItemCheckbox",
  MenuItemCheckboxGroupImplementation: "@react-md/core/form/useCheckboxGroup",
  MenuItemCheckboxProps: "@react-md/core/form/MenuItemInputToggle",
  MenuItemCircularProgress: "@react-md/core/menu/MenuItemCircularProgress",
  MenuItemCircularProgressProps: "@react-md/core/menu/MenuItemCircularProgress",
  MenuItemFileInput: "@react-md/core/form/MenuItemFileInput",
  MenuItemFileInputProps: "@react-md/core/form/MenuItemFileInput",
  MenuItemGroup: "@react-md/core/menu/MenuItemGroup",
  MenuItemGroupProps: "@react-md/core/menu/MenuItemGroup",
  MenuItemInputToggle: "@react-md/core/form/MenuItemInputToggle",
  menuItemInputToggle: "@react-md/core/form/menuItemInputToggleStyles",
  menuItemInputToggleBall: "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemInputToggleBallClassNameOptions:
    "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemInputToggleCheckedCallback: "@react-md/core/form/MenuItemInputToggle",
  MenuItemInputToggleClassNameOptions:
    "@react-md/core/form/menuItemInputToggleStyles",
  menuItemInputToggleIcon: "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemInputToggleIconClassNameOptions:
    "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemInputToggleProps: "@react-md/core/form/MenuItemInputToggle",
  menuItemInputToggleTrack: "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemInputToggleTrackClassNameOptions:
    "@react-md/core/form/menuItemInputToggleStyles",
  MenuItemProps: "@react-md/core/menu/MenuItem",
  MenuItemRadio: "@react-md/core/form/MenuItemRadio",
  MenuItemRadioGroupImplementation: "@react-md/core/form/useRadioGroup",
  MenuItemRadioProps: "@react-md/core/form/MenuItemInputToggle",
  MenuItemSeparator: "@react-md/core/menu/MenuItemSeparator",
  MenuItemSeparatorProps: "@react-md/core/menu/MenuItemSeparator",
  MenuItemSwitch: "@react-md/core/form/MenuItemSwitch",
  MenuItemSwitchProps: "@react-md/core/form/MenuItemInputToggle",
  MenuItemTextField: "@react-md/core/form/MenuItemTextField",
  MenuItemTextFieldProps: "@react-md/core/form/MenuItemTextField",
  MenuListConvenienceProps: "@react-md/core/menu/Menu",
  MenuOrientationProps: "@react-md/core/menu/MenuConfigurationProvider",
  MenuProps: "@react-md/core/menu/Menu",
  MenuSheet: "@react-md/core/menu/MenuSheet",
  MenuSheetConfigurableProps: "@react-md/core/menu/MenuSheet",
  MenuSheetConvenienceProps: "@react-md/core/menu/MenuSheet",
  MenuSheetProps: "@react-md/core/menu/MenuSheet",
  MenuTransitionProps: "@react-md/core/menu/Menu",
  MenuVisibilityContext: "@react-md/core/menu/MenuVisibilityProvider",
  MenuVisibilityProvider: "@react-md/core/menu/MenuVisibilityProvider",
  MenuVisibilityProviderProps: "@react-md/core/menu/MenuVisibilityProvider",
  MenuWidget: "@react-md/core/menu/MenuWidget",
  MenuWidgetKeyboardProvider: "@react-md/core/menu/MenuWidgetKeyboardProvider",
  MenuWidgetKeyboardProviderProps:
    "@react-md/core/menu/MenuWidgetKeyboardProvider",
  MenuWidgetProps: "@react-md/core/menu/MenuWidget",
  ModifyStorageOptions: "@react-md/core/storage/utils",
  MutationObserverHookOptions: "@react-md/core/useMutationObserver",
  NativeSelect: "@react-md/core/form/NativeSelect",
  nativeSelect: "@react-md/core/form/nativeSelectStyles",
  NativeSelectClassNameOptions: "@react-md/core/form/nativeSelectStyles",
  nativeSelectContainer: "@react-md/core/form/nativeSelectStyles",
  NativeSelectContainerClassNameOptions:
    "@react-md/core/form/nativeSelectStyles",
  NativeSelectProps: "@react-md/core/form/NativeSelect",
  NavGroup: "@react-md/core/navigation/NavGroup",
  navGroup: "@react-md/core/navigation/navGroupStyles",
  NavGroupClassNameOptions: "@react-md/core/navigation/navGroupStyles",
  NavGroupProps: "@react-md/core/navigation/NavGroup",
  Navigation: "@react-md/core/navigation/Navigation",
  NavigationExpansion: "@react-md/core/navigation/types",
  NavigationExpansionImplementation:
    "@react-md/core/navigation/useNavigationExpansion",
  NavigationExpansionOptions:
    "@react-md/core/navigation/useNavigationExpansion",
  NavigationItem: "@react-md/core/navigation/types",
  NavigationItemDivider: "@react-md/core/navigation/types",
  NavigationItemGroup: "@react-md/core/navigation/types",
  NavigationItemRoute: "@react-md/core/navigation/types",
  NavigationItemSubheader: "@react-md/core/navigation/types",
  NavigationLinkComponent: "@react-md/core/navigation/types",
  NavigationProps: "@react-md/core/navigation/Navigation",
  NavigationRenderData: "@react-md/core/navigation/types",
  NavItem: "@react-md/core/navigation/NavItem",
  navItem: "@react-md/core/navigation/navItemStyles",
  NavItemButton: "@react-md/core/navigation/NavItemButton",
  NavItemButtonProps: "@react-md/core/navigation/NavItemButton",
  NavItemButtonRotatorProps: "@react-md/core/navigation/NavItemButton",
  NavItemClassNameOptions: "@react-md/core/navigation/navItemStyles",
  navItemContent: "@react-md/core/navigation/navItemStyles",
  NavItemContentClassNameOptions: "@react-md/core/navigation/navItemStyles",
  NavItemContentProps: "@react-md/core/navigation/types",
  NavItemLink: "@react-md/core/navigation/NavItemLink",
  navItemLink: "@react-md/core/navigation/navItemStyles",
  NavItemLinkClassNameOptions: "@react-md/core/navigation/navItemStyles",
  NavItemLinkProps: "@react-md/core/navigation/NavItemLink",
  NavItemProps: "@react-md/core/navigation/NavItem",
  NavSubheader: "@react-md/core/navigation/NavSubheader",
  NavSubheaderProps: "@react-md/core/navigation/NavSubheader",
  nearest: "@react-md/core/utils/nearest",
  NearestOptions: "@react-md/core/utils/nearest",
  NestedDialogProvider: "@react-md/core/dialog/NestedDialogProvider",
  NonNullMutableRef: "@react-md/core/types",
  NonNullRef: "@react-md/core/types",
  noopAutocompleteFilter: "@react-md/core/autocomplete/defaults",
  NORMAL_TEXT_CONTRAST_RATIO: "@react-md/core/theme/utils",
  NoSsr: "@react-md/core/NoSsr",
  NoSsrProps: "@react-md/core/NoSsr",
  NullableTypographyClassNameOptions:
    "@react-md/core/typography/typographyStyles",
  NullSuspense: "@react-md/core/suspense/NullSuspense",
  NullSuspenseProps: "@react-md/core/suspense/NullSuspense",
  NumberFieldConstraints: "@react-md/core/form/useNumberField",
  NumberFieldHookOptions: "@react-md/core/form/useNumberField",
  NumberFieldHookState: "@react-md/core/form/useNumberField",
  NumberFieldImplementation: "@react-md/core/form/useNumberField",
  NumberFieldWithMessageImplementation: "@react-md/core/form/useNumberField",
  objectFit: "@react-md/core/objectFit",
  ObjectFitOptions: "@react-md/core/objectFit",
  onErrorColorVar: "@react-md/core/theme/cssVars",
  onPrimaryColorVar: "@react-md/core/theme/cssVars",
  onSecondaryColorVar: "@react-md/core/theme/cssVars",
  onSuccessColorVar: "@react-md/core/theme/cssVars",
  onWarningColorVar: "@react-md/core/theme/cssVars",
  OptGroup: "@react-md/core/form/OptGroup",
  OptGroupProps: "@react-md/core/form/OptGroup",
  Option: "@react-md/core/form/Option",
  option: "@react-md/core/form/optionStyles",
  OptionClassNameOptions: "@react-md/core/form/optionStyles",
  OptionProps: "@react-md/core/form/Option",
  OptionSelectedIconProps: "@react-md/core/form/Option",
  orange50: "@react-md/core/theme/colors",
  orange100: "@react-md/core/theme/colors",
  orange200: "@react-md/core/theme/colors",
  orange300: "@react-md/core/theme/colors",
  orange400: "@react-md/core/theme/colors",
  orange500: "@react-md/core/theme/colors",
  orange600: "@react-md/core/theme/colors",
  orange700: "@react-md/core/theme/colors",
  orange800: "@react-md/core/theme/colors",
  orange900: "@react-md/core/theme/colors",
  orangeAccent100: "@react-md/core/theme/colors",
  orangeAccent200: "@react-md/core/theme/colors",
  orangeAccent400: "@react-md/core/theme/colors",
  orangeAccent700: "@react-md/core/theme/colors",
  OutlineColor: "@react-md/core/cssUtils",
  Overlay: "@react-md/core/overlay/Overlay",
  overlay: "@react-md/core/overlay/overlayStyles",
  OverlayClassNameOptions: "@react-md/core/overlay/overlayStyles",
  OverlayProps: "@react-md/core/overlay/Overlay",
  OverridableTreeGroupProps: "@react-md/core/tree/TreeGroup",
  PageInactiveOptions: "@react-md/core/usePageInactive",
  PageInactiveType: "@react-md/core/usePageInactive",
  parseCssLengthUnit: "@react-md/core/utils/parseCssLengthUnit",
  ParseCssLengthUnitOptions: "@react-md/core/utils/parseCssLengthUnit",
  Password: "@react-md/core/form/Password",
  password: "@react-md/core/form/passwordStyles",
  PasswordClassNameOptions: "@react-md/core/form/passwordStyles",
  passwordInput: "@react-md/core/form/passwordStyles",
  PasswordInputClassNameOptions: "@react-md/core/form/passwordStyles",
  passwordInputToggle: "@react-md/core/form/passwordStyles",
  PasswordInputToggleClassNameOptions: "@react-md/core/form/passwordStyles",
  PasswordProps: "@react-md/core/form/Password",
  pink50: "@react-md/core/theme/colors",
  pink100: "@react-md/core/theme/colors",
  pink200: "@react-md/core/theme/colors",
  pink300: "@react-md/core/theme/colors",
  pink400: "@react-md/core/theme/colors",
  pink500: "@react-md/core/theme/colors",
  pink600: "@react-md/core/theme/colors",
  pink700: "@react-md/core/theme/colors",
  pink800: "@react-md/core/theme/colors",
  pink900: "@react-md/core/theme/colors",
  pinkAccent100: "@react-md/core/theme/colors",
  pinkAccent200: "@react-md/core/theme/colors",
  pinkAccent400: "@react-md/core/theme/colors",
  pinkAccent700: "@react-md/core/theme/colors",
  popToast: "@react-md/core/snackbar/ToastManager",
  Portal: "@react-md/core/portal/Portal",
  PORTAL_CONTAINER_ID: "@react-md/core/portal/PortalContainerProvider",
  PortalContainer: "@react-md/core/portal/PortalContainerProvider",
  PortalContainerNode: "@react-md/core/portal/PortalContainerProvider",
  PortalContainerProvider: "@react-md/core/portal/PortalContainerProvider",
  PortalContainerProviderProps: "@react-md/core/portal/PortalContainerProvider",
  PortalProps: "@react-md/core/portal/Portal",
  PositionAnchor: "@react-md/core/positioning/types",
  PositionWidth: "@react-md/core/positioning/types",
  PreconfiguredCSSTransitionInDefaultedOptions:
    "@react-md/core/transition/types",
  PreconfiguredCSSTransitionOptions: "@react-md/core/transition/types",
  PreconfiguredTransitionInDefaultedOptions: "@react-md/core/transition/types",
  PreconfiguredTransitionOptions: "@react-md/core/transition/types",
  PRESSED_CLASS_NAME: "@react-md/core/interaction/useElementInteraction",
  primaryColorVar: "@react-md/core/theme/cssVars",
  ProcessingFileUploadStats: "@react-md/core/files/utils",
  PROGRAMMATICALLY_FOCUSABLE: "@react-md/core/focus/utils",
  ProgressA11y: "@react-md/core/progress/getProgressA11y",
  ProgressProps: "@react-md/core/progress/types",
  ProgressTheme: "@react-md/core/progress/types",
  PropsWithRef: "@react-md/core/types",
  ProvidedComboboxMenuProps: "@react-md/core/form/useCombobox",
  ProvidedExpandableLayoutNavToggleProps:
    "@react-md/core/layout/useExpandableLayout",
  ProvidedExpansionPanelProps:
    "@react-md/core/expansion-panel/useExpansionPanels",
  ProvidedFormMessageProps: "@react-md/core/form/useTextField",
  ProvidedLayoutAppBarProps: "@react-md/core/layout/useExpandableLayout",
  ProvidedLayoutMainProps: "@react-md/core/layout/useExpandableLayout",
  ProvidedLayoutNavProps: "@react-md/core/layout/useExpandableLayout",
  ProvidedLayoutNavToggleProps: "@react-md/core/layout/useTemporaryLayout",
  ProvidedLayoutWindowSplitterProps:
    "@react-md/core/layout/useLayoutWindowSplitter",
  ProvidedMaxTabPanelsHeightProps: "@react-md/core/tabs/useMaxTabPanelHeight",
  ProvidedNumberFieldMessageProps: "@react-md/core/form/useNumberField",
  ProvidedNumberFieldProps: "@react-md/core/form/useNumberField",
  ProvidedRadioGroupProps: "@react-md/core/form/useRadioGroup",
  ProvidedResizableLayoutNavProps: "@react-md/core/layout/useResizableLayout",
  ProvidedRippleContainerProps: "@react-md/core/interaction/types",
  ProvidedTabListProps: "@react-md/core/tabs/useTabs",
  ProvidedTabPanelProps: "@react-md/core/tabs/useTabs",
  ProvidedTabPanelsProps: "@react-md/core/tabs/useTabs",
  ProvidedTabProps: "@react-md/core/tabs/useTabs",
  ProvidedTemporaryLayoutAppBarProps:
    "@react-md/core/layout/useTemporaryLayout",
  ProvidedTemporaryLayoutMainProps: "@react-md/core/layout/useTemporaryLayout",
  ProvidedTemporaryLayoutNavProps: "@react-md/core/layout/useTemporaryLayout",
  ProvidedTextFieldMessageProps: "@react-md/core/form/useTextField",
  ProvidedTextFieldProps: "@react-md/core/form/useTextField",
  ProvidedTooltippedElementProps: "@react-md/core/tooltip/useTooltip",
  ProvidedTooltipProps: "@react-md/core/tooltip/useTooltip",
  purple50: "@react-md/core/theme/colors",
  purple100: "@react-md/core/theme/colors",
  purple200: "@react-md/core/theme/colors",
  purple300: "@react-md/core/theme/colors",
  purple400: "@react-md/core/theme/colors",
  purple500: "@react-md/core/theme/colors",
  purple600: "@react-md/core/theme/colors",
  purple700: "@react-md/core/theme/colors",
  purple800: "@react-md/core/theme/colors",
  purple900: "@react-md/core/theme/colors",
  purpleAccent100: "@react-md/core/theme/colors",
  purpleAccent200: "@react-md/core/theme/colors",
  purpleAccent400: "@react-md/core/theme/colors",
  purpleAccent700: "@react-md/core/theme/colors",
  QuerySize: "@react-md/core/media-queries/appSize",
  QueuedToast: "@react-md/core/snackbar/ToastManager",
  Radio: "@react-md/core/form/Radio",
  RadioGroupImplementation: "@react-md/core/form/useRadioGroup",
  RadioGroupOptions: "@react-md/core/form/useRadioGroup",
  RadioInputToggleProps: "@react-md/core/form/InputToggle",
  RadioProps: "@react-md/core/form/InputToggle",
  randomInt: "@react-md/core/utils/randomInt",
  RandomIntOptions: "@react-md/core/utils/randomInt",
  randomSkeletonPlaceholder:
    "@react-md/core/transition/skeletonPlaceholderUtils",
  RangeDefaultValueOptions: "@react-md/core/utils/getRangeDefaultValue",
  RangeSliderImplementation: "@react-md/core/form/useRangeSlider",
  RangeSliderOptions: "@react-md/core/form/useRangeSlider",
  RangeSliderProps: "@react-md/core/form/Slider",
  RangeSliderState: "@react-md/core/form/useRangeSlider",
  RangeSliderValue: "@react-md/core/form/useRangeSlider",
  RangeStepsOptions: "@react-md/core/utils/getRangeSteps",
  ReactMDCoreConfiguration: "@react-md/core/CoreProviders",
  ReadonlyCSSVariableList: "@react-md/core/theme/types",
  ReadonlySetImplementation: "@react-md/core/useReadonlySet",
  ReadonlySetOptions: "@react-md/core/useReadonlySet",
  recalculateFocusIndex: "@react-md/core/movement/utils",
  RecalculateOptions: "@react-md/core/movement/utils",
  RECOMMENDED_NUMBER_STATE_KEYS: "@react-md/core/form/validation",
  RECOMMENDED_STATE_KEYS: "@react-md/core/form/validation",
  RecursiveItem: "@react-md/core/utils/RenderRecursively",
  RecursiveItemKeyOptions: "@react-md/core/utils/RenderRecursively",
  red50: "@react-md/core/theme/colors",
  red100: "@react-md/core/theme/colors",
  red200: "@react-md/core/theme/colors",
  red300: "@react-md/core/theme/colors",
  red400: "@react-md/core/theme/colors",
  red500: "@react-md/core/theme/colors",
  red600: "@react-md/core/theme/colors",
  red700: "@react-md/core/theme/colors",
  red800: "@react-md/core/theme/colors",
  red900: "@react-md/core/theme/colors",
  redAccent100: "@react-md/core/theme/colors",
  redAccent200: "@react-md/core/theme/colors",
  redAccent400: "@react-md/core/theme/colors",
  redAccent700: "@react-md/core/theme/colors",
  releaseRipple: "@react-md/core/interaction/utils",
  removeItemFromStorage: "@react-md/core/storage/utils",
  removeToast: "@react-md/core/snackbar/ToastManager",
  RenameKeysWithPrefix: "@react-md/core/types",
  RenderableTreeItemNode: "@react-md/core/tree/useTreeItems",
  RenderMenuAsSheet: "@react-md/core/menu/MenuConfigurationProvider",
  RenderRecursiveItemsProps: "@react-md/core/utils/RenderRecursively",
  RenderRecursively: "@react-md/core/utils/RenderRecursively",
  RenderRecursivelyProps: "@react-md/core/utils/RenderRecursively",
  RequireAtLeastOne: "@react-md/core/types",
  RequiredThumbProps: "@react-md/core/form/sliderUtils",
  ResizableLayoutImplementation: "@react-md/core/layout/useResizableLayout",
  ResizableLayoutOptions: "@react-md/core/layout/useResizableLayout",
  ResizeListenerOptions: "@react-md/core/useResizeListener",
  ResizeObserverEntryCallback: "@react-md/core/useResizeObserver",
  ResizeObserverHookOptions: "@react-md/core/useResizeObserver",
  ResizeObserverManager: "@react-md/core/useResizeObserver",
  resizeObserverManager: "@react-md/core/useResizeObserver",
  ResizingTextAreaOptions: "@react-md/core/form/useResizingTextArea",
  ResizingTextAreaReturnValue: "@react-md/core/form/useResizingTextArea",
  ResizingTextAreaWrapper: "@react-md/core/form/ResizingTextAreaWrapper",
  ResizingTextAreaWrapperProps: "@react-md/core/form/ResizingTextAreaWrapper",
  ResponsiveItem: "@react-md/core/responsive-item/ResponsiveItem",
  responsiveItem: "@react-md/core/responsive-item/responsiveItemStyles",
  ResponsiveItemClassNameOptions:
    "@react-md/core/responsive-item/responsiveItemStyles",
  ResponsiveItemOverlay: "@react-md/core/responsive-item/ResponsiveItemOverlay",
  responsiveItemOverlay:
    "@react-md/core/responsive-item/responsiveItemOverlayStyles",
  ResponsiveItemOverlayClassNameOptions:
    "@react-md/core/responsive-item/responsiveItemOverlayStyles",
  ResponsiveItemOverlayPosition:
    "@react-md/core/responsive-item/responsiveItemOverlayStyles",
  ResponsiveItemOverlayProps:
    "@react-md/core/responsive-item/ResponsiveItemOverlay",
  ResponsiveItemProps: "@react-md/core/responsive-item/ResponsiveItem",
  RGB: "@react-md/core/theme/utils",
  Ripple: "@react-md/core/interaction/Ripple",
  RippleContainer: "@react-md/core/interaction/RippleContainer",
  RippleContainerProps: "@react-md/core/interaction/RippleContainer",
  RippleProps: "@react-md/core/interaction/Ripple",
  RippleState: "@react-md/core/interaction/types",
  RippleStateList: "@react-md/core/interaction/types",
  RippleStyle: "@react-md/core/interaction/types",
  RippleTransitionCallbacks: "@react-md/core/interaction/types",
  RootHtml: "@react-md/core/RootHtml",
  RootHtmlProps: "@react-md/core/RootHtml",
  SCALE_CLASSNAMES: "@react-md/core/transition/useScaleTransition",
  SCALE_TIMEOUT: "@react-md/core/transition/useScaleTransition",
  SCALE_Y_CLASSNAMES: "@react-md/core/transition/useScaleTransition",
  ScaleTransition: "@react-md/core/transition/ScaleTransition",
  ScaleTransitionHookOptions: "@react-md/core/transition/useScaleTransition",
  ScaleTransitionProps: "@react-md/core/transition/ScaleTransition",
  SCROLLBAR_SIZE_VAR: "@react-md/core/scroll/useScrollLock",
  ScrollLock: "@react-md/core/scroll/ScrollLock",
  scrollTabIntoView: "@react-md/core/tabs/utils",
  search: "@react-md/core/searching/utils",
  SearchOptions: "@react-md/core/searching/utils",
  secondaryColorVar: "@react-md/core/theme/cssVars",
  SegmentedButton: "@react-md/core/segmented-button/SegmentedButton",
  segmentedButton: "@react-md/core/segmented-button/segmentedButtonStyles",
  SegmentedButtonClassNameOptions:
    "@react-md/core/segmented-button/segmentedButtonStyles",
  SegmentedButtonContainer:
    "@react-md/core/segmented-button/SegmentedButtonContainer",
  segmentedButtonContainer:
    "@react-md/core/segmented-button/segmentedButtonContainerStyles",
  SegmentedButtonContainerClassNameOptions:
    "@react-md/core/segmented-button/segmentedButtonContainerStyles",
  SegmentedButtonContainerProps:
    "@react-md/core/segmented-button/SegmentedButtonContainer",
  SegmentedButtonProps: "@react-md/core/segmented-button/SegmentedButton",
  Select: "@react-md/core/form/Select",
  select: "@react-md/core/form/selectStyles",
  SelectChangeEvent: "@react-md/core/form/Select",
  SelectClassNameOptions: "@react-md/core/form/selectStyles",
  SelectComboboxImplementation: "@react-md/core/form/useSelectCombobox",
  SelectComboboxOptions: "@react-md/core/form/useSelectCombobox",
  SelectedOption: "@react-md/core/form/SelectedOption",
  SelectedOptionProps: "@react-md/core/form/SelectedOption",
  SelectOption: "@react-md/core/form/selectUtils",
  SelectProps: "@react-md/core/form/Select",
  SetChildDialogVisible: "@react-md/core/dialog/NestedDialogProvider",
  setItemInStorage: "@react-md/core/storage/utils",
  SetItemInStorageOptions: "@react-md/core/storage/utils",
  Sheet: "@react-md/core/sheet/Sheet",
  sheet: "@react-md/core/sheet/styles",
  SheetClassNameOptions: "@react-md/core/sheet/styles",
  SheetDialogProps: "@react-md/core/sheet/Sheet",
  SheetHorizontalSize: "@react-md/core/sheet/styles",
  SheetPosition: "@react-md/core/sheet/styles",
  SheetProps: "@react-md/core/sheet/Sheet",
  SheetVerticalSize: "@react-md/core/sheet/styles",
  SimpleHoverModeContext: "@react-md/core/hoverMode/useHoverModeProvider",
  SimplePosition: "@react-md/core/positioning/types",
  SimpleTabPanel: "@react-md/core/tabs/SimpleTabPanel",
  SimpleTabPanelProps: "@react-md/core/tabs/SimpleTabPanel",
  SimpleTabPanels: "@react-md/core/tabs/SimpleTabPanels",
  SimpleTabPanelsProps: "@react-md/core/tabs/SimpleTabPanels",
  SkeletonPlaceholder: "@react-md/core/transition/SkeletonPlaceholder",
  skeletonPlaceholder: "@react-md/core/transition/skeletonPlaceholderUtils",
  SkeletonPlaceholderOptions:
    "@react-md/core/transition/useSkeletonPlaceholder",
  SkeletonPlaceholderProps: "@react-md/core/transition/SkeletonPlaceholder",
  SkeletonPlaceholderRandomOptions:
    "@react-md/core/transition/skeletonPlaceholderUtils",
  SkeletonPlaceholderStylingProps:
    "@react-md/core/transition/useSkeletonPlaceholder",
  SkipToMainContent: "@react-md/core/link/SkipToMainContent",
  skipToMainContent: "@react-md/core/link/styles",
  SkipToMainContentClassNameOptions: "@react-md/core/link/styles",
  SkipToMainContentProps: "@react-md/core/link/SkipToMainContent",
  Slide: "@react-md/core/transition/Slide",
  SlideContainer: "@react-md/core/transition/SlideContainer",
  slideContainer: "@react-md/core/transition/SlideContainer",
  SlideContainerClassNameOptions: "@react-md/core/transition/SlideContainer",
  SlideContainerProps: "@react-md/core/transition/SlideContainer",
  SlideDirection: "@react-md/core/transition/SlideContainer",
  SlideProps: "@react-md/core/transition/Slide",
  Slider: "@react-md/core/form/Slider",
  SliderAddonProps: "@react-md/core/form/SliderContainer",
  SliderContainer: "@react-md/core/form/SliderContainer",
  sliderContainer: "@react-md/core/form/sliderStyles",
  SliderContainerClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderContainerProps: "@react-md/core/form/SliderContainer",
  SliderImplementation: "@react-md/core/form/useSlider",
  SliderMark: "@react-md/core/form/SliderMark",
  sliderMark: "@react-md/core/form/sliderStyles",
  SliderMarkClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderMarkLabel: "@react-md/core/form/SliderMarkLabel",
  sliderMarkLabel: "@react-md/core/form/sliderStyles",
  SliderMarkLabelClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderMarkLabelProps: "@react-md/core/form/SliderMarkLabel",
  SliderMarkProps: "@react-md/core/form/SliderMark",
  SliderMarksOptions: "@react-md/core/form/SliderValueMarks",
  SliderOptions: "@react-md/core/form/useSlider",
  SliderProps: "@react-md/core/form/Slider",
  SliderState: "@react-md/core/form/useSlider",
  SliderThumb: "@react-md/core/form/SliderThumb",
  sliderThumb: "@react-md/core/form/sliderStyles",
  SliderThumbClassNameOptions: "@react-md/core/form/sliderStyles",
  sliderThumbInput: "@react-md/core/form/sliderStyles",
  SliderThumbInputClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderThumbPresentation: "@react-md/core/form/SliderThumb",
  SliderThumbProps: "@react-md/core/form/SliderThumb",
  SliderTooltipVisibility: "@react-md/core/form/SliderThumb",
  SliderTrack: "@react-md/core/form/SliderTrack",
  sliderTrack: "@react-md/core/form/sliderStyles",
  SliderTrackClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderTrackProps: "@react-md/core/form/SliderTrack",
  SliderValueMark: "@react-md/core/form/SliderValueMarks",
  SliderValueMarks: "@react-md/core/form/SliderValueMarks",
  SliderValueMarksProps: "@react-md/core/form/SliderValueMarks",
  SliderValueMarkState: "@react-md/core/form/SliderValueMarks",
  SliderValueOptions: "@react-md/core/form/useSlider",
  SliderValueTooltip: "@react-md/core/form/SliderValueTooltip",
  sliderValueTooltip: "@react-md/core/form/sliderStyles",
  SliderValueTooltipClassNameOptions: "@react-md/core/form/sliderStyles",
  SliderValueTooltipProps: "@react-md/core/form/SliderValueTooltip",
  SlideTransitionOptions: "@react-md/core/transition/useSlideTransition",
  Snackbar: "@react-md/core/snackbar/Snackbar",
  snackbar: "@react-md/core/snackbar/snackbarStyles",
  SnackbarClassNameOptions: "@react-md/core/snackbar/snackbarStyles",
  SnackbarPosition: "@react-md/core/snackbar/snackbarStyles",
  SnackbarProps: "@react-md/core/snackbar/Snackbar",
  SortOrder: "@react-md/core/table/types",
  SplitFileUploads: "@react-md/core/files/utils",
  SrOnly: "@react-md/core/typography/SrOnly",
  SrOnlyProps: "@react-md/core/typography/SrOnly",
  SsrProvider: "@react-md/core/SsrProvider",
  SsrProviderProps: "@react-md/core/SsrProvider",
  SSRTransitionOptions: "@react-md/core/transition/types",
  startRemoveToastTimeout: "@react-md/core/snackbar/ToastManager",
  StickyTableSection: "@react-md/core/table/StickyTableSection",
  StickyTableSectionProps: "@react-md/core/table/StickyTableSection",
  StorageDeserializer: "@react-md/core/storage/types",
  StorageImplementation: "@react-md/core/storage/types",
  StorageOptions: "@react-md/core/storage/types",
  StorageSerializer: "@react-md/core/storage/types",
  StorageSerializers: "@react-md/core/storage/types",
  successColorVar: "@react-md/core/theme/cssVars",
  SupportedComboboxPopup: "@react-md/core/form/useCombobox",
  SupportedInputTypes: "@react-md/core/form/TextField",
  SVGIcon: "@react-md/core/icon/SVGIcon",
  SVGIconClassNameOptions: "@react-md/core/icon/styles",
  SVGIconProps: "@react-md/core/icon/SVGIcon",
  Switch: "@react-md/core/form/Switch",
  switchBall: "@react-md/core/form/switchStyles",
  SwitchBallClassNameOptions: "@react-md/core/form/switchStyles",
  SwitchClassNameOptions: "@react-md/core/form/switchStyles",
  SwitchProps: "@react-md/core/form/Switch",
  switchStyles: "@react-md/core/form/switchStyles",
  SwitchTrack: "@react-md/core/form/SwitchTrack",
  switchTrack: "@react-md/core/form/switchStyles",
  SwitchTrackClassNameOptions: "@react-md/core/form/switchStyles",
  SwitchTrackProps: "@react-md/core/form/SwitchTrack",
  Tab: "@react-md/core/tabs/Tab",
  tab: "@react-md/core/tabs/tabStyles",
  TAB_FOCUSABLE: "@react-md/core/focus/utils",
  TabButtonProps: "@react-md/core/tabs/Tab",
  TabClassNameOptions: "@react-md/core/tabs/tabStyles",
  TabIndexBehavior: "@react-md/core/movement/types",
  tabIndicator: "@react-md/core/tabs/tabIndicatorStyles",
  TabIndicatorClassNameOptions: "@react-md/core/tabs/tabIndicatorStyles",
  Table: "@react-md/core/table/Table",
  table: "@react-md/core/table/tableStyles",
  TableBody: "@react-md/core/table/TableBody",
  TableBodyProps: "@react-md/core/table/TableBody",
  TableCell: "@react-md/core/table/TableCell",
  tableCell: "@react-md/core/table/tableCellStyles",
  TableCellAttributes: "@react-md/core/table/TableCell",
  TableCellClassNameOptions: "@react-md/core/table/tableCellStyles",
  TableCellConfig: "@react-md/core/table/types",
  TableCellConfiguration: "@react-md/core/table/types",
  TableCellContent: "@react-md/core/table/TableCellContent",
  TableCellContentProps: "@react-md/core/table/TableCellContent",
  TableCellContentsIconRotatorProps: "@react-md/core/table/TableCellContent",
  TableCellHorizontalAlignment: "@react-md/core/table/types",
  TableCellOptions: "@react-md/core/table/TableCell",
  TableCellProps: "@react-md/core/table/TableCell",
  TableCellVerticalAlignment: "@react-md/core/table/types",
  TableCheckbox: "@react-md/core/table/TableCheckbox",
  TableCheckboxProps: "@react-md/core/table/TableCheckbox",
  TableCheckboxSupportedCheckboxProps: "@react-md/core/table/TableCheckbox",
  TableCheckboxTdHTMLAttributes: "@react-md/core/table/TableCheckbox",
  TableClassNameOptions: "@react-md/core/table/tableStyles",
  TableConfig: "@react-md/core/table/types",
  TableConfigContext: "@react-md/core/table/types",
  TableConfigProvider: "@react-md/core/table/TableConfigurationProvider",
  TableConfiguration: "@react-md/core/table/types",
  TableContainer: "@react-md/core/table/TableContainer",
  tableContainer: "@react-md/core/table/tableContainerStyles",
  TableContainerClassNameOptions: "@react-md/core/table/tableContainerStyles",
  TableContainerContext: "@react-md/core/table/TableContainerProvider",
  TableContainerProps: "@react-md/core/table/TableContainer",
  TableContainerProvider: "@react-md/core/table/TableContainerProvider",
  TableFooter: "@react-md/core/table/TableFooter",
  tableFooter: "@react-md/core/table/tableFooterStyles",
  TableFooterClassNameOptions: "@react-md/core/table/tableFooterStyles",
  TableFooterProps: "@react-md/core/table/TableFooter",
  TableHeader: "@react-md/core/table/TableHeader",
  tableHeader: "@react-md/core/table/tableHeaderStyles",
  TableHeaderClassNameOptions: "@react-md/core/table/tableHeaderStyles",
  TableHeaderProps: "@react-md/core/table/TableHeader",
  TableOfContentsHeading: "@react-md/core/navigation/types",
  TableOfContentsHeadingItem: "@react-md/core/navigation/types",
  TableOfContentsHeadings: "@react-md/core/navigation/types",
  TableOfContentsHeadingsOptions: "@react-md/core/navigation/types",
  TableProps: "@react-md/core/table/Table",
  TableRadio: "@react-md/core/table/TableRadio",
  TableRadioProps: "@react-md/core/table/TableRadio",
  TableRadioSupportedRadioProps: "@react-md/core/table/TableRadio",
  TableRadioTdHTMLAttributes: "@react-md/core/table/TableRadio",
  TableRow: "@react-md/core/table/TableRow",
  tableRow: "@react-md/core/table/tableRowStyles",
  TableRowClassNameOptions: "@react-md/core/table/tableRowStyles",
  TableRowConfiguration: "@react-md/core/table/types",
  TableRowProps: "@react-md/core/table/TableRow",
  TableSectionConfigOptions: "@react-md/core/table/useTableSectionConfig",
  TableSectionConfiguration: "@react-md/core/table/types",
  TableStickySectionConfiguration: "@react-md/core/table/types",
  TableStickySectionImplementation:
    "@react-md/core/table/useStickyTableSection",
  TableStickySectionIntersectionObserverOptions: "@react-md/core/table/types",
  TableStickySectionOptions: "@react-md/core/table/useStickyTableSection",
  TabLinkProps: "@react-md/core/tabs/Tab",
  TabList: "@react-md/core/tabs/TabList",
  tabList: "@react-md/core/tabs/tabListStyles",
  TabListActivationMode: "@react-md/core/tabs/types",
  TabListClassNameOptions: "@react-md/core/tabs/tabListStyles",
  TabListHookOptions: "@react-md/core/tabs/useTabList",
  TabListHookReturnValue: "@react-md/core/tabs/useTabList",
  TabListProps: "@react-md/core/tabs/TabList",
  TabListScrollButton: "@react-md/core/tabs/TabListScrollButton",
  tabListScrollButton: "@react-md/core/tabs/tabListScrollButtonStyles",
  TabListScrollButtonClassNameOptions:
    "@react-md/core/tabs/tabListScrollButtonStyles",
  tabListScrollButtonContainer: "@react-md/core/tabs/tabListScrollButtonStyles",
  TabListScrollButtonContainerClassNameOptions:
    "@react-md/core/tabs/tabListScrollButtonStyles",
  TabListScrollButtonProps: "@react-md/core/tabs/TabListScrollButton",
  TabListScrollButtonsBehavior: "@react-md/core/tabs/types",
  TabListScrollToOptions: "@react-md/core/tabs/getTabListScrollToOptions",
  TabOffsetVar: "@react-md/core/tabs/useTabList",
  TabProps: "@react-md/core/tabs/Tab",
  TabsAlignment: "@react-md/core/tabs/tabListStyles",
  TabsHookOptions: "@react-md/core/tabs/useTabs",
  TabsImplementation: "@react-md/core/tabs/useTabs",
  TabWidthVar: "@react-md/core/tabs/useTabList",
  teal50: "@react-md/core/theme/colors",
  teal100: "@react-md/core/theme/colors",
  teal200: "@react-md/core/theme/colors",
  teal300: "@react-md/core/theme/colors",
  teal400: "@react-md/core/theme/colors",
  teal500: "@react-md/core/theme/colors",
  teal600: "@react-md/core/theme/colors",
  teal700: "@react-md/core/theme/colors",
  teal800: "@react-md/core/theme/colors",
  teal900: "@react-md/core/theme/colors",
  tealAccent100: "@react-md/core/theme/colors",
  tealAccent200: "@react-md/core/theme/colors",
  tealAccent400: "@react-md/core/theme/colors",
  tealAccent700: "@react-md/core/theme/colors",
  TemporaryLayoutImplementation: "@react-md/core/layout/useTemporaryLayout",
  TemporaryLayoutOptions: "@react-md/core/layout/useTemporaryLayout",
  TextAlign: "@react-md/core/cssUtils",
  TextArea: "@react-md/core/form/TextArea",
  textArea: "@react-md/core/form/textAreaStyles",
  TextareaClassNameOptions: "@react-md/core/form/textAreaStyles",
  textAreaContainer: "@react-md/core/form/textAreaStyles",
  TextareaContainerClassNameOptions: "@react-md/core/form/textAreaStyles",
  TextAreaProps: "@react-md/core/form/TextArea",
  TextAreaResize: "@react-md/core/form/useResizingTextArea",
  TextColor: "@react-md/core/cssUtils",
  TextContainer: "@react-md/core/typography/TextContainer",
  textContainer: "@react-md/core/typography/textContainerStyles",
  TextContainerClassNameOptions:
    "@react-md/core/typography/textContainerStyles",
  TextContainerProps: "@react-md/core/typography/TextContainer",
  TextCssUtilsOptions: "@react-md/core/cssUtils",
  TextDecoration: "@react-md/core/cssUtils",
  textDisabledColorVar: "@react-md/core/theme/cssVars",
  TextExtractor: "@react-md/core/types",
  TextField: "@react-md/core/form/TextField",
  textField: "@react-md/core/form/textFieldStyles",
  TextFieldAddon: "@react-md/core/form/TextFieldAddon",
  textFieldAddon: "@react-md/core/form/textFieldAddonStyles",
  TextFieldAddonClassNameOptions: "@react-md/core/form/textFieldAddonStyles",
  TextFieldAddonProps: "@react-md/core/form/types",
  TextFieldChangeHandlers: "@react-md/core/form/useTextField",
  TextFieldClassNameOptions: "@react-md/core/form/textFieldStyles",
  TextFieldContainer: "@react-md/core/form/TextFieldContainer",
  textFieldContainer: "@react-md/core/form/textFieldContainerStyles",
  TextFieldContainerAddonsImplementation:
    "@react-md/core/form/useTextFieldContainerAddons",
  TextFieldContainerAddonsOptions:
    "@react-md/core/form/useTextFieldContainerAddons",
  TextFieldContainerClassNameOptions:
    "@react-md/core/form/textFieldContainerStyles",
  TextFieldContainerOptions: "@react-md/core/form/types",
  TextFieldContainerProps: "@react-md/core/form/TextFieldContainer",
  TextFieldHookOptions: "@react-md/core/form/useTextField",
  TextFieldHookState: "@react-md/core/form/useTextField",
  TextFieldImplementation: "@react-md/core/form/useTextField",
  TextFieldInputAttributes: "@react-md/core/form/TextField",
  TextFieldProps: "@react-md/core/form/TextField",
  TextFieldValidationOptions: "@react-md/core/form/validation",
  TextFieldValidationType: "@react-md/core/form/validation",
  TextFieldWithMessageImplementation: "@react-md/core/form/useTextField",
  textHintColorVar: "@react-md/core/theme/cssVars",
  TextIconSpacing: "@react-md/core/icon/TextIconSpacing",
  TextIconSpacingProps: "@react-md/core/icon/TextIconSpacing",
  TextOverflow: "@react-md/core/cssUtils",
  textPrimaryColorVar: "@react-md/core/theme/cssVars",
  textSecondaryColorVar: "@react-md/core/theme/cssVars",
  TextTransform: "@react-md/core/cssUtils",
  ThemeColor: "@react-md/core/cssUtils",
  ThemeColors: "@react-md/core/theme/ThemeProvider",
  ThemeContext: "@react-md/core/theme/ThemeProvider",
  ThemeProvider: "@react-md/core/theme/ThemeProvider",
  ThemeProviderProps: "@react-md/core/theme/ThemeProvider",
  ThemeTextColors: "@react-md/core/theme/ThemeProvider",
  throttle: "@react-md/core/utils/throttle",
  ThrottledFunction: "@react-md/core/types",
  ThumbOffsetsOptions: "@react-md/core/form/sliderUtils",
  Toast: "@react-md/core/snackbar/Toast",
  toast: "@react-md/core/snackbar/toastStyles",
  ToastActionButton: "@react-md/core/snackbar/ToastActionButton",
  ToastActionButtonProps: "@react-md/core/snackbar/ToastActionButton",
  ToastCallback: "@react-md/core/snackbar/ToastManager",
  ToastClassNameOptions: "@react-md/core/snackbar/toastStyles",
  ToastCloseButton: "@react-md/core/snackbar/ToastCloseButton",
  ToastCloseButtonProps: "@react-md/core/snackbar/ToastCloseButton",
  ToastContent: "@react-md/core/snackbar/ToastContent",
  toastContent: "@react-md/core/snackbar/toastContentStyles",
  ToastContentClassNameOptions: "@react-md/core/snackbar/toastContentStyles",
  ToastContentProps: "@react-md/core/snackbar/ToastContent",
  ToastDuplicateBehavior: "@react-md/core/snackbar/ToastManager",
  ToastManager: "@react-md/core/snackbar/ToastManager",
  toastManager: "@react-md/core/snackbar/ToastManager",
  ToastManagerProvider: "@react-md/core/snackbar/ToastManagerProvider",
  ToastManagerProviderProps: "@react-md/core/snackbar/ToastManagerProvider",
  ToastMeta: "@react-md/core/snackbar/ToastManager",
  ToastPriority: "@react-md/core/snackbar/ToastManager",
  ToastProps: "@react-md/core/snackbar/Toast",
  ToastQueue: "@react-md/core/snackbar/ToastManager",
  ToastRendererProps: "@react-md/core/snackbar/DefaultToastRenderer",
  ToastVisibilityTimers: "@react-md/core/snackbar/ToastManager",
  ToggleImplementation: "@react-md/core/useToggle",
  Tooltip: "@react-md/core/tooltip/Tooltip",
  tooltip: "@react-md/core/tooltip/styles",
  TOOLTIP_SPACING_VAR: "@react-md/core/tooltip/constants",
  TooltipClassNameOptions: "@react-md/core/tooltip/styles",
  TooltipHoverModeContext: "@react-md/core/tooltip/TooltipHoverModeProvider",
  TooltipHoverModeProvider: "@react-md/core/tooltip/TooltipHoverModeProvider",
  TooltipHoverModeProviderProps:
    "@react-md/core/tooltip/TooltipHoverModeProvider",
  TooltipImplementation: "@react-md/core/tooltip/useTooltip",
  TooltipOptions: "@react-md/core/tooltip/useTooltip",
  TooltippedButton: "@react-md/core/button/TooltippedButton",
  TooltippedButtonProps: "@react-md/core/button/TooltippedButton",
  TooltippedElementEventHandlers: "@react-md/core/tooltip/useTooltip",
  TooltipPositionHookOptions: "@react-md/core/tooltip/useTooltipPosition",
  TooltipPositionHookReturnValue: "@react-md/core/tooltip/useTooltipPosition",
  TooltipPositioningOptions: "@react-md/core/tooltip/useTooltip",
  TooltipProps: "@react-md/core/tooltip/Tooltip",
  TooManyFilesError: "@react-md/core/files/validation",
  TOP_CENTER_ANCHOR: "@react-md/core/positioning/constants",
  TOP_INNER_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  TOP_INNER_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  TOP_LEFT_ANCHOR: "@react-md/core/positioning/constants",
  TOP_RIGHT_ANCHOR: "@react-md/core/positioning/constants",
  toSearchQuery: "@react-md/core/searching/toSearchQuery",
  TransformOriginOptions: "@react-md/core/positioning/utils",
  TRANSITION_CONFIG: "@react-md/core/transition/config",
  TransitionActions: "@react-md/core/transition/types",
  TransitionCallbacks: "@react-md/core/transition/types",
  TransitionClassNamesOptions: "@react-md/core/transition/utils",
  TransitionConfig: "@react-md/core/transition/config",
  TransitionEnterHandler: "@react-md/core/transition/types",
  TransitionExitHandler: "@react-md/core/transition/types",
  TransitionHookOptions: "@react-md/core/transition/types",
  TransitionHookReturnValue: "@react-md/core/transition/types",
  TransitionOptions: "@react-md/core/transition/types",
  TransitionScrollCallback: "@react-md/core/positioning/useFixedPositioning",
  TransitionStage: "@react-md/core/transition/types",
  TransitionState: "@react-md/core/transition/types",
  TransitionTimeout: "@react-md/core/transition/types",
  TransitionTimeoutObject: "@react-md/core/transition/types",
  TransitionTimeoutOptions: "@react-md/core/transition/utils",
  Tree: "@react-md/core/tree/Tree",
  tree: "@react-md/core/tree/styles",
  TreeClassNameOptions: "@react-md/core/tree/styles",
  TreeContext: "@react-md/core/tree/TreeProvider",
  TreeData: "@react-md/core/tree/types",
  TreeDefaultIds: "@react-md/core/tree/types",
  TreeExpansion: "@react-md/core/tree/useTreeExpansion",
  TreeExpansionMode: "@react-md/core/tree/TreeProvider",
  TreeGroup: "@react-md/core/tree/TreeGroup",
  treeGroup: "@react-md/core/tree/styles",
  TreeGroupClassNameOptions: "@react-md/core/tree/styles",
  TreeGroupProps: "@react-md/core/tree/TreeGroup",
  TreeHookOptions: "@react-md/core/tree/useTree",
  TreeHTMLAttributes: "@react-md/core/tree/Tree",
  TreeImplementation: "@react-md/core/tree/useTree",
  TreeItem: "@react-md/core/tree/TreeItem",
  treeItem: "@react-md/core/tree/styles",
  TreeItemChildIds: "@react-md/core/tree/useTreeItems",
  TreeItemClassNameOptions: "@react-md/core/tree/styles",
  treeItemContent: "@react-md/core/tree/styles",
  TreeItemContentClassNameOptions: "@react-md/core/tree/styles",
  TreeItemExpander: "@react-md/core/tree/TreeItemExpander",
  TreeItemExpanderProps: "@react-md/core/tree/TreeItemExpander",
  TreeItemIdSet: "@react-md/core/tree/types",
  treeItemMedia: "@react-md/core/tree/styles",
  TreeItemMediaClassNameOptions: "@react-md/core/tree/styles",
  TreeItemMetadataLookup: "@react-md/core/tree/TreeProvider",
  TreeItemNode: "@react-md/core/tree/types",
  TreeItemOptions: "@react-md/core/tree/useTreeItems",
  TreeItemProps: "@react-md/core/tree/TreeItem",
  TreeItemRendererProps: "@react-md/core/tree/types",
  TreeItems: "@react-md/core/tree/useTreeItems",
  TreeItemSorter: "@react-md/core/tree/types",
  TreeProps: "@react-md/core/tree/Tree",
  TreeProvider: "@react-md/core/tree/TreeProvider",
  TreeProviderProps: "@react-md/core/tree/TreeProvider",
  TreeSelection: "@react-md/core/tree/useTreeSelection",
  triggerManualChangeEvent: "@react-md/core/form/utils",
  tryToSubmitRelatedForm: "@react-md/core/form/utils",
  Typography: "@react-md/core/typography/Typography",
  typography: "@react-md/core/typography/typographyStyles",
  TypographyClassNameOptions: "@react-md/core/typography/typographyStyles",
  TypographyHTMLElement: "@react-md/core/typography/Typography",
  TypographyProps: "@react-md/core/typography/Typography",
  TypographyType: "@react-md/core/typography/typographyStyles",
  UncontrolledDraggableOptions: "@react-md/core/draggable/useDraggable",
  UncontrolledHoverModeImplementation: "@react-md/core/hoverMode/useHoverMode",
  UncontrolledHoverModeOptions: "@react-md/core/hoverMode/useHoverMode",
  updateDragPosition: "@react-md/core/draggable/utils",
  updateRipplesState: "@react-md/core/interaction/utils",
  UpdateTooltipPosition: "@react-md/core/tooltip/useTooltipPosition",
  useActiveHeadingId: "@react-md/core/navigation/useActiveHeadingId",
  useAddToast: "@react-md/core/snackbar/ToastManagerProvider",
  useAppSize: "@react-md/core/media-queries/AppSizeProvider",
  useAsyncFunction: "@react-md/core/useAsyncFunction",
  useAutocomplete: "@react-md/core/autocomplete/useAutocomplete",
  useCarousel: "@react-md/core/transition/useCarousel",
  useCheckboxGroup: "@react-md/core/form/useCheckboxGroup",
  useCollapseTransition: "@react-md/core/transition/useCollapseTransition",
  useColorScheme: "@react-md/core/theme/useColorScheme",
  useColorSchemeMetaTag: "@react-md/core/theme/useColorSchemeMetaTag",
  useColorSchemeProvider: "@react-md/core/theme/useColorSchemeProvider",
  useCombobox: "@react-md/core/form/useCombobox",
  useContextMenu: "@react-md/core/menu/useContextMenu",
  useCrossFadeTransition: "@react-md/core/transition/useCrossFadeTransition",
  useCSSTransition: "@react-md/core/transition/useCSSTransition",
  useCSSVariables: "@react-md/core/theme/useCSSVariables",
  useCurrentToastActions: "@react-md/core/snackbar/useCurrentToastActions",
  useDebouncedFunction: "@react-md/core/useDebouncedFunction",
  useDir: "@react-md/core/typography/WritingDirectionProvider",
  useDraggable: "@react-md/core/draggable/useDraggable",
  useDropzone: "@react-md/core/useDropzone",
  useEditableCombobox: "@react-md/core/form/useEditableCombobox",
  useElementInteraction: "@react-md/core/interaction/useElementInteraction",
  useElementSize: "@react-md/core/useElementSize",
  useEnsuredId: "@react-md/core/useEnsuredId",
  useEnsuredRef: "@react-md/core/useEnsuredRef",
  useEnsuredState: "@react-md/core/useEnsuredState",
  useExpandableLayout: "@react-md/core/layout/useExpandableLayout",
  useExpansionList: "@react-md/core/expansion-panel/useExpansionList",
  useExpansionPanels: "@react-md/core/expansion-panel/useExpansionPanels",
  useFileUpload: "@react-md/core/files/useFileUpload",
  useFixedPositioning: "@react-md/core/positioning/useFixedPositioning",
  useFocusContainer: "@react-md/core/focus/useFocusContainer",
  useFormReset: "@react-md/core/form/useFormReset",
  useFuzzyMatch: "@react-md/core/searching/useFuzzyMatch",
  useHigherContrastChildren:
    "@react-md/core/interaction/useHigherContrastChildren",
  useHorizontalLayoutTransition:
    "@react-md/core/layout/useHorizontalLayoutTransition",
  useHoverMode: "@react-md/core/hoverMode/useHoverMode",
  useHoverModeProvider: "@react-md/core/hoverMode/useHoverModeProvider",
  useHtmlClassName: "@react-md/core/useHtmlClassName",
  useIntersectionObserver: "@react-md/core/useIntersectionObserver",
  useIsomorphicLayoutEffect: "@react-md/core/useIsomorphicLayoutEffect",
  useKeyboardMovementContext:
    "@react-md/core/movement/useKeyboardMovementProvider",
  useKeyboardMovementProvider:
    "@react-md/core/movement/useKeyboardMovementProvider",
  useLayoutAppBarHeight: "@react-md/core/layout/useLayoutAppBarHeight",
  useLayoutTree: "@react-md/core/layout/useLayoutTree",
  useLayoutWindowSplitter: "@react-md/core/layout/useLayoutWindowSplitter",
  useListboxContext: "@react-md/core/form/ListboxProvider",
  useMainTabIndex: "@react-md/core/layout/useMainTabIndex",
  useMaxTabPanelHeight: "@react-md/core/tabs/useMaxTabPanelHeight",
  useMaxWidthTransition: "@react-md/core/transition/useMaxWidthTransition",
  useMediaQuery: "@react-md/core/media-queries/useMediaQuery",
  useMenuBarContext: "@react-md/core/menu/useMenuBarProvider",
  useMenuBarProvider: "@react-md/core/menu/useMenuBarProvider",
  useMenuConfiguration: "@react-md/core/menu/MenuConfigurationProvider",
  useMenuVisibility: "@react-md/core/menu/MenuVisibilityProvider",
  useMutationObserver: "@react-md/core/useMutationObserver",
  useNavigationExpansion: "@react-md/core/navigation/useNavigationExpansion",
  useNestedDialogContext: "@react-md/core/dialog/NestedDialogProvider",
  useNumberField: "@react-md/core/form/useNumberField",
  useOrientation: "@react-md/core/useOrientation",
  usePageInactive: "@react-md/core/usePageInactive",
  usePortalContainer: "@react-md/core/portal/PortalContainerProvider",
  usePrefersDarkTheme: "@react-md/core/theme/usePrefersDarkTheme",
  useRadioGroup: "@react-md/core/form/useRadioGroup",
  UserAgentAutocompleteProps: "@react-md/core/form/types",
  useRangeSlider: "@react-md/core/form/useRangeSlider",
  useReadonlySet: "@react-md/core/useReadonlySet",
  useRemoveToast: "@react-md/core/snackbar/ToastManagerProvider",
  useResizableLayout: "@react-md/core/layout/useResizableLayout",
  useResizeListener: "@react-md/core/useResizeListener",
  useResizeObserver: "@react-md/core/useResizeObserver",
  useResizingTextArea: "@react-md/core/form/useResizingTextArea",
  UserInteractionMode: "@react-md/core/interaction/UserInteractionModeProvider",
  UserInteractionModeProvider:
    "@react-md/core/interaction/UserInteractionModeProvider",
  UserInteractionModeProviderProps:
    "@react-md/core/interaction/UserInteractionModeProvider",
  useScaleTransition: "@react-md/core/transition/useScaleTransition",
  useScrollLock: "@react-md/core/scroll/useScrollLock",
  useSelectCombobox: "@react-md/core/form/useSelectCombobox",
  useSkeletonPlaceholder: "@react-md/core/transition/useSkeletonPlaceholder",
  useSlider: "@react-md/core/form/useSlider",
  useSliderDraggable: "@react-md/core/form/useSliderDraggable",
  useSlideTransition: "@react-md/core/transition/useSlideTransition",
  useSsr: "@react-md/core/SsrProvider",
  UseStateInitializer: "@react-md/core/types",
  UseStateObject: "@react-md/core/types",
  UseStateSetter: "@react-md/core/types",
  useStickyTableSection: "@react-md/core/table/useStickyTableSection",
  useStorage: "@react-md/core/storage/useStorage",
  useTableConfig: "@react-md/core/table/TableConfigurationProvider",
  useTableContainer: "@react-md/core/table/TableContainerProvider",
  useTableOfContentsHeadings:
    "@react-md/core/navigation/useTableOfContentsHeadings",
  useTableSectionConfig: "@react-md/core/table/useTableSectionConfig",
  useTabList: "@react-md/core/tabs/useTabList",
  useTabs: "@react-md/core/tabs/useTabs",
  useTemporaryLayout: "@react-md/core/layout/useTemporaryLayout",
  useTextField: "@react-md/core/form/useTextField",
  useTextFieldContainerAddons:
    "@react-md/core/form/useTextFieldContainerAddons",
  useTheme: "@react-md/core/theme/ThemeProvider",
  useThrottledFunction: "@react-md/core/useThrottledFunction",
  useToastManager: "@react-md/core/snackbar/ToastManagerProvider",
  useToastQueue: "@react-md/core/snackbar/ToastManagerProvider",
  useToggle: "@react-md/core/useToggle",
  useTooltip: "@react-md/core/tooltip/useTooltip",
  useTooltipHoverMode: "@react-md/core/tooltip/TooltipHoverModeProvider",
  useTooltipPosition: "@react-md/core/tooltip/useTooltipPosition",
  useTransition: "@react-md/core/transition/useTransition",
  useTree: "@react-md/core/tree/useTree",
  useTreeContext: "@react-md/core/tree/TreeProvider",
  useTreeExpansion: "@react-md/core/tree/useTreeExpansion",
  useTreeItems: "@react-md/core/tree/useTreeItems",
  useTreeMovement: "@react-md/core/tree/useTreeMovement",
  useTreeSelection: "@react-md/core/tree/useTreeSelection",
  useUnmounted: "@react-md/core/useUnmounted",
  useUserInteractionMode:
    "@react-md/core/interaction/UserInteractionModeProvider",
  useWindowSize: "@react-md/core/useWindowSize",
  useWindowSplitter: "@react-md/core/window-splitter/useWindowSplitter",
  ValidatedFilesResult: "@react-md/core/files/validation",
  ValidatedNumberFieldImplementation: "@react-md/core/form/useNumberField",
  ValidatedTextFieldImplementation: "@react-md/core/form/useTextField",
  validateFiles: "@react-md/core/files/validation",
  VerticalPosition: "@react-md/core/positioning/types",
  VirtualFocusableIndexOptions: "@react-md/core/movement/utils",
  wait: "@react-md/core/utils/wait",
  warningColorVar: "@react-md/core/theme/cssVars",
  white: "@react-md/core/theme/colors",
  WhitespaceFilter: "@react-md/core/searching/types",
  WindowSizeOptions: "@react-md/core/useWindowSize",
  WindowSplitter: "@react-md/core/window-splitter/WindowSplitter",
  windowSplitter: "@react-md/core/window-splitter/styles",
  WindowSplitterClassNameOptions: "@react-md/core/window-splitter/styles",
  WindowSplitterImplementation:
    "@react-md/core/window-splitter/useWindowSplitter",
  WindowSplitterOptions: "@react-md/core/window-splitter/useWindowSplitter",
  WindowSplitterProps: "@react-md/core/window-splitter/WindowSplitter",
  WindowSplitterWidgetProps: "@react-md/core/window-splitter/useWindowSplitter",
  withinRange: "@react-md/core/utils/withinRange",
  WithinRangeOptions: "@react-md/core/utils/withinRange",
  WritingDirectionContext: "@react-md/core/typography/WritingDirectionProvider",
  WritingDirectionProvider:
    "@react-md/core/typography/WritingDirectionProvider",
  WritingDirectionProviderProps:
    "@react-md/core/typography/WritingDirectionProvider",
  XCoordConfig: "@react-md/core/positioning/utils",
  YCoordConfig: "@react-md/core/positioning/utils",
  yellow50: "@react-md/core/theme/colors",
  yellow100: "@react-md/core/theme/colors",
  yellow200: "@react-md/core/theme/colors",
  yellow300: "@react-md/core/theme/colors",
  yellow400: "@react-md/core/theme/colors",
  yellow500: "@react-md/core/theme/colors",
  yellow600: "@react-md/core/theme/colors",
  yellow700: "@react-md/core/theme/colors",
  yellow800: "@react-md/core/theme/colors",
  yellow900: "@react-md/core/theme/colors",
  yellowAccent100: "@react-md/core/theme/colors",
  yellowAccent200: "@react-md/core/theme/colors",
  yellowAccent400: "@react-md/core/theme/colors",
  yellowAccent700: "@react-md/core/theme/colors",
};
