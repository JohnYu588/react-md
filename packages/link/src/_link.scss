@use "sass:map";
@use "@react-md/core";
@use "@react-md/icon";

$disable-skip-to-main: false !default;

$transition-duration: core.$linear-duration !default;
$color: core.$blue-500 !default;
$visited-color: core.$blue-600 !default;
$hover-color: core.$blue-400 !default;

$skip-to-main-z-index: 10000 !default;
$skip-to-main-styles: (
  color: core.get-theme-var(on-primary-color),
  left: 50%,
  padding: 0.25rem 1rem,
  top: 0.25rem,
  transform: translateX(-50%),
  z-index: $skip-to-main-z-index,
) !default;
$skip-to-main-active-styles: (
  outline: 0.25rem dashed #000,
) !default;

$var-lookup: (
  color: (
    var: --rmd-link-color,
    value: $color,
  ),
  visited-color: (
    var: --rmd-link-visited-color,
    value: $visited-color,
  ),
  hover-color: (
    var: --rmd-link-hover-color,
    value: $hover-color,
  ),
);

@function get-var($name, $fallback: null) {
  $found: core.validate($var-lookup, $name, "link var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(core.validate($var-lookup, $name, "link var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @include set-var(color, $light-theme-color);
}

@mixin use-dark-theme {
  @include set-var(color, $dark-theme-color);
}

@mixin style($position) {
  $property: "border-#{$position}";

  #{$property}: get-var(size) inset get-var(color);
}

@mixin styles {
  .rmd-link {
    // can't use the normal @include core.interaction-surface since links are
    // rendered inline and the `::before`/`::after` pseudo selectors only work
    // nicely with block-like elements
    @include core.keyboard-only {
      &:focus {
        @include core.set-interaction-var(outline-color, core.$outline-color);
      }
    }
    @include core.use-interaction-outline;
    @include icon.use-var(gap, spacing);
    @include use-var(color);

    align-items: center;
    display: inline-flex;
    transition: color $transition-duration;

    &:visited {
      @include set-var(color, get-var(visited-color));
    }

    &:hover {
      @include set-var(color, get-var(hover-color));
    }

    @if not $disable-skip-to-main {
      &--skip {
        @include core.map-to-styles(
          map.remove(
            core.$headline-6-styles,
            font-size,
            font-weight,
            letter-spacing
          )
        );
        @include core.sr-only;
      }

      &--skip-styled {
        @include core.map-to-styles($skip-to-main-styles);
        @include core.keyboard-only {
          @include core.map-to-styles($skip-to-main-active-styles);
        }
      }
    }
  }
}
