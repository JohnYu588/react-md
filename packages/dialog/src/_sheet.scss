@use "sass:map";
@use "@react-md/core";
@use "dialog";

$disable-position-left: false !default;
$disable-position-right: false !default;
$disable-position-bottom: false !default;
$disable-position-top: false !default;

$elevation: 2 !default;
$raised-elevation: 16 !default;

$enter-duration: core.$enter-duration !default;
$enter-timing-function: core.$deceleration-timing-function !default;
$leave-duration: core.$leave-duration !default;
$leave-timing-function: core.$acceleration-timing-function !default;

$z-index: 5 !default;
$raised-z-index: core.$temporary-element-z-index !default;

$static-width: 16rem !default;
$touch-margin: 3.5rem !default;
$touch-width: calc(100vw - #{$touch-margin}) !default;

$max-height: 100% !default;
$touch-max-height: calc(100% - #{$touch-margin}) !default;
$recommended-min-height: 3.5rem !default;
$recommended-max-height: 50% !default;

$var-lookup: (
  height: (
    var: --rmd-sheet-height,
    value: null,
  ),
  width: (
    var: --rmd-sheet-width,
    value: null,
  ),
  max-height: (
    var: --rmd-sheet-max-height,
    value: null,
  ),
  touch-width: (
    var: --rmd-sheet-touch-width,
    value: $touch-width,
  ),
  touch-max-height: (
    var: --rmd-sheet-touch-max-height,
    value: $touch-max-height,
  ),
  static-width: (
    var: --rmd-sheet-static-width,
    value: $static-width,
  ),
  transform-offscreen: (
    var: --rmd-sheet-transform-offscreen,
    value: null,
  ),
  z-index: (
    var: --rmd-sheet-z-index,
    value: $z-index,
  ),
);

@function get-var($name, $fallback: null) {
  $found: core.validate($var-lookup, $name, "sheet var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(core.validate($var-lookup, $name, "sheet var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin styles {
  .rmd-sheet {
    @include core.box-shadow($elevation);
    @include use-var(height);
    @include use-var(max-height);
    @include use-var(width);
    @include use-var(z-index);

    overflow: auto;
    position: fixed;

    @if not $disable-position-left or not $disable-position-right {
      &--horizontal {
        bottom: 0;
        top: 0;
      }
    }

    @if not $disable-position-bottom or not $disable-position-top {
      &--vertical {
        left: 0;
        right: 0;
      }
    }

    &--raised {
      @include set-var(z-index, $raised-z-index);
      @include core.box-shadow($raised-elevation);
    }

    @if not $disable-position-left {
      &--left {
        @include core.auto-rtl(left, 0) {
          @include set-var(transform-offscreen, translate3d(100%, 0, 0));
        }
        @include set-var(transform-offscreen, translate3d(-100%, 0, 0));
      }
    }

    @if not $disable-position-right {
      &--right {
        @include core.auto-rtl(right, 0) {
          @include set-var(transform-offscreen, translate3d(-100%, 0, 0));
        }
        @include set-var(transform-offscreen, translate3d(100%, 0, 0));
      }
    }

    @if not $disable-position-bottom {
      &--bottom {
        @include set-var(transform-offscreen, translate3d(0, 100%, 0));

        bottom: 0;
      }
    }

    @if not $disable-position-top {
      &--top {
        @include set-var(transform-offscreen, translate3d(0, -100%, 0));

        bottom: 0;
      }
    }

    &--touch-width {
      @include set-var(width, get-var(touch-width));
    }

    &--static-width {
      @include set-var(width, get-var(static-width));
    }

    &--media-width {
      @include core.tablet-media {
        @include set-var(width, get-var(static-width));
      }

      @include set-var(width, get-var(touch-width));
    }

    &--viewport-height {
      @include set-var(max-height, $max-height);
    }

    &--touchable-height {
      @include set-var(max-height, get-var(touch-max-height));
    }

    &--recommended-height {
      max-height: $recommended-max-height;
      min-height: $recommended-min-height;
    }

    &--offscreen {
      @include use-var(transform, transform-offscreen);
    }

    &--hidden {
      box-shadow: none;
    }

    &--visible {
      transform: translate3d(0, 0, 0);
    }

    &--enter {
      transition: transform $enter-duration $enter-timing-function;
    }

    &--exit {
      transition: transform $leave-duration $leave-timing-function;
    }
  }
}
