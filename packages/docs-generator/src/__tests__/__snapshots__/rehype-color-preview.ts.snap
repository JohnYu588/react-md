// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rehypeColorPreview should render inline color elements within paragraphs 1`] = `
"import {jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    code: "code",
    p: "p",
    span: "span",
    ...props.components
  };
  return _jsxs(_components.p, {
    children: ["The color ", _jsx(_components.span, {
      style: {
        "--color": "#000"
      },
      className: "color-preview color-preview--text",
      children: _jsx(_components.code, {
        children: "#000"
      })
    }), " should display inline as well as ", _jsx(_components.span, {
      style: {
        "--color": "#fafafa"
      },
      className: "color-preview color-preview--text",
      children: _jsx(_components.code, {
        children: "#fafafa"
      })
    }), " since it is a 6 digit hex."]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`rehypeColorPreview should render inline colors in other places 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
function _createMdxContent(props) {
  const _components = {
    code: "code",
    h1: "h1",
    p: "p",
    span: "span",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsxs(_components.h1, {
      children: ["Heading that should include ", _jsx(_components.span, {
        style: {
          "--color": "#000"
        },
        className: "color-preview color-preview--text",
        children: _jsx(_components.code, {
          children: "#000"
        })
      })]
    }), "\\n", _jsxs(_components.p, {
      children: ["Some paragraph ", _jsx(_components.span, {
        style: {
          "--color": "#333"
        },
        className: "color-preview color-preview--text",
        children: _jsx(_components.code, {
          children: "#333"
        })
      }), "."]
    }), "\\n", _jsxs(_components.p, {
      children: ["| a | b | c |\\n| ", _jsx(_components.span, {
        style: {
          "--color": "#000"
        },
        className: "color-preview color-preview--text",
        children: _jsx(_components.code, {
          children: "#000"
        })
      }), " | ", _jsx(_components.span, {
        style: {
          "--color": "#030303"
        },
        className: "color-preview color-preview--text",
        children: _jsx(_components.code, {
          children: "#030303"
        })
      }), " | last |"]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;
