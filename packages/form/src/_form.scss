@use "sass:map";
@use "@react-md/core";
@use "@react-md/button";
@use "@react-md/icon";

$disable-fieldset: false !default;
$disable-message: false !default;
$disable-label: false !default;
$disable-floating-label: false !default;
$disable-file-input: false !default;
$disable-text-field: false !default;
$disable-textarea: false !default;
$disable-password: $disable-text-field !default;
$disable-text-field-addon: $disable-text-field and $disable-password and
  $disable-textarea !default;
$disable-native-select: false !default;
$disable-native-select-icon: false !default;
$disable-native-select-multiple: false !default;

// Note: enabling the filled theme forces the underlined theme to be used since it depends on the same styles
$disable-text-field-filled-theme: false !default;
$disable-text-field-outlined-theme: false !default;
$disable-text-field-underlined-theme: false !default;
$disable-text-field-counter: false !default;
$disable-text-field-underline-left: false !default;
$disable-text-field-underline-center: false !default;
$disable-text-field-underline-right: false !default;

$disable-textarea-resizing-rows: false !default;
$disable-textarea-resizing-mask: $disable-textarea-resizing-rows !default;
$disable-textarea-resize-horizontal: false !default;
$disable-textarea-resize-vertical: false !default;

$error-color: core.get-theme-var(error-color) !default;
$active-color: core.get-theme-var(secondary-color) !default;
$focused-color: core.$outline-color !default;
$disabled-color: core.get-theme-var(text-disabled-color) !default;

$label-font-size: 1em !default;
$label-typography: map.merge(
  core.$body-1-styles,
  (
    font-size: $label-font-size,
  )
) !default;
$label-floating-top: 1rem !default;
$label-floating-top-dense: 0.9rem !default;
$label-floating-font-size: 0.75em !default;
$label-floating-padding: 0.25rem !default;

$message-typography-styles: map.merge(
  core.$body-2-styles,
  (
    font-size: 0.75rem,
  )
) !default;
$message-counter-spacing: icon.$spacing !default;
$message-margin-top: 0.5rem !default;
$message-margin-bottom: 1rem !default;
$message-min-height: 2rem !default;

$text-field-typography: map.merge(
  core.$base-font-styles,
  map.merge(
    core.$body-1-styles,
    (
      font-size: 1em,
    )
  )
) !default;
$text-field-height: 3rem !default;
$text-field-dense-height: 2.5rem !default;
$text-field-label-height: 3.5rem !default;
$text-field-label-dense-height: 3.25rem !default;
$text-field-spacing: icon.$spacing !default;
$text-field-border-radius: 0.25rem !default;
$text-field-border-width: 1px !default;
$text-field-border-width-active: 2px !default;
$text-field-filled-padding: 0.75rem !default;
$text-field-outlined-padding: 1rem !default;
$text-field-underlined-padding: null !default;
// this is the default height of the label with line-height
$text-field-underlined-label-padding-top: 1.5rem !default;
$text-field-underlined-label-left-offset: icon.$spacing !default;

$text-field-addon-margin: icon.$spacing !default;

$text-field-light-border-color: rgba(#000, 0.12) !default;
$text-field-dark-border-color: rgba(#fff, 0.5) !default;
$text-field-border-color: if(
  core.$color-scheme == dark,
  $text-field-dark-border-color,
  $text-field-light-border-color
) !default;

$text-field-light-hover-border-color: rgba(#000, 0.87) !default;
$text-field-dark-hover-border-color: rgba(#fff, 0.87) !default;
$text-field-hover-border-color: if(
  core.$color-scheme == dark,
  $text-field-dark-hover-border-color,
  $text-field-light-hover-border-color
) !default;

$text-field-light-filled-background-color: core.$grey-100 !default;
$text-field-dark-filled-background-color: #424242 !default;
// $text-field-dark-filled-background-color: core.$grey-700 !default;
$text-field-filled-background-color: if(
  core.$color-scheme == dark,
  $text-field-dark-filled-background-color,
  $text-field-light-filled-background-color
) !default;

$textarea-addon-top: 1rem !default;
$textarea-vertical-padding: 0.75rem !default;

$password-visibility-toggle-spacing: 0.25rem !default;

$native-select-addon-top: 1rem !default;
$native-select-multiple-padding: 0.75rem !default;

$var-lookup: (
  error-color: (
    var: --rmd-form-error-color,
    value: $error-color,
  ),
  active-color: (
    var: --rmd-form-active-color,
    value: $active-color,
  ),
  focused-color: (
    var: --rmd-form-focused-color,
    value: $focused-color,
  ),
  disabled-color: (
    var: --rmd-form-disabled-color,
    value: $disabled-color,
  ),
  floating-top: (
    var: --rmd-form-floating-top,
    value: $label-floating-top,
  ),
  label-left-offset: (
    var: --rmd-form-label-left-offset,
    value: 0px,
  ),
  label-top-offset: (
    var: --rmd-form-label-top-offset,
    value: 0px,
  ),
  label-active-padding: (
    var: --rmd-form-label-active-padding,
    value: 0px,
  ),
  label-active-background-color: (
    var: --rmd-form-label-active-background-color,
    value: transparent,
  ),
  text-height: (
    var: --rmd-form-text-height,
    value: $text-field-height,
  ),
  text-padding-left: (
    var: --rmd-form-text-padding-left,
    value: 0px,
  ),
  text-padding-right: (
    var: --rmd-form-text-padding-right,
    value: 0px,
  ),
  text-padding-top: (
    var: --rmd-form-text-padding-top,
    value: 0px,
  ),
  text-border-color: (
    var: --rmd-form-text-border-color,
    value: $text-field-border-color,
  ),
  text-hover-border-color: (
    var: --rmd-form-text-hover-border-color,
    value: $text-field-hover-border-color,
  ),
  text-filled-color: (
    var: --rmd-form-text-filled-color,
    value: $text-field-filled-background-color,
  ),
  textarea-height: (
    var: --rmd-form-textarea-height,
    value: 0px,
  ),
  textarea-padding: (
    var: --rmd-form-textarea-padding,
    value: $textarea-vertical-padding,
  ),
  addon-top: (
    var: --rmd-form-addon-top,
    value: auto,
  ),
  addon-margin-top: (
    var: --rmd-form-addon-margin-top,
    value: 0px,
  ),
);

@function get-var($name, $fallback: null) {
  $found: core.validate($var-lookup, $name, "form var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(core.validate($var-lookup, $name, "form var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @include set-var(text-border-color, $text-field-light-border-color);
  @include set-var(
    text-hover-border-color,
    $text-field-light-hover-border-color
  );
  @include set-var(
    text-filled-color,
    $text-field-light-filled-background-color
  );
}

@mixin use-dark-theme {
  @include set-var(text-border-color, $text-field-dark-border-color);
  @include set-var(
    text-hover-border-color,
    $text-field-dark-hover-border-color
  );
  @include set-var(text-filled-color, $text-field-dark-filled-background-color);
}

@mixin file-input-styles {
  .rmd-file-input {
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    width: 0.1px;
    z-index: -1;
  }
}

@mixin form-message-styles {
  .rmd-form-message-container {
    display: flex;
    flex-direction: column;
  }

  .rmd-form-message {
    @include core.map-to-styles($message-typography-styles);
    @include core.use-theme-var(color, text-secondary-color);

    display: flex;
    margin: $message-margin-top 0 $message-margin-bottom;
    min-height: $message-min-height;

    @if not $disable-text-field-filled-theme and $text-field-filled-padding {
      &--filled {
        padding-left: $text-field-filled-padding;
        padding-right: $text-field-filled-padding;
      }
    }

    @if not $disable-text-field-outlined-theme and $text-field-outlined-padding
    {
      &--outline {
        padding-left: $text-field-outlined-padding;
        padding-right: $text-field-outlined-padding;
      }
    }

    @if not
      $disable-text-field-underlined-theme and
      $text-field-underlined-padding
    {
      &--underline {
        padding-left: $text-field-underlined-padding;
        padding-right: $text-field-underlined-padding;
      }
    }

    &--error {
      @include use-var(color, error-color);
    }

    &__message {
      margin: 0;
    }

    @if not $disable-text-field-counter {
      &__counter {
        @include core.auto-rtl(margin-left, auto);
        @include core.auto-rtl(padding-left, $message-counter-spacing);

        flex-shrink: 0;
        white-space: nowrap;
      }
    }
  }
}

@mixin label-styles {
  .rmd-label {
    @include core.map-to-styles($label-typography);

    display: inline-flex;
    transition-property: background-color, color, font-size, transform;
    transition-duration: core.$linear-duration;

    &--active {
      @include use-var(focused-color);
    }

    &--error {
      @include use-var(error-color);
    }

    &--disabled {
      @include use-var(disabled-color);
    }

    @if not $disable-floating-label {
      &--floating {
        @include core.rtl {
          left: auto;
          right: 0;
          transform: translate(
            core.negate-var(get-var(text-padding-left)),
            get-var(floating-top)
          );
        }

        left: 0;
        position: absolute;
        top: 0;
        transform: translate(get-var(text-padding-left), get-var(floating-top));
        will-change: font-size, transform;
      }

      &--floating-dense {
        @include set-var(floating-top, $label-floating-top-dense);
      }

      &--floating-inactive {
        @include core.use-theme-var(color, text-secondary-color);
      }

      $floating-active-selector: "&--floating-active";
      @if not
        $disable-text-field or not
        $disable-password or not
        $disable-textarea
      {
        $floating-active-selector: $floating-active-selector +
          ", .rmd-text-field-container:focus-within &--floating" +
          ", .rmd-text-field:not(:placeholder-shown) + &--floating";
      }
      @if not $disable-native-select {
        $floating-active-selector: $floating-active-selector +
          ", .rmd-native-select + &--floating";
      }

      #{$floating-active-selector} {
        @include core.rtl {
          transform: translate(
            core.negate-var(get-var(label-left-offset)),
            get-var(label-top-offset)
          );
        }
        @include use-var(background-color, label-active-background-color);
        @include use-var(padding, label-active-padding);

        font-size: $label-floating-font-size;
        transform: translate(
          get-var(label-left-offset),
          get-var(label-top-offset)
        );
        z-index: 1;
      }
    }
  }
}

@mixin text-field-container-styles {
  .rmd-text-field-container {
    @include use-var(height, text-height);

    align-items: center;
    display: flex;
    position: relative;

    &--inline {
      display: inline-flex;
    }

    &--stretch {
      flex: 1 1 auto;
    }

    &--label {
      @include set-var(text-height, $text-field-label-height);
    }

    &--error {
      @if not $disable-text-field-addon {
        @include icon.set-var(color, get-var(error-color));
      }
      @include set-var(active-color, get-var(error-color));
      @include set-var(focused-color, get-var(error-color));

      @if not
        $disable-text-field-underlined-theme or not
        $disable-text-field-outlined-theme
      {
        @include set-var(text-border-color, get-var(error-color));
        @include set-var(text-hover-border-color, get-var(error-color));
      }
    }

    &--hoverable:hover {
      @include set-var(text-border-color, get-var(text-hover-border-color));
    }

    &--disabled {
      @include icon.set-var(color, get-var(disabled-color));
    }

    @if not $disable-text-field-outlined-theme {
      &--outline {
        @include set-var(text-padding-left, $text-field-outlined-padding);
        @include set-var(text-padding-right, $text-field-outlined-padding);
        @include set-var(
          label-left-offset,
          $text-field-outlined-padding - $label-floating-padding
        );
        @include set-var(label-top-offset, -50%);
        @include set-var(label-active-padding, 0 $label-floating-padding);
        @include set-var(
          label-active-background-color,
          core.get-theme-var(background-color)
        );
        @include use-var(border-color, text-border-color);

        border-radius: $text-field-border-radius;
        border-style: solid;
        border-width: $text-field-border-width;

        &::after {
          @include core.pseudo-element;

          box-shadow: 0
            0
            0
            $text-field-border-width-active
            get-var(focused-color);
          opacity: 0;
          transition: opacity core.$linear-duration;
        }
      }

      &--outline:focus-within::after,
      &--outline-active::after {
        opacity: 1;
      }

      &--outline-left {
        $distance: calc(
          #{icon.get-var(size)} +
            #{$text-field-outlined-padding +
            $text-field-spacing}
        );

        @include set-var(text-padding-left, $distance);
      }

      &--outline-right {
        $distance: calc(#{icon.get-var(size)} + #{$text-field-spacing * 2});

        @include set-var(text-padding-right, $distance);
      }
    }

    @if not $disable-text-field-filled-theme {
      &--filled {
        @include set-var(text-padding-left, $text-field-filled-padding);
        @include set-var(text-padding-right, $text-field-filled-padding);
        @include set-var(label-left-offset, $text-field-filled-padding);
        @include use-var(background-color, text-filled-color);
      }
    }

    // the filled theme uses the same styles as underline
    @if not
      $disable-text-field-underlined-theme or not
      $disable-text-field-filled-theme
    {
      &--underline {
        @include use-var(border-color, text-border-color);

        border-bottom-style: solid;
        border-bottom-width: $text-field-border-width;

        @if $text-field-underlined-padding {
          @include set-var(text-padding-left, $text-field-underlined-padding);
          @include set-var(text-padding-right, $text-field-underlined-padding);
        }

        &::after {
          @include use-var(background-color, focused-color);

          bottom: -$text-field-border-width;
          content: "";
          height: $text-field-border-width-active;
          left: 0;
          position: absolute;
          right: 0;
          transform: scale(0);
          transition: transform
            core.$linear-duration
            core.$linear-timing-function;
          z-index: 1;
        }
      }

      &--underline-labelled {
        @include set-var(
          text-padding-top,
          $text-field-underlined-label-padding-top
        );
        @include set-var(addon-margin-top, $text-field-addon-margin);
      }

      @if not $disable-text-field-underline-left {
        &--underline-left::after {
          transform-origin: left;
        }
      }

      @if not $disable-text-field-underline-center {
        &--underline-center::after {
          transform-origin: center;
        }
      }

      @if not $disable-text-field-underline-right {
        &--underline-right::after {
          transform-origin: right;
        }
      }

      &:focus-within::after,
      &--underline-active::after {
        transform: scale(1);
      }

      @if not $disable-text-field-addon {
        $addon-offset: "#{icon.get-var(size)} + #{$text-field-underlined-label-left-offset * 2}";
        @if $text-field-underlined-padding {
          $addon-offset: "#{$addon-offset} + #{$text-field-underline-padding}";
        }

        &--underline-left-addon {
          @include set-var(text-padding-left, calc(#{$addon-offset}));
        }

        &--underline-right-addon {
          @include set-var(text-padding-right, calc(#{$addon-offset}));
        }
      }
    }
  }
}

@mixin _text-field-base-styles {
  @include core.map-to-styles($text-field-typography);
  @include core.rtl {
    @include use-var(padding-left, text-padding-right);
    @include use-var(padding-right, text-padding-left);
  }
  @include use-var(padding-left, text-padding-left);
  @include use-var(padding-right, text-padding-right);
  @include use-var(padding-top, text-padding-top);

  background-color: transparent;
  border-width: 0;
  color: inherit;
  flex: 1 1 auto;
  height: 100%;
  outline: none;
  width: 100%;

  &[disabled] {
    @include core.use-theme-var(color, text-disabled-color);
  }
}

@mixin text-field-styles {
  .rmd-text-field {
    @include _text-field-base-styles;

    &::placeholder {
      @include core.use-theme-var(color, text-secondary-color);
      // want to gain the same font styles as the input/textarea itself,
      // just apply different colors as needed instead. Can't just do font: inherit
      // since it'll break the styles in firefox.
      font-family: inherit;
      font-size: inherit;
      font-weight: inherit;

      // fix firefox setting opacity to 0.54 by default
      opacity: 1;

      // Note: doesn't look like firefox applies css transitions to placeholder text?
      transition: opacity core.$linear-duration;
    }

    &[disabled]::placeholder {
      color: inherit;
    }

    &--placeholder-hidden:not(:focus)::placeholder {
      opacity: 0;
    }
  }
}

@mixin password-styles {
  .rmd-password {
    &--offset {
      @include set-var(text-padding-right, $password-visibility-toggle-spacing);
    }

    &__input {
      &--offset {
        @include core.auto-rtl(margin-right, button.get-var(icon-size));
      }
    }

    &__toggle {
      @include core.auto-rtl(right, 0);

      position: absolute;
    }
  }
}

@mixin textarea-container-styles {
  .rmd-textarea-container {
    @include set-var(addon-top, $textarea-addon-top);

    height: auto;
    max-width: 100%;
    padding-top: calc(
      #{get-var(text-padding-top)} + #{get-var(textarea-padding)}
    );

    &--cursor:hover {
      // need to add this cursor back since the textarea container adds padding to
      // itself instead of the textarea so it loses this cursor. the container
      // element will still focus the textarea when clicked
      cursor: text;
    }

    @if not
      $disable-text-field-filled-theme or not
      $disable-text-field-underlined-theme
    {
      &--underline-labelled {
        @include set-var(textarea-padding, 0px);
        @include set-var(
          floating-top,
          $text-field-underlined-label-padding-top
        );
      }
    }

    @if not $disable-textarea-resizing-rows {
      &--height {
        height: calc(
          #{get-var(text-padding-top)} +
            #{get-var(textarea-padding)} +
            #{get-var(textarea-height)}
        );
      }

      &--animate {
        transition: height core.$linear-duration core.$linear-timing-function;
      }

      &__inner {
        height: get-var(textarea-height, 100%);
        width: 100%;

        &--animate {
          transition: height core.$linear-duration core.$linear-timing-function;
        }
      }
    }
  }
}

@mixin textarea-styles {
  .rmd-textarea {
    @include set-var(text-padding-top, 0px);
    @include use-var(min-height, text-height);

    height: get-var(textarea-height, 100%);

    @if not $disable-textarea-resize-horizontal {
      &--rh {
        resize: horizontal;
      }
    }

    @if not $disable-textarea-resize-vertical {
      &--rv {
        resize: vertical;
      }
    }

    &--rn {
      overflow: hidden;
      resize: none;
    }

    // only want the textarea to be scrollable if there's a limit on the rows
    // since it'll flash the scrollbar on most OS during the height transition
    &--scrollable {
      overflow: auto;
    }

    @if not $disable-textarea-resizing-mask {
      &--mask {
        height: auto;
        left: 0;
        opacity: 0;
        overflow: hidden;
        pointer-events: none;
        position: absolute;
        right: 0;
        z-index: -1;
      }
    }
  }
}

@mixin native-select-styles {
  @if not $disable-native-select-multiple {
    .rmd-native-select-container {
      @if not $disable-text-field-outlined-theme {
        &--outline {
          @include set-var(text-padding-top, $native-select-multiple-padding);
        }
      }

      &--multi {
        @include set-var(addon-top, $native-select-addon-top);
        @include use-var(min-height, text-height);

        height: auto;
      }

      &--padded {
        padding-top: $native-select-multiple-padding;
      }
    }
  }

  .rmd-native-select {
    @include _text-field-base-styles;

    @if not $disable-native-select-icon {
      &--icon {
        appearance: none;
      }

      &__icon {
        display: inline-flex;
        pointer-events: none;
      }
    }
  }
}

@mixin text-field-addon {
  .rmd-text-field-addon {
    @include icon.use-var(height, size);
    @include icon.use-var(width, size);

    @if not
      $disable-text-field-filled-theme or not
      $disable-text-field-underlined-theme
    {
      @include use-var(margin-top, addon-margin-top);
    }

    position: absolute;

    // Note: Can't use `:first-child` and `:last-child` since
    // password/autocomplete managers might add another element into the
    // `.rmd-text-field-container` which would prevent these styles from being
    // applied
    &--before {
      @include core.auto-rtl(left, get-var(label-left-offset));
    }

    &--after {
      @include core.auto-rtl(right, $text-field-spacing);
    }

    &--presentational {
      pointer-events: none;
    }
  }
}

@mixin styles {
  @if not $disable-fieldset {
    .rmd-fieldset {
      &--unstyled {
        border: 0;
        margin: 0;
        min-width: 0; // just so it can shrink correctly in flex or grid
        padding: 0;
      }
    }
  }

  @if not $disable-label {
    @include label-styles;
  }

  @if not $disable-file-input {
    @include file-input-styles;
  }

  @if not $disable-message {
    @include form-message-styles;
  }

  @if not $disable-text-field or not $disable-password or not $disable-textarea
  {
    @include text-field-container-styles;
  }

  @if not $disable-text-field or not $disable-password or not $disable-textarea
  {
    @include text-field-styles;
  }

  @if not $disable-password {
    @include password-styles;
  }

  @if not $disable-textarea {
    @include textarea-container-styles;
    @include textarea-styles;
  }

  @if not $disable-native-select {
    @include native-select-styles;
  }

  @if not $disable-text-field-addon {
    @include text-field-addon;
  }

  @if not core.$disable-default-system-theme and core.$color-scheme == system {
    @media (prefers-color-scheme: dark) {
      :root {
        @include use-dark-theme;
      }
    }
  }
}
