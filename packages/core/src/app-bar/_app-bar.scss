@use "sass:map";

@use "../utils";
@use "../box/box";
@use "../box-shadows";
@use "../interaction/interaction";
@use "../theme/a11y";
@use "../theme/theme";
@use "../button/button";
@use "../typography/typography";

$disable-everything: false !default;
$disable-fixed: false !default;
$disable-sticky: false !default;
$disable-surface-theme: $disable-everything !default;
$disable-dense-theme: false !default;
$disable-prominent-theme: false !default;
$disable-prominent-dense-theme: false !default;
$disable-scrollbar-offset: false !default;
$disable-static-scrollbar-offset: false !default;
$disable-primary-interaction-colors: interaction.$light-surface-base-background-color
  == interaction.$dark-surface-base-background-color !default;
$disable-secondary-interaction-colors: interaction.$light-surface-base-background-color
  == interaction.$dark-surface-base-background-color !default;

$disable-title: false !default;

$gap: 0.25rem !default;
$height: 3.5rem !default;
$dense-height: 3rem !default;
$prominent-height: $height * 2 !default;
$prominent-dense-height: $dense-height * 2 !default;

$fixed-z-index: 10 !default;
$fixed-elevation: 2 !default;
$fixed-positions: top bottom !default;

$light-theme-surface-background-color: theme.$light-theme-surface-color !default;
$light-theme-surface-color: a11y.contrast-color(
  $light-theme-surface-background-color
) !default;
$dark-theme-surface-background-color: if(
  theme.$disable-dark-elevation,
  theme.$dark-theme-surface-color,
  map.get(theme.$dark-elevation-colors, $fixed-elevation)
) !default;
$dark-theme-surface-color: #fff !default;

$surface-background-color: theme.get-default-color(
  $light-theme-surface-background-color,
  $dark-theme-surface-background-color
) !default;
$surface-color: theme.get-default-color(
  $light-theme-surface-color,
  $dark-theme-surface-color
) !default;

$horizontal-padding: 0.25rem !default;
$vertical-padding: 0 !default;

$keyline: 1rem !default;
$title-keyline: 4.5rem !default;
// 3rem is the icon-button's default size. can't use the variables since it's
// based on font-size now and `em`
$nav-keyline: $title-keyline - $horizontal-padding - $gap - 3rem !default;

$variables: (height, surface-background-color, surface-color);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "app-bar");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "app-bar")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if not $disable-surface-theme {
    @include set-var(
      surface-background-color,
      $light-theme-surface-background-color
    );
    @include set-var(surface-color, $light-theme-surface-color);
  }
}

@mixin use-dark-theme {
  @if not $disable-surface-theme {
    @include set-var(
      surface-background-color,
      $dark-theme-surface-background-color
    );
    @include set-var(surface-color, $dark-theme-surface-color);
  }
}

@mixin dense {
  @include set-var(height, $dense-height);
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(height, $height);
    @include set-var(surface-background-color, $surface-background-color);
    @include set-var(surface-color, $surface-color);
  }
}

@mixin styles($disable-layer: false) {
  @if not $disable-everything {
    @include utils.optional-layer(app-bar, $disable-layer) {
      @include theme.default-system-theme {
        @include use-dark-theme;
      }

      .rmd-app-bar {
        @include use-var(height);
        @include box.set-var(gap, $gap);
        @include box.set-var(padding, $vertical-padding $horizontal-padding);

        // since app bars can appear a lot in full page dialogs, setting these flex
        // values allows it be be a direct replacement of the `DialogHeader`
        // component without all the offsets and additional styles needed for fixed
        // app bars.
        flex: 0 0 auto;

        @if not $disable-fixed or not $disable-sticky {
          &--fixed {
            left: 0;
            position: fixed;
            // Note: right and width were added to support the main navigation
            // behavior with toggleable full-height navigation
            right: 0;
            width: auto;
            z-index: $fixed-z-index;
          }

          @if $fixed-elevation and $fixed-elevation != 0 {
            &--elevated {
              @include box-shadows.box-shadow(
                $fixed-elevation,
                $disable-colors: true
              );
            }
          }

          @each $position in $fixed-positions {
            &--#{$position} {
              #{$position}: 0;
            }
          }

          @if not $disable-sticky {
            &--sticky {
              position: sticky;
            }
          }
        }

        &--auto {
          // do not set variable so that child AppBar can maintain their height as needed
          height: auto;
        }

        &--stacked {
          flex-direction: column;
          gap: 0;
          padding: 0;
        }

        @if not $disable-dense-theme {
          &--dense {
            @include set-var(height, $dense-height);
          }
        }

        @if not $disable-prominent-theme {
          &--prominent {
            @include set-var(height, $prominent-height);
          }
        }

        @if not $disable-prominent-dense-theme {
          &--prominent-dense {
            @include set-var(height, $prominent-dense-height);
          }
        }

        @if not $disable-surface-theme {
          &--surface {
            @include use-var(background-color, surface-background-color);
            @include use-var(color, surface-color);
          }
        }

        @if not $disable-scrollbar-offset {
          &--scrollbar-offset {
            @include utils.rtl {
              margin-right: calc(-1 * #{utils.scrollbar-size()});
            }

            padding-right: calc(
              #{$horizontal-padding} + #{utils.scrollbar-size()}
            );
          }

          @if not $disable-static-scrollbar-offset {
            &--static-scrollbar-offset {
              width: calc(100% + utils.scrollbar-size());
            }
          }
        }
      }

      @if not $disable-title {
        .rmd-app-bar-title {
          @include utils.auto-rtl(margin-left, $keyline - $horizontal-padding);

          flex: 1 1 auto;
          margin-bottom: 0;
          margin-top: 0;

          &--keyline {
            @include utils.auto-rtl(
              margin-left,
              $title-keyline - $horizontal-padding
            );
          }

          &--nav-keyline {
            @include utils.auto-rtl(margin-left, $nav-keyline);
          }
        }
      }
    }
  }
}
