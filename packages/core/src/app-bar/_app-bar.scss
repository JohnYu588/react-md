@use "sass:map";

@use "../utils";
@use "../box-shadows";
@use "../interaction/interaction";
@use "../theme/a11y";
@use "../theme/theme";
@use "../button/button";
@use "../typography/typography";

$disable-everything: false !default;
$disable-fixed: false !default;
$disable-sticky: false !default;
$disable-primary-theme: false !default;
$disable-secondary-theme: false !default;
$disable-surface-theme: $disable-everything !default;
$disable-dense-theme: false !default;
$disable-prominent-theme: false !default;
$disable-prominent-dense-theme: false !default;
$disable-scrollbar-offset: false !default;
$disable-static-scrollbar-offset: false !default;
$disable-primary-interaction-colors: interaction.$light-surface-base-background-color
  == interaction.$dark-surface-base-background-color !default;
$disable-secondary-interaction-colors: interaction.$light-surface-base-background-color
  == interaction.$dark-surface-base-background-color !default;

$disable-title: false !default;

$gap: 0.25rem !default;
$height: 3.5rem !default;
$dense-height: 3rem !default;
$prominent-height: $height * 2 !default;
$prominent-dense-height: $dense-height * 2 !default;

$fixed-z-index: 10 !default;
$fixed-elevation: 2 !default;
$fixed-positions: top bottom !default;

$light-theme-surface-background-color: theme.$light-theme-surface-color !default;
$light-theme-surface-color: a11y.contrast-color(
  $light-theme-surface-background-color
) !default;
$dark-theme-surface-background-color: if(
  theme.$disable-dark-elevation,
  theme.$dark-theme-surface-color,
  map.get(theme.$dark-elevation-colors, $fixed-elevation)
) !default;
$dark-theme-surface-color: #fff !default;

$surface-background-color: theme.get-default-color(
  $light-theme-surface-background-color,
  $dark-theme-surface-background-color
) !default;
$surface-color: theme.get-default-color(
  $light-theme-surface-color,
  $dark-theme-surface-color
) !default;

$horizontal-padding: 0.25rem !default;
$vertical-padding: 0 !default;

$keyline: 1rem !default;
$title-keyline: 4.5rem !default;

$var-lookup: (
  height: (
    var: --rmd-app-bar-height,
    value: $height,
  ),
  background-color: (
    var: --rmd-app-bar-background-color,
    value: null,
  ),
  color: (
    var: --rmd-app-bar-color,
    value: theme.theme-get-var(text-primary-color),
  ),
  surface-background-color: (
    var: --rmd-app-bar-surface-background-color,
    value: $surface-background-color,
  ),
  surface-color: (
    var: --rmd-app-bar-surface-color,
    value: $surface-color,
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "app-bar var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "app-bar var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if not $disable-surface-theme {
    @include set-var(
      surface-background-color,
      $light-theme-surface-background-color
    );
    @include set-var(surface-color, $light-theme-surface-color);
  }
}

@mixin use-dark-theme {
  @if not $disable-surface-theme {
    @include set-var(
      surface-background-color,
      $dark-theme-surface-background-color
    );
    @include set-var(surface-color, $dark-theme-surface-color);
  }
}

@mixin dense {
  @include set-var(height, $dense-height);
}

@mixin styles {
  @if not $disable-everything {
    @include theme.default-system-theme {
      @include use-dark-theme;
    }

    .rmd-app-bar {
      @include use-var(background-color);
      @include use-var(color);
      @include use-var(height);

      align-items: center;
      display: flex;
      // since app bars can appear a lot in full page dialogs, setting these flex
      // values allows it be be a direct replacement of the `DialogHeader`
      // component without all the offsets and additional styles needed for fixed
      // app bars.
      flex: 0 0 auto;
      gap: $gap;
      padding: $vertical-padding $horizontal-padding;
      width: 100%;

      @if not $disable-fixed or not $disable-sticky {
        &--fixed {
          left: 0;
          position: fixed;
          // Note: right and width were added to support the main navigation
          // behavior with toggleable full-height navigation
          right: 0;
          width: auto;
          z-index: $fixed-z-index;
        }

        @if $fixed-elevation and $fixed-elevation != 0 {
          &--elevated {
            @include box-shadows.box-shadow(
              $fixed-elevation,
              $disable-colors: true
            );
          }
        }

        @each $position in $fixed-positions {
          &--#{$position} {
            #{$position}: 0;
          }
        }

        @if not $disable-sticky {
          &--sticky {
            position: sticky;
          }
        }
      }

      &--auto {
        // do not set variable so that child AppBar can maintain their height as needed
        height: auto;
      }

      &--stacked {
        flex-direction: column;
        gap: 0;
        padding: 0;
      }

      @if not $disable-dense-theme {
        &--dense {
          @include set-var(height, $dense-height);
        }
      }

      @if not $disable-prominent-theme {
        &--prominent {
          @include set-var(height, $prominent-height);
        }
      }

      @if not $disable-prominent-dense-theme {
        &--prominent-dense {
          @include set-var(height, $prominent-dense-height);
        }
      }

      @if not $disable-primary-theme {
        &--primary {
          @if not $disable-primary-interaction-colors {
            @include interaction.use-light-surface;
          }
          @include set-var(
            background-color,
            theme.theme-get-var(primary-color)
          );
          @include set-var(color, theme.theme-get-var(on-primary-color));
        }
      }

      @if not $disable-secondary-theme {
        &--secondary {
          @if not $disable-secondary-interaction-colors {
            @include interaction.use-light-surface;
          }
          @include set-var(
            background-color,
            theme.theme-get-var(secondary-color)
          );
          @include set-var(color, theme.theme-get-var(on-secondary-color));
        }
      }

      @if not $disable-surface-theme {
        &--surface {
          @include set-var(background-color, get-var(surface-background-color));
          @include set-var(color, get-var(surface-color));
        }
      }

      @if not $disable-scrollbar-offset {
        &--scrollbar-offset {
          @include utils.rtl {
            margin-right: calc(-1 * #{utils.scrollbar-size()});
          }

          padding-right: calc(
            #{$horizontal-padding} + #{utils.scrollbar-size()}
          );
        }

        @if not $disable-static-scrollbar-offset {
          &--static-scrollbar-offset {
            width: calc(100% + utils.scrollbar-size());
          }
        }
      }
    }

    @if not $disable-title {
      .rmd-app-bar-title {
        @include utils.auto-rtl(margin-left, $keyline - $horizontal-padding);

        flex: 1 1 auto;
        margin-bottom: 0;
        margin-top: 0;

        &--keyline {
          @include utils.auto-rtl(
            margin-left,
            $title-keyline - $horizontal-padding
          );
        }

        &--nav-keyline {
          @include utils.auto-rtl(
            margin-left,
            $title-keyline - $horizontal-padding - $gap - button.$icon-size
          );
        }

        &--no-wrap {
          @include typography.text-overflow;
        }
      }
    }
  }
}
