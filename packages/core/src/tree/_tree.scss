@use "sass:list" as sassList;
@use "sass:map";
@use "../utils";
@use "../icon/icon";
@use "../list/list";
@use "../typography/typography";
@use "../interaction/interaction";

$disable-everything: false !default;
$disable-expander-left: false !default;
$disable-expander-left-as-media: false !default;
$disable-expander-left-as-media-offset: false !default;
$disable-selected-background-color: false !default;

$item-padding-base: list.$item-horizontal-padding !default;
$item-padding-incrementor: list.$item-horizontal-padding * 1.5 !default;
$expander-right-from: icon.$rotate-from !default;
$expander-right-to: 90deg !default;
$expander-left-from: 0deg !default;
$expander-left-to: -90deg !default;

$selected-styles: (
  font-weight: typography.$font-weight-bold,
) !default;

$variables: (depth, item-padding, item-padding-base, item-padding-incrementor);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "tree");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "tree")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

// must be defined after the `get-var` function
$item-padding: calc(
  get-var(depth) * get-var(item-padding-incrementor) +
    get-var(item-padding-base)
) !default;

@mixin variables {
  @if not $disable-everything {
    @include set-var(depth, 0);
    @include set-var(item-padding, 0);
    @include set-var(item-padding-base, $item-padding-base);
    @include set-var(item-padding-incrementor, $item-padding-incrementor);
  }
}

@mixin styles {
  @if not $disable-everything {
    .rmd-tree {
      display: block;
      height: 100%;
      outline-style: none;
      overflow: auto;
      // this is mostly for firefox. moving the mouse even 1px while clicking will
      // select the current item and all items to the tree root
      user-select: none;
      width: 100%;
    }

    .rmd-tree-item {
      @include icon.set-var(rotate-from, $expander-right-from);
      @include icon.set-var(rotate-to, $expander-right-to);
      @include set-var(item-padding, $item-padding);

      list-style: none;

      @if not $disable-expander-left {
        &--expander-left {
          @include icon.set-var(rotate-from, $expander-left-from);
          @include icon.set-var(rotate-to, $expander-left-to);
        }
      }

      &__content {
        @include utils.auto-rtl(
          padding-left,
          get-var(item-padding),
          list.get-var(item-horizontal-padding)
        );

        &--disabled {
          cursor: auto;

          &:hover::before {
            @include interaction.set-var(background-color, transparent);
          }
        }

        &--link {
          color: inherit;
          text-decoration: none;
        }

        &--focused::before {
          // Note: Clicking an item and then using the keyboard to move focus
          // will **not** show the focus outline so might not be ideal. the tree
          // must be re-focused after a `Tab` keypress for it to appear again
          @if utils.$disable-focus-visible {
            .rmd-tree:focus-within & {
              @include utils.keyboard-only {
                @include interaction.focus-styles;
              }
            }
          } @else {
            .rmd-tree:focus-visible & {
              @include interaction.focus-styles;
            }
          }
        }

        @if $selected-styles {
          &--selected {
            @if not $disable-selected-background-color {
              @include interaction.set-var(
                background-color,
                interaction.get-var(selected-background-color)
              );

              @include utils.touch-only {
                &:hover::before {
                  @include interaction.set-var(
                    background-color,
                    interaction.get-var(selected-background-color)
                  );
                }
              }
            }
            @include utils.map-to-styles($selected-styles);
          }
        }
      }

      @if not $disable-expander-left-as-media {
        &__media {
          align-items: center;
          display: flex;
          justify-content: space-between;

          @if not $disable-expander-left-as-media-offset {
            &--single {
              justify-content: flex-end;
            }
          }
        }
      }
    }

    .rmd-tree-group {
      background-color: inherit;
      color: inherit;
      font-size: inherit;
      line-height: inherit;

      // remove the list padding to make it more condensed
      padding-bottom: 0;
      padding-top: 0;
    }
  }
}
