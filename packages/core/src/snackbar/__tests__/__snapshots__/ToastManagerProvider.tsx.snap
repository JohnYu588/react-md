// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToastManagerProvider default toast manager should work without needing to setup a toast manager yourself 1`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r0:"
  role="status"
>
  <div
    class="rmd-toast rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;

exports[`ToastManagerProvider default toast manager should work without needing to setup a toast manager yourself 2`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r0:"
  role="status"
>
  <div
    class="rmd-toast"
    id="toast-:r1:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should add a toast next in queue if a different toast is being displayed and duplicates are allowed or the toast does not exist in the queue yet 1`] = `
<div
  class="rmd-toast"
  id="toast-:ru:"
>
  <div
    class="rmd-toast-content"
  >
    Hello, world!
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should allow a toast to replace the currently shown toast 1`] = `
<div
  class="rmd-toast"
  id="toast-:ri:"
>
  <div
    class="rmd-toast-content"
  >
    Replace!
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should not trigger a timeout if the visibleTime is null and set the toast to have an alert role 1`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1b:"
  role="status"
>
  <div
    class="rmd-toast rmd-toast--x rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1c:"
    role="alert"
  >
    <div
      class="rmd-toast-content"
    >
      Alert!
    </div>
    <button
      aria-label="Close"
      class="rmd-button rmd-button--icon rmd-button--icon-square rmd-interaction-surface rmd-toast-x"
      type="button"
    >
      <span
        aria-hidden="true"
        class="rmd-icon rmd-icon--font material-icons"
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should not trigger a timeout if the visibleTime is null and set the toast to have an alert role 2`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1b:"
  role="status"
>
  <div
    class="rmd-toast rmd-toast--x rmd-scale-transition--exit rmd-scale-transition--exit-active"
    id="toast-:r1c:"
    role="alert"
  >
    <div
      class="rmd-toast-content"
    >
      Alert!
    </div>
    <button
      aria-label="Close"
      class="rmd-button rmd-button--icon rmd-button--icon-square rmd-interaction-surface rmd-toast-x"
      type="button"
    >
      <span
        aria-hidden="true"
        class="rmd-icon rmd-icon--font material-icons"
      >
        close
      </span>
    </button>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should support rendering multiple toasts as once using the limit prop 1`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1d:"
  role="status"
>
  <div
    class="rmd-toast"
    id="toast-:r1e:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1f:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1g:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should support rendering multiple toasts as once using the limit prop 2`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1d:"
  role="status"
>
  <div
    class="rmd-toast"
    id="toast-:r1f:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast"
    id="toast-:r1g:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1h:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should support rendering multiple toasts as once using the limit prop 3`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1d:"
  role="status"
>
  <div
    class="rmd-toast rmd-scale-transition--exit rmd-scale-transition--exit-active"
    id="toast-:r1f:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast rmd-scale-transition--exit rmd-scale-transition--exit-active"
    id="toast-:r1g:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast"
    id="toast-:r1h:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;

exports[`ToastManagerProvider toast queue should support rendering multiple toasts as once using the limit prop 4`] = `
<div
  class="rmd-snackbar rmd-snackbar--bottom"
  id="snackbar-:r1d:"
  role="status"
>
  <div
    class="rmd-toast rmd-scale-transition--exit rmd-scale-transition--exit-active"
    id="toast-:r1h:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
  <div
    class="rmd-toast rmd-scale-transition--enter rmd-scale-transition--enter-active"
    id="toast-:r1i:"
  >
    <div
      class="rmd-toast-content"
    >
      Hello, world!
    </div>
  </div>
</div>
`;
