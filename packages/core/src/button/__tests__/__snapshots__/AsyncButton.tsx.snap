// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AsyncButton should allow for custom children to be displayed only while loading 1`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:re:"
  type="button"
>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    favorite
  </span>
  <span>
    Button
  </span>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    remove
  </span>
</button>
`;

exports[`AsyncButton should allow for custom children to be displayed only while loading 2`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async rmd-button--async-overlay"
  id="async-button-:re:"
  type="button"
>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    favorite
  </span>
  <span>
    Loading...
  </span>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    remove
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-center rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:re:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-circular-progress rmd-circular-progress--centered rmd-primary-color"
      id="circular-progress-:rf:"
      role="progressbar"
    >
      <svg
        class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
        viewBox="0 0 66 66"
      >
        <circle
          class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
          cx="33"
          cy="33"
          r="30"
        />
      </svg>
    </span>
  </span>
</button>
`;

exports[`AsyncButton should apply the correct styling, HTMLAttributes, and allow a ref 1`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:r0:"
  type="button"
>
  <span>
    Button
  </span>
</button>
`;

exports[`AsyncButton should apply the correct styling, HTMLAttributes, and allow a ref 2`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async custom-class-name"
  id="async-button-:r0:"
  style="color: white;"
  type="button"
>
  <span>
    Button
  </span>
</button>
`;

exports[`AsyncButton should be able to render a circular progress bar before or after and replacing the optional addon 1`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:rb:"
  type="button"
>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    favorite
  </span>
  <span>
    Button
  </span>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    remove
  </span>
</button>
`;

exports[`AsyncButton should be able to render a circular progress bar before or after and replacing the optional addon 2`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:rb:"
  type="button"
>
  <span
    aria-labelledby="async-button-:rb:"
    aria-valuemax="100"
    aria-valuemin="0"
    class="rmd-circular-progress rmd-circular-progress--centered rmd-primary-color"
    id="circular-progress-:rc:"
    role="progressbar"
  >
    <svg
      class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
      viewBox="0 0 66 66"
    >
      <circle
        class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
        cx="33"
        cy="33"
        r="30"
      />
    </svg>
  </span>
  <span>
    Button
  </span>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    remove
  </span>
</button>
`;

exports[`AsyncButton should be able to render a circular progress bar before or after and replacing the optional addon 3`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:rb:"
  type="button"
>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    favorite
  </span>
  <span>
    Button
  </span>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    remove
  </span>
</button>
`;

exports[`AsyncButton should be able to render a circular progress bar before or after and replacing the optional addon 4`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:rb:"
  type="button"
>
  <span
    aria-hidden="true"
    class="rmd-icon rmd-icon--font material-icons"
  >
    favorite
  </span>
  <span>
    Button
  </span>
  <span
    aria-labelledby="async-button-:rb:"
    aria-valuemax="100"
    aria-valuemin="0"
    class="rmd-circular-progress rmd-circular-progress--centered rmd-primary-color"
    id="circular-progress-:rd:"
    role="progressbar"
  >
    <svg
      class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
      viewBox="0 0 66 66"
    >
      <circle
        class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
        cx="33"
        cy="33"
        r="30"
      />
    </svg>
  </span>
</button>
`;

exports[`AsyncButton should default to using the same theme while loading but can use the disabled theme by enabling the loadingDisabledTheme prop 1`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:rj:"
  type="button"
>
  <span>
    Button
  </span>
</button>
`;

exports[`AsyncButton should default to using the same theme while loading but can use the disabled theme by enabling the loadingDisabledTheme prop 2`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-button--disabled rmd-text-disabled-color rmd-interaction-surface rmd-button--async rmd-button--async-overlay"
  id="async-button-:rj:"
  type="button"
>
  <span>
    Button
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-center rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:rj:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-circular-progress rmd-circular-progress--centered rmd-primary-color"
      id="circular-progress-:rk:"
      role="progressbar"
    >
      <svg
        class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
        viewBox="0 0 66 66"
      >
        <circle
          class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
          cx="33"
          cy="33"
          r="30"
        />
      </svg>
    </span>
  </span>
</button>
`;

exports[`AsyncButton should render a progressbar until the onClick's promise has been resolved if it returns a promise 1`] = `
<button
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:r1:"
  type="button"
>
  <span>
    Button
  </span>
</button>
`;

exports[`AsyncButton should render a progressbar until the onClick's promise has been resolved if it returns a promise 2`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async rmd-button--async-overlay"
  id="async-button-:r1:"
  type="button"
>
  <span>
    Button
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-center rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:r1:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-circular-progress rmd-circular-progress--centered rmd-primary-color"
      id="circular-progress-:r2:"
      role="progressbar"
    >
      <svg
        class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
        viewBox="0 0 66 66"
      >
        <circle
          class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
          cx="33"
          cy="33"
          r="30"
        />
      </svg>
    </span>
  </span>
</button>
`;

exports[`AsyncButton should should be able to render a linear progress bar above or below the content 1`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:r9:"
  type="button"
>
  <span>
    Button
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-start rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:r9:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-linear-progress rmd-linear-progress--horizontal rmd-linear-progress--indeterminate rmd-primary-color"
      id="linear-progress-:ra:"
      role="progressbar"
    >
      <span
        class="rmd-linear-progress__bar rmd-linear-progress__bar--horizontal rmd-linear-progress__bar--indeterminate"
      />
    </span>
  </span>
</button>
`;

exports[`AsyncButton should should be able to render a linear progress bar above or below the content 2`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--text rmd-interaction-surface rmd-button--async"
  id="async-button-:r9:"
  type="button"
>
  <span>
    Button
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-end rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:r9:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-linear-progress rmd-linear-progress--horizontal rmd-linear-progress--indeterminate rmd-primary-color"
      id="linear-progress-:ra:"
      role="progressbar"
    >
      <span
        class="rmd-linear-progress__bar rmd-linear-progress__bar--horizontal rmd-linear-progress__bar--indeterminate"
      />
    </span>
  </span>
</button>
`;

exports[`AsyncButton should use the current-color as the progress bar's color when not using the clear or disabled theme which should use the primary theme instead 1`] = `
<button
  aria-disabled="true"
  class="rmd-button rmd-button--icon rmd-button--contained rmd-background-container rmd-secondary-container rmd-interaction-surface rmd-button--async rmd-button--async-overlay"
  id="async-button-:rg:"
  type="button"
>
  <span>
    Button
  </span>
  <span
    class="rmd-overlay rmd-overlay--active rmd-overlay--visible rmd-overlay--absolute rmd-box rmd-box--gap rmd-box--wrap rmd-box--align-center rmd-box--justify-center"
  >
    <span
      aria-labelledby="async-button-:rg:"
      aria-valuemax="100"
      aria-valuemin="0"
      class="rmd-circular-progress rmd-circular-progress--centered"
      id="circular-progress-:ri:"
      role="progressbar"
    >
      <svg
        class="rmd-circular-progress__svg rmd-circular-progress__svg--indeterminate"
        viewBox="0 0 66 66"
      >
        <circle
          class="rmd-circular-progress__circle rmd-circular-progress__circle--indeterminate"
          cx="33"
          cy="33"
          r="30"
        />
      </svg>
    </span>
  </span>
</button>
`;
