@use "sass:list";
@use "sass:map";
@use "../utils";
@use "../theme/a11y";
@use "../theme/theme";
@use "../icon/icon";
@use "../box-shadows";
@use "../media-queries/media-queries";
@use "../interaction/interaction";
@use "../progress/progress";
@use "../overlay/overlay";
@use "../typography/typography";

$disable-everything: false !default;
$disable-text: false !default;
$disable-icon: false !default;
$disable-icon-square: false !default;
$disable-contained: false !default;
$disable-contained-pressed-elevation: false !default;
$disable-contained-interaction-colors: interaction.$light-surface-base-background-color
  == interaction.$dark-surface-base-background-color !default;
$disable-floating: false !default;
$disable-floating-absolute-position: false !default;
$disable-circular-progress: progress.$disable-circular !default;
$disable-async: $disable-circular-progress !default;
$disable-unstyled-utility-class: false !default;

$text-border-radius: 0.5rem !default;
$text-horizontal-padding: 1rem !default;
$text-vertical-padding: 0 !default;
$text-min-height: 2.25rem !default;
$text-min-width: 4rem !default;
$text-icon-size: 1.125rem !default;

$icon-border-radius: 50% !default;
$icon-square-border-radius: $text-border-radius !default;
$icon-size: auto !default;
$icon-small-size: icon.$size - 0.25rem !default;
$icon-large-size: icon.$size + 0.25rem !default;
$icon-font-size: icon.$size !default;
$icon-padding: 0.5em !default;

$contained-elevation: 2 !default;
$contained-pressed-elevation: 4 !default;
$clear-contained-background-color: theme.$light-theme-surface-color !default;
$clear-contained-color: a11y.contrast-color(
  $clear-contained-background-color
) !default;

$circular-progress-size: icon.get-var(size) !default;

$floating-margin: 1.5rem !default;
$floating-z-index: utils.$temporary-element-z-index !default;
// set this below the app bar
$floating-absolute-z-index: 5 !default;
$floating-positions: (
  tl: (
    left: $floating-margin,
    top: $floating-margin,
  ),
  tr: (
    right: $floating-margin,
    top: $floating-margin,
  ),
  bl: (
    bottom: $floating-margin,
    left: $floating-margin,
  ),
  br: (
    bottom: $floating-margin,
    right: $floating-margin,
  ),
) !default;

$var-lookup: (
  background-color: (
    var: --rmd-button-background-color,
    value: transparent,
  ),
  color: (
    var: --rmd-button-color,
    value: null,
  ),
  border-radius: (
    var: --rmd-button-border-radius,
    value: null,
  ),
  contained-background-color: (
    var: --rmd-button-contained-background-color,
    value: $clear-contained-background-color,
  ),
  contained-color: (
    var: --rmd-button-contained-color,
    value: $clear-contained-color,
  ),
  text-horizontal-padding: (
    var: --rmd-button-text-horizontal-padding,
    value: $text-horizontal-padding,
  ),
  text-vertical-padding: (
    var: --rmd-button-text-vertical-padding,
    value: $text-vertical-padding,
  ),
  text-min-height: (
    var: --rmd-button-text-min-height,
    value: $text-min-height,
  ),
  text-min-width: (
    var: --rmd-button-text-min-width,
    value: $text-min-width,
  ),
  icon-size: (
    var: --rmd-button-icon-size,
    value: $icon-size,
  ),
  icon-font-size: (
    var: --rmd-button-icon-font-size,
    value: $icon-font-size,
  ),
  icon-border-radius: (
    var: --rmd-button-icon-radius,
    value: $icon-border-radius,
  ),
  fab-offset: (
    var: --rmd-fab-offset,
    value: utils.scrollbar-size(),
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "button var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "button var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin unstyled(
  $hoverable: false,
  $css-modules: false,
  $box-shadow: interaction.$focus-box-shadow
) {
  @include interaction.surface(
    $hoverable: $hoverable,
    $css-modules: $css-modules,
    $box-shadow: $box-shadow
  );

  background-color: transparent;
  border-width: 0;
  display: inline-flex;
}

@mixin text-styles {
  @include icon.set-var(size, $text-icon-size);
  @include set-var(border-radius, $text-border-radius);
  @include utils.map-to-styles(typography.$button-styles);
  @include use-var(min-height, text-min-height);
  @include use-var(min-width, text-min-width);

  border: 0;
  padding: get-var(text-vertical-padding) get-var(text-horizontal-padding);
}

@mixin styles {
  @if not $disable-everything {
    .rmd-button {
      @if not $disable-circular-progress {
        @include progress.set-var(circular-size, $circular-progress-size);
      }

      @include icon.set-var(color, currentcolor);
      @include icon.use-var(gap, spacing);
      @include use-var(background-color);
      @include use-var(color);
      @include use-var(border-radius);

      align-items: center;
      border-width: 0;
      display: inline-flex;
      flex-shrink: 0;
      justify-content: center;

      @if not $disable-text {
        &--text {
          @include text-styles;
        }
      }

      @if not $disable-icon {
        &--icon {
          @include icon.set-var(size, 1em);
          @include set-var(border-radius, get-var(icon-border-radius));
          @include use-var(font-size, icon-font-size);
          @include use-var(height, icon-size);
          @include use-var(width, icon-size);

          padding: $icon-padding;
        }

        @if not $disable-icon-square {
          &--icon-square {
            @include set-var(icon-border-radius, $icon-square-border-radius);
          }
        }

        @if $icon-small-size {
          &--small {
            font-size: $icon-small-size;
          }
        }

        @if $icon-large-size {
          &--large {
            font-size: $icon-large-size;
          }
        }
      }

      &--responsive {
        @include media-queries.tablet-media {
          @include text-styles;

          height: auto;
          width: auto;
        }
      }

      &:disabled,
      &--disabled {
        @include theme.theme-set-var(outline-color, currentcolor);
      }

      @if not $disable-contained {
        &--contained {
          @include box-shadows.elevation-transition(
            $contained-elevation,
            if(
              $disable-contained-pressed-elevation,
              null,
              $contained-pressed-elevation
            ),
            "&.rmd-button--pressed",
            $pseudo-before: false,
            $position-relative: false
          );

          // contained buttons should _normally_ always force dark background
          // colors for the interaction states This means use the default light
          // theme since it is based off of the root background color
          @if not $disable-contained-interaction-colors {
            @include interaction.use-light-surface;
          }

          @include set-var(
            background-color,
            get-var(contained-background-color)
          );
          @include set-var(color, get-var(contained-color));
        }
      }

      @if not $disable-async {
        &--async {
          @include overlay.set-var(background-color, transparent);
          @include progress.set-var(color, currentcolor);
          // @include progress.set-var(background-color, currentcolor);
        }

        &--async-overlay {
          > * {
            opacity: 0;
          }
        }
      }
    }

    @if not $disable-unstyled-utility-class {
      .rmd-button-unstyled {
        @include unstyled;
      }
    }

    @if not $disable-floating {
      .rmd-fab {
        position: fixed;
        z-index: $floating-z-index;

        @if not $disable-floating-absolute-position {
          &--absolute {
            @include set-var(fab-offset, 0px);

            position: absolute;
            z-index: $floating-absolute-z-index;
          }
        }

        @each $suffix, $styles in $floating-positions {
          &--#{$suffix} {
            @each $property, $value in $styles {
              @if $property == left {
                @include utils.rtl {
                  left: auto;
                  right: calc(#{$value} + #{get-var(fab-offset)});
                }

                left: $value;
              } @else if $property == right {
                @include utils.rtl {
                  left: $value;
                  right: auto;
                }

                right: calc(#{$value} + #{get-var(fab-offset)});
              } @else {
                #{$property}: #{$value};
              }
            }
          }
        }
      }
    }
  }
}
