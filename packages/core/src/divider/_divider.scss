@use "sass:map";
@use "../utils";
@use "../theme/theme";
@use "../theme/colors";

$disable-everything: false !default;
$disable-vertical: false !default;
$disable-inset: false !default;

$size: 0.0625rem !default;
// this is doubled since the `hr` element applies the size for border top and bottom
$vertical-size: $size * 2 !default;
$max-size: 100% !default;
$inset: 4rem !default;
$spacing: 0.25rem auto !default;
$vertical-spacing: auto 0.25rem !default;

$light-theme-color: rgba(colors.$black, 0.12) !default;
$dark-theme-color: rgba(colors.$white, 0.12) !default;

$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;

$var-lookup: (
  size: (
    var: --rmd-divider-size,
    value: $size,
  ),
  vertical-size: (
    var: --rmd-divider-vertical-size,
    value: $vertical-size,
  ),
  color: (
    var: --rmd-divider-color,
    value: $color,
  ),
  spacing: (
    var: --rmd-divider-spacing,
    value: $spacing,
  ),
  vertical-spacing: (
    var: --rmd-divider-vertical-spacing,
    value: $vertical-spacing,
  ),
  inset: (
    var: --rmd-divider-inset,
    value: $inset,
  ),
  width: (
    var: --rmd-divider-width,
    value: $max-size,
  ),
  max-size: (
    var: --rmd-divider-max-size,
    value: $max-size,
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "divider var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "divider var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if not $disable-everything {
    @include set-var(color, $light-theme-color);
  }
}

@mixin use-dark-theme {
  @if not $disable-everything {
    @include set-var(color, $dark-theme-color);
  }
}

@mixin border-style($position) {
  $property: "border-#{$position}";

  #{$property}: get-var(size) inset get-var(color);
}

@mixin styles {
  @if not $disable-everything {
    @include theme.default-system-theme {
      @include use-dark-theme;
    }

    .rmd-divider {
      @include use-var(margin, spacing);
      @include use-var(width);

      border: get-var(size) inset get-var(color);
      display: block;
      flex-shrink: 0;

      @if not $disable-inset {
        &--inset {
          @include utils.auto-rtl(margin-left, get-var(inset), auto);

          width: calc(get-var(max-size) - get-var(inset));
        }
      }

      @if not $disable-vertical {
        &--vertical {
          @include border-style(left);
          @include use-var(height, max-size);
          @include use-var(width, vertical-size);
          @include use-var(margin, vertical-spacing);

          border-bottom: 0;
          display: inline-block;
        }
      }
    }
  }
}
