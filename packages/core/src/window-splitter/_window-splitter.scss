@use "sass:map";
@use "../utils";
@use "../interaction/interaction";
@use "../transition/transition";

$disable-everything: false !default;
$disable-horizontal: false !default;
$disable-vertical: false !default;
$disable-reversed: false !default;
$disable-absolute-position: false !default;

$size: 1rem !default;
$background-size: 0.25rem !default;
$background-color: interaction.get-var(focus-color) !default;
$z-index: 30 !default;

$variables: (top, right, bottom, left, opacity, position);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "window-splitter");
  // window-splitter variables don't make much sense to set globally
  $value: if($fallback, $fallback, 0);
  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "window-splitter")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin styles {
  @if not $disable-everything {
    .rmd-window-splitter {
      @include use-var(opacity);

      background-color: transparent;
      border: 0;
      outline-style: none;
      padding: 0;
      position: fixed;
      transition: opacity transition.$linear-duration;
      z-index: $z-index;

      &::after {
        background-color: $background-color;
        content: "";
        inset: 0;
        position: absolute;
      }

      &:hover {
        @include set-var(opacity, 1);
      }

      @include utils.keyboard-only {
        &:focus {
          @include set-var(opacity, 1);
        }
      }

      @include utils.touch-only {
        &:hover {
          @include set-var(opacity, 0);
        }
      }

      @if not $disable-horizontal {
        &--h {
          @include utils.auto-rtl(left, get-var(position));
          @include use-var(bottom);
          @include use-var(top);

          cursor: col-resize;
          width: $size;

          &::after {
            width: $background-size;
          }
        }

        @if not $disable-reversed {
          &--hr {
            @include utils.auto-rtl(right, get-var(position));

            left: auto;

            &::after {
              @include utils.auto-rtl(margin-left, auto);
            }
          }
        }
      }

      @if not $disable-vertical {
        &--v {
          @include use-var(left);
          @include use-var(right);
          @include use-var(top, position);

          cursor: row-resize;
          height: $size;
          width: 100%;

          &::after {
            height: $background-size;
          }
        }

        @if not $disable-reversed {
          &--vr {
            @include use-var(bottom, position);

            top: auto;

            &::after {
              top: calc(100% - $background-size);
            }
          }
        }
      }

      @if not $disable-absolute-position {
        &--a {
          position: absolute;
        }
      }

      &--dragging {
        @include set-var(opacity, 1);

        // set to important so that the `.rmd-dragging` styles do not affect
        // window splitter
        pointer-events: auto !important;
      }
    }
  }
}
