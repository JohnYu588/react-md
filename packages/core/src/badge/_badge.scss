@use "sass:map";
@use "../utils";
@use "../theme/a11y";
@use "../theme/colors";
@use "../theme/theme";
@use "../typography/typography";

$disable-everything: false !default;
$disable-greyscale-theme: false !default;
$disable-primary-theme: false !default;
$disable-secondary-theme: false !default;

$size: 1.5rem !default;
$font-size: 0.625rem !default;
$offset: 0 !default;
$offset-top: $offset !default;
$offset-right: $offset !default;
$border-radius: 50% !default;
$typography: map.merge(
  map.remove(typography.$body-1-styles, line-height, font-size),
  (
    font-size: $font-size,
  )
) !default;

$light-theme-greyscale-background-color: #ccc !default;
$light-theme-greyscale-color: a11y.contrast-color(
  $light-theme-greyscale-background-color
) !default;
$dark-theme-greyscale-background-color: colors.$grey-700 !default;
$dark-theme-greyscale-color: a11y.contrast-color(
  $dark-theme-greyscale-background-color
) !default;
$greyscale-background-color: theme.get-default-color(
  $light-theme-greyscale-background-color,
  $dark-theme-greyscale-background-color
) !default;
$greyscale-color: theme.get-default-color(
  $light-theme-greyscale-color,
  $dark-theme-greyscale-color
) !default;

$variables: (
  greyscale-background-color,
  greyscale-color,
  size,
  offset,
  offset-top,
  offset-right
);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "badge");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "badge")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if $light-theme-greyscale-background-color !=
    $dark-theme-greyscale-background-color
  {
    @include set-var(
      greyscale-background-color,
      $light-theme-greyscale-background-color
    );
  }
  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {
    @include set-var(greyscale-color, $light-theme-greyscale-color);
  }
}

@mixin use-dark-theme {
  @if $light-theme-greyscale-background-color !=
    $dark-theme-greyscale-background-color
  {
    @include set-var(
      greyscale-background-color,
      $dark-theme-greyscale-background-color
    );
  }

  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {
    @include set-var(greyscale-color, $dark-theme-greyscale-color);
  }
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(greyscale-background-color, $greyscale-background-color);
    @include set-var(greyscale-color, $greyscale-color);
    @include set-var(size, $size);
    @include set-var(offset, $offset);
    @if $offset != $offset-top {
      @include set-var(offset-top, $offset-top);
    }
    @if $offset != $offset-right {
      @include set-var(offset-right, $offset-right);
    }
  }
}

@mixin styles($disable-layer: false) {
  @if not $disable-everything {
    @include utils.optional-layer(badge, $disable-layer) {
      .rmd-badge {
        @include utils.map-to-styles($typography);
        @include use-var(height, size);
        @include use-var(width, size);
        @include utils.auto-rtl(right, get-var(offset-right, get-var(offset)));
        @include use-var(top, offset-top, get-var(offset));

        align-items: center;
        border-radius: $border-radius;
        display: inline-flex;
        justify-content: center;
        pointer-events: none; // badges are _kind_ of presentational and shouldn't trigger mouse events
        position: absolute;

        @if not $disable-greyscale-theme {
          &--greyscale {
            @include use-var(background-color, greyscale-background-color);
            @include use-var(color, greyscale-color);
          }
        }
      }
    }
  }
}
