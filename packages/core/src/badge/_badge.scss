@use "sass:map";
@use "../utils";
@use "../theme/a11y";
@use "../theme/colors";
@use "../theme/theme";
@use "../typography/typography";

$disable-everything: false !default;
$disable-greyscale-theme: false !default;
$disable-primary-theme: false !default;
$disable-secondary-theme: false !default;

$size: 1.5rem !default;
$font-size: 0.625rem !default;
$offset-top: 0 !default;
$offset-right: 0 !default;
$border-radius: 50% !default;
$typography: map.merge(
  map.remove(typography.$body-1-styles, line-height, font-size),
  (
    font-size: $font-size,
  )
) !default;

$light-theme-greyscale-background-color: #ccc !default;
$light-theme-greyscale-color: a11y.contrast-color(
  $light-theme-greyscale-background-color
) !default;
$dark-theme-greyscale-background-color: colors.$grey-700 !default;
$dark-theme-greyscale-color: a11y.contrast-color(
  $dark-theme-greyscale-background-color
) !default;
$greyscale-background-color: theme.get-default-color(
  $light-theme-greyscale-background-color,
  $dark-theme-greyscale-background-color
) !default;
$greyscale-color: theme.get-default-color(
  $light-theme-greyscale-color,
  $dark-theme-greyscale-color
) !default;

$var-lookup: (
  greyscale-background-color: (
    var: --rmd-badge-greyscale-background-color,
    value: $greyscale-background-color,
  ),
  greyscale-color: (
    var: --rmd-badge-greyscale-color,
    value: $greyscale-color,
  ),
  size: (
    var: --rmd-badge-size,
    value: $size,
  ),
  offset: (
    var: --rmd-badge-offset,
    value: 0,
  ),
  offset-top: (
    var: --rmd-badge-offset-top,
    value: var(--rmd-badge-offset, $offset-top),
  ),
  offset-right: (
    var: --rmd-badge-offset-right,
    value: var(--rmd-badge-offset, $offset-right),
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "badge var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "badge var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if $light-theme-greyscale-background-color !=
    $dark-theme-greyscale-background-color
  {
    @include set-var(
      greyscale-background-color,
      $light-theme-greyscale-background-color
    );
  }
  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {
    @include set-var(greyscale-color, $light-theme-greyscale-color);
  }
}

@mixin use-dark-theme {
  @if $light-theme-greyscale-background-color !=
    $dark-theme-greyscale-background-color
  {
    @include set-var(
      greyscale-background-color,
      $dark-theme-greyscale-background-color
    );
  }

  @if $light-theme-greyscale-color != $dark-theme-greyscale-color {
    @include set-var(greyscale-color, $dark-theme-greyscale-color);
  }
}

@mixin styles {
  @if not $disable-everything {
    .rmd-badge {
      @include utils.map-to-styles($typography);
      @include use-var(height, size);
      @include use-var(width, size);
      @include utils.auto-rtl(right, get-var(offset-right));
      @include use-var(top, offset-top);

      align-items: center;
      border-radius: $border-radius;
      display: inline-flex;
      justify-content: center;
      pointer-events: none; // badges are _kind_ of presentational and shouldn't trigger mouse events
      position: absolute;

      @if not $disable-greyscale-theme {
        &--greyscale {
          @include use-var(background-color, greyscale-background-color);
          @include use-var(color, greyscale-color);
        }
      }
    }
  }
}
