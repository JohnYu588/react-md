@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "../utils";
@use "../theme/colors";
@use "../typography/typography";
@use "../icon/icon";

$disable-everything: false !default;
$disable-icon: false !default;
$disable-icon-size: false !default;
$disable-image: false !default;
$disable-auto-image: false !default;

$color: colors.$grey-100 !default;
$background-color: colors.$grey-700 !default;
$line-height: map.get(typography.$subtitle-1-styles, line-height) !default;
$border-color: transparent !default;
$border-radius: 50% !default;
$size: 2.5rem !default;
$font-size: 1.5rem !default;
$icon-sized-size: icon.get-var(size) !default;
$icon-sized-font-size: 0.75rem !default;

$default-colors: (
  red: colors.$red-a-700 colors.$red-50,
  pink: colors.$pink-600 colors.$white,
  purple: colors.$purple-700 colors.$purple-100,
  deep-purple: colors.$deep-purple-900 colors.$deep-purple-100,
  indigo: colors.$indigo-600 colors.$indigo-100,
  blue: colors.$blue-a-700 colors.$white,
  light-blue: colors.$light-blue-300 colors.$deep-purple-900,
  cyan: colors.$cyan-400 colors.$teal-900,
  teal: colors.$teal-a-400 colors.$teal-900,
  green: colors.$green-800 colors.$green-50,
  light-green: colors.$light-green-300 colors.$green-900,
  lime: colors.$lime-400 colors.$teal-800,
  yellow: colors.$yellow-a-200 colors.$brown-500,
  amber: colors.$amber-400 colors.$brown-800,
  orange: colors.$orange-600 colors.$grey-900,
  deep-orange: colors.$deep-orange-a-400 colors.$grey-900,
  brown: colors.$brown-500 colors.$brown-50,
  grey: colors.$grey-700 colors.$grey-100,
  blue-grey: colors.$blue-grey-700 colors.$blue-grey-50,
);

$colors: $default-colors !default;

$variables: (
  background-color,
  color,
  border-color,
  border-radius,
  size,
  font-size
);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "avatar");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "avatar")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin custom-color($name, $color, $background-color, $disable-prefix: false) {
  $class-name: if($disable-prefix, $name, ".rmd-avatar--#{$name}");

  #{$class-name} {
    @include set-var(background-color, $background-color);
    @include set-var(color, $color);
  }
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(background-color, $background-color);
    @include set-var(color, $color);
    @include set-var(border-color, $border-color);
    @include set-var(border-radius, $border-radius);
    @include set-var(size, $size);
    @include set-var(font-size, $font-size);
  }
}

@mixin styles($disable-layer: false) {
  @if not $disable-everything {
    @include utils.optional-layer(avatar, $disable-layer) {
      .rmd-avatar {
        @if not $disable-icon {
          @include icon.set-var(color, currentcolor);
        }
        @include utils.map-to-styles(typography.$base-font-styles);
        @include use-var(background-color);
        @include use-var(border-radius);
        @include use-var(color);
        @include use-var(font-size);
        @include use-var(height, size);
        @include use-var(width, size);

        align-items: center;
        border: 1px solid get-var(border-color);
        display: inline-flex;
        flex-shrink: 0;
        justify-content: center;
        line-height: $line-height;
        overflow: hidden;

        @if not $disable-icon-size {
          &--icon {
            @include set-var(size, $icon-sized-size);

            font-size: $icon-sized-font-size;
          }
        }

        @if not $disable-image {
          &__image {
            height: 100%;
            width: auto;
          }
        }

        @if not $disable-auto-image {
          img {
            height: 100%;
            width: auto;
          }
        }

        @each $name, $values in $colors {
          @if list.length($values) != 2 {
            @error 'Unable to create an avatar color because the list of values is not of length 2. The first value should be the background-color and the second should be the text color. "#{$values}"';
          }

          @include custom-color(
            "&--#{$name}",
            list.nth($values, 2),
            list.nth($values, 1),
            true
          );
        }
      }
    }
  }
}
