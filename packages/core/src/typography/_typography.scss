@use "sass:math";
@use "sass:map";
@use "../media-queries";
@use "../utils";

$disable-sr-only: false !default;

/// A small utility function to get the letter spacing based on tracking and
/// font-size
///
/// @access private
/// @param {Number} tracking - The tracking to use
/// @param {Number} font-size - The font size to use
/// @return {Number} the letter spacing value in em
@function _get-letter-spacing($tracking, $font-size) {
  @return math.div($tracking, $font-size * 16) * 1em;
}

/// The font family to use throughout the entire application.
///
/// @example scss - Changing the Font
///   @use "react-md" with (
///     $font-family: string.unquote("'Open Sans', Koulen, 'Roboto Flex', sans-serif")
///   ):
///
///   @include react-md.typography;
///
/// @type String
$font-family: Roboto, sans-serif !default;

$font-weight-thin: 100 !default;
$font-weight-light: 300 !default;
$font-weight-regular: 400 !default;
$font-weight-medium: 500 !default;
$font-weight-bold: 700 !default;
$font-weight-semi-bold: 800 !default;
$font-weight-black: 900 !default;

/// A Map of all the font weights.
///
/// @type Map
/// @prop {Number} thin [$font-weight-thin] - The thin font weight value.
/// @prop {Number} light [$font-weight-light] - The light font weight value.
/// @prop {Number} regular [$font-weight-regular] - The regular font weight
/// value.
/// @prop {Number} medium [$font-weight-medium] - The medium font weight
/// value.
/// @prop {Number} bold [$font-weight-bold] - The bold font weight value.
/// @prop {Number} semi-bold [$font-weight-semi-bold] - The semi-bold font
/// weight value.
/// @prop {Number} black [$font-weight-black] - The black font weight value.
$font-weights: (
  thin: $font-weight-thin,
  light: $font-weight-light,
  regular: $font-weight-regular,
  medium: $font-weight-medium,
  bold: $font-weight-bold,
  semi-bold: $font-weight-semi-bold,
  black: $font-weight-black,
) !default;

$text-alignments: left center right !default;
$text-decorations: underline overline line-through !default;
$text-transforms: capitalize uppercase lowercase !default;
$font-styles: normal italic oblique !default;

/// The base styles for typography.
/// @type Map
$base-font-styles: (
  font-family: $font-family,
  -moz-osx-font-smoothing: grayscale,
  -webkit-font-smoothing: antialiased,
);

$headline-1-recommended-styles: (
  font-size: 6rem,
  line-height: 6rem,
  font-weight: map.get($font-weights, light),
  letter-spacing: _get-letter-spacing(-1.5, 6),
);
$headline-1-styles: $headline-1-recommended-styles !default;
$headline-2-recommended-styles: (
  font-size: 3.75rem,
  line-height: 3.75rem,
  font-weight: map.get($font-weights, light),
  letter-spacing: _get-letter-spacing(-0.5, 3.75),
);
$headline-2-styles: $headline-2-recommended-styles !default;
$headline-3-recommended-styles: (
  font-size: 3rem,
  line-height: 3.125rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: normal,
);
$headline-3-styles: $headline-3-recommended-styles !default;
$headline-4-recommended-styles: (
  font-size: 2.125rem,
  line-height: 2.5rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: _get-letter-spacing(0.25, 2.125),
);
$headline-4-styles: $headline-4-recommended-styles !default;
$headline-5-recommended-styles: (
  font-size: 1.5rem,
  line-height: 2rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: normal,
);
$headline-5-styles: $headline-5-recommended-styles !default;
$headline-6-recommended-styles: (
  font-size: 1.25rem,
  line-height: 2rem,
  font-weight: map.get($font-weights, medium),
  letter-spacing: _get-letter-spacing(0.25, 1.25),
);
$headline-6-styles: $headline-6-recommended-styles !default;
$subtitle-1-recommended-styles: (
  font-size: 1rem,
  line-height: 1.75rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: _get-letter-spacing(0.15, 1),
);
$subtitle-1-styles: $subtitle-1-recommended-styles !default;
$subtitle-2-recommended-styles: (
  font-size: 0.875rem,
  line-height: 1.375rem,
  font-weight: map.get($font-weights, medium),
  letter-spacing: _get-letter-spacing(0.1, 0.875),
);
$subtitle-2-styles: $subtitle-2-recommended-styles !default;
$body-1-recommended-styles: (
  font-size: 1rem,
  line-height: 1.5rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: _get-letter-spacing(0.5, 0.875),
);
$body-1-styles: $body-1-recommended-styles !default;
$body-2-recommended-styles: (
  font-size: 0.875rem,
  line-height: 1.25rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: _get-letter-spacing(0.25, 0.875),
);
$body-2-styles: $body-2-recommended-styles !default;
$caption-recommended-styles: (
  font-size: 0.75rem,
  line-height: 1.25rem,
  font-weight: map.get($font-weights, regular),
  letter-spacing: _get-letter-spacing(0.4, 0.75),
);
$caption-styles: $caption-recommended-styles !default;
$overline-recommended-styles: (
  font-size: 0.75rem,
  line-height: 2rem,
  font-weight: map.get($font-weights, medium),
  letter-spacing: _get-letter-spacing(2, 0.75),
);
$overline-styles: $overline-recommended-styles !default;
$button-recommended-styles: map.merge(
  $base-font-styles,
  (
    font-size: 0.875rem,
    line-height: 2.25rem,
    font-weight: map.get($font-weights, medium),
    letter-spacing: _get-letter-spacing(1.25, 0.875),
    text-transform: uppercase,
  )
);
$button-styles: $button-recommended-styles !default;

/// The max length a line of text can be on mobile devices.
/// @type Number
/// @see $desktop-max-line-length
$mobile-max-line-length: 17em !default;

/// The max length a line of text can be on larger screens (mostly desktops or
/// landscape tablets).
/// @type Number
/// @see $mobile-max-line-length
$desktop-max-line-length: 40em !default;

$text-container-padding: 1rem !default;

$typography-var-lookup: (
  line-length: (
    var: --rmd-line-length,
    value: null,
  ),
  text-container-padding: (
    var: --rmd-text-container-padding,
    value: $text-container-padding,
  ),
);

@function get-typography-var($name, $fallback: null) {
  $found: utils.validate($typography-var-lookup, $name, "typography var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-typography-var($name, $value) {
  $var: map.get(
    utils.validate($typography-var-lookup, $name, "typography var"),
    var
  );

  #{$var}: #{$value};
}

@mixin use-typography-var($property, $name: $property, $fallback: null) {
  #{$property}: get-typography-var($name, $fallback);
}

@mixin typography {
  @include media-queries.tablet-media {
    .rmd-text-container {
      @include set-typography-var(line-length, $desktop-max-line-length);
    }
  }

  .rmd-text-container {
    @include use-typography-var(
      max-width,
      line-length,
      $mobile-max-line-length
    );
    @include use-typography-var(padding, text-container-padding);

    display: block;
    margin: 0 auto;
    width: 100%;
  }

  .rmd-typography {
    @include utils.map-to-styles($base-font-styles);

    &--headline-1 {
      @include utils.map-to-styles($headline-1-styles);
    }

    &--headline-2 {
      @include utils.map-to-styles($headline-2-styles);
    }

    &--headline-3 {
      @include utils.map-to-styles($headline-3-styles);
    }

    &--headline-4 {
      @include utils.map-to-styles($headline-4-styles);
    }

    &--headline-5 {
      @include utils.map-to-styles($headline-5-styles);
    }

    &--headline-6 {
      @include utils.map-to-styles($headline-6-styles);
    }

    &--subtitle-1 {
      @include utils.map-to-styles($subtitle-1-styles);
    }

    &--subtitle-2 {
      @include utils.map-to-styles($subtitle-2-styles);
    }

    &--body-1 {
      @include utils.map-to-styles($body-1-styles);
    }

    &--body-2 {
      @include utils.map-to-styles($body-2-styles);
    }

    &--caption {
      @include utils.map-to-styles($caption-styles);
    }

    &--overline {
      @include utils.map-to-styles($overline-styles);
    }

    &--no-margin {
      margin: 0;
    }

    &--no-margin-top {
      margin-top: 0;
    }

    &--no-margin-bottom {
      margin-bottom: 0;
    }

    @each $alignment in $text-alignments {
      &--#{$alignment} {
        text-align: $alignment;
      }
    }

    @each $decoration in $text-decorations {
      $suffix: $decoration + if($decoration == overline, "-decoration", "");

      &--#{$suffix} {
        text-decoration: $decoration;
      }
    }

    @each $transform in $text-transforms {
      &--#{$transform} {
        text-transform: $transform;
      }
    }

    @each $font-style in $font-styles {
      &--#{$font-style} {
        font-style: $font-style;
      }
    }
  }

  @if not $disable-sr-only {
    .rmd-sr-only {
      @include utils.sr-only(true);
    }
  }
}

@mixin text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  display: -webkit-box;
}
