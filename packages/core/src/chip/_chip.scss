@use "sass:color";
@use "sass:map";
@use "../utils";
@use "../box-shadows";
@use "../theme/a11y";
@use "../theme/colors";
@use "../theme/theme";
@use "../typography/typography";
@use "../transition/transition";
@use "../interaction/interaction";
@use "../icon/icon";
@use "../avatar/avatar";
@use "../progress/progress";

$disable-everything: false !default;
$disable-icon: false !default;
$disable-avatar: false !default;
$disable-progress: false !default;
$disable-content: false !default;
$disable-solid-theme: $disable-everything !default;
$disable-solid-raisable: false !default;
$disable-outline-theme: $disable-everything !default;
$disable-outline-raisable: false !default;
$disable-left-addon: false !default;
$disable-right-addon: false !default;
$disable-both-addons: $disable-left-addon and $disable-right-addon !default;
$disable-selected-theme: false !default;
$disable-selectable-icon-transition: false !default;
$disable-noninteractive: false !default;

$gap: icon.$spacing !default;
$height: 2rem !default;
$border-radius: 1rem !default;
$icon-size: 1.125rem !default;
$avatar-size: 1.5rem !default;
$progress-size: $icon-size !default;
$progress-width: 12 !default;
$typography: map.merge(
  typography.$base-font-styles,
  typography.$body-2-styles
) !default;
$horizontal-padding: 0.75rem !default;
$vertical-padding: 0 !default;
$addon-left-padding: 0.25rem !default;
$addon-right-padding: 0.5rem !default;

$selected-transition-duration: transition.$linear-duration;
$selected-transition-timing-function: transition.$linear-timing-function !default;
$theme-background-color: theme.get-swatch(
  theme.$primary-color,
  300,
  false,
  color.adjust(theme.$primary-color, $lightness: -20%)
) !default;
$theme-color: a11y.contrast-color($theme-background-color) !default;

$solid-light-background-color: colors.$grey-300 !default;
$solid-light-disabled-background-color: colors.$grey-100 !default;
$solid-light-color: a11y.contrast-color($solid-light-background-color) !default;
$solid-dark-background-color: if(
  theme.$disable-dark-elevation,
  colors.$grey-900,
  map.get(theme.$dark-elevation-colors, 12)
) !default;
$solid-dark-disabled-background-color: color.adjust(
  colors.$grey-900,
  $lightness: 2%
) !default;
$solid-dark-color: a11y.contrast-color($solid-dark-background-color) !default;
$solid-background-color: if(
  theme.$color-scheme == dark,
  $solid-dark-background-color,
  $solid-light-background-color
) !default;
$solid-disabled-background-color: if(
  theme.$color-scheme == dark,
  $solid-dark-disabled-background-color,
  $solid-light-disabled-background-color
) !default;
$solid-color: if(
  theme.$color-scheme == dark,
  $solid-dark-color,
  $solid-light-color
) !default;
$solid-raisable-box-shadow-z-value: 4 !default;
$solid-raisable-transition-duration: transition.$linear-duration !default;

$outline-box-shadow: inset 0 0 0 0.0625rem colors.$grey-300 !default;
$outline-light-background-color: theme.$light-theme-surface-color !default;
$outline-light-color: a11y.contrast-color(
  $outline-light-background-color
) !default;
$outline-dark-background-color: if(
  theme.$disable-dark-elevation,
  theme.$dark-theme-surface-color,
  map.get(theme.$dark-elevation-colors, 8)
) !default;
$outline-dark-color: a11y.contrast-color(
  $outline-dark-background-color
) !default;
$outline-background-color: if(
  theme.$color-scheme == dark,
  $outline-dark-background-color,
  $outline-light-background-color
) !default;
$outline-color: if(
  theme.$color-scheme == dark,
  $outline-dark-color,
  $outline-light-color
) !default;
$outline-raisable-box-shadow-z-value: 8 !default;
$outline-raisable-transition-duration: transition.$linear-duration !default;

$var-lookup: (
  solid-background-color: (
    var: --rmd-chip-solid-background-color,
    value: $solid-background-color,
  ),
  solid-disabled-background-color: (
    var: --rmd-chip-solid-disabled-background-color,
    value: $solid-disabled-background-color,
  ),
  solid-color: (
    var: --rmd-chip-solid-color,
    value: $solid-color,
  ),
  theme-background-color: (
    var: --rmd-chip-theme-background-color,
    value: $theme-background-color,
  ),
  theme-color: (
    var: --rmd-chip-theme-color,
    value: $theme-color,
  ),
  outline-background-color: (
    var: --rmd-chip-outline-background-color,
    value: $outline-background-color,
  ),
  outline-color: (
    var: --rmd-chip-outline-color,
    value: $outline-color,
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "chip var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "chip var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if not $disable-solid-theme {
    @include set-var(solid-background-color, $solid-light-background-color);
    @include set-var(solid-color, $solid-light-color);
  }

  @if not $disable-outline-theme {
    @include set-var(outline-background-color, $outline-light-background-color);
    @include set-var(outline-color, $outline-light-color);
  }
}

@mixin use-dark-theme {
  @if not $disable-solid-theme {
    @include set-var(solid-background-color, $solid-dark-background-color);
    @include set-var(solid-color, $solid-dark-color);
  }

  @if not $disable-outline-theme {
    @include set-var(outline-background-color, $outline-dark-background-color);
    @include set-var(outline-color, $outline-dark-color);
  }
}

@mixin styles {
  @if not $disable-everything {
    @include theme.default-system-theme {
      @include use-dark-theme;
    }

    .rmd-chip {
      @if not $disable-icon {
        @include icon.set-var(size, $icon-size);
      }

      @if not $disable-avatar {
        @include avatar.set-var(size, $avatar-size);
      }

      @if not $disable-progress {
        @include progress.set-var(circular-size, $progress-size);
        @include progress.set-var(circular-stroke-width, $progress-width);
      }
      @include interaction.surface(
        $disabled-selector: "&:disabled" +
          if($disable-noninteractive, "", ",&--noninteractive")
      );
      @include utils.map-to-styles($typography);

      align-items: center;
      border-radius: $border-radius;
      border-width: 0;
      display: inline-flex;
      flex-shrink: 0;
      gap: $gap;
      height: $height;
      justify-content: center;
      max-width: 100%;
      padding: $vertical-padding $horizontal-padding;

      @if not $disable-solid-theme {
        &--solid {
          @if not $disable-solid-raisable {
            @include box-shadows.elevation-transition(
              $start-z-value: 0,
              $end-z-value: $solid-raisable-box-shadow-z-value,
              $duration: $solid-raisable-transition-duration,
              $active-selectors: "&.rmd-chip--pressed",
              $pseudo-before: false,
              $position-relative: false
            );
          }
          @include use-var(background-color, solid-background-color);
          @include use-var(color, solid-color);
        }
      }

      @if not $disable-outline-theme {
        &--outline {
          @if not $disable-outline-raisable {
            @include box-shadows.box-shadow-transition(
              $start-shadow: $outline-box-shadow,
              $end-shadow:
                box-shadows.box-shadow($outline-raisable-box-shadow-z-value),
              $duration: $outline-raisable-transition-duration,
              $active-selectors: "&.rmd-chip--pressed",
              $pseudo-before: false,
              $position-relative: false
            );
          }
          @include use-var(background-color, outline-background-color);
          @include use-var(color, outline-color);
        }
      }

      @if not $disable-selected-theme {
        &--themed {
          @include use-var(background-color, theme-background-color);
          @include use-var(color, theme-color);
          @if not $disable-icon {
            @include icon.set-var(color, currentcolor);
          }
        }
      }

      &--disabled {
        @include theme.theme-use-var(color, text-disabled-color);
        @if not $disable-icon {
          @include icon.set-var(color, currentcolor);
        }
      }

      @if not $disable-solid-theme {
        &--solid-disabled {
          @include use-var(background-color, solid-disabled-background-color);
        }
      }

      @if not $disable-left-addon {
        &--left-addon {
          @include utils.auto-rtl(
            padding-left,
            $addon-left-padding,
            $horizontal-padding
          );
        }
      }

      @if not $disable-right-addon {
        &--right-addon {
          @include utils.auto-rtl(
            padding-right,
            $addon-right-padding,
            $horizontal-padding
          );
        }
      }

      @if not $disable-both-addons {
        &--surrounded {
          @include utils.auto-rtl(
            padding-left,
            $addon-left-padding,
            $addon-right-padding
          );
          @include utils.auto-rtl(
            padding-right,
            $addon-right-padding,
            $addon-left-padding
          );
        }
      }

      @if not $disable-content {
        &__content {
          @include typography.text-overflow;

          flex: 1 1 auto;
        }
      }

      @if not $disable-selectable-icon-transition {
        &__icon {
          @include utils.auto-rtl(margin-right, -$gap, 0);

          max-width: 0;
          overflow: hidden;
          transition: max-width
            $selected-transition-duration
            $selected-transition-timing-function;

          &--visible {
            @include icon.use-var(max-width, size);
            @include utils.auto-rtl(margin-right, 0);
          }
        }
      }
    }
  }
}
