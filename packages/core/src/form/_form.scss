////
/// @group core.form
////

@use "sass:map";
@use "sass:math";
@use "sass:color";
@use "../utils";
@use "../box-shadows";
@use "../box/box";
@use "../button/button";
@use "../progress/progress";
@use "../theme/colors";
@use "../theme/theme";
@use "../list/list";
@use "../icon/icon";
@use "../tooltip/tooltip";
@use "../transition/transition";
@use "../typography/typography";
@use "../interaction/interaction";

/// The color to use while the form elements are focused. This would
/// apply to things like the border-color/box-shadow and text color.
///
/// @type Color
$form-focus-color: interaction.$focus-color !default;

/// The color to apply to form elements while they are active/checked.
///
/// @type Color
$form-active-color: theme.theme-get-var(primary-color) !default;

/// Set to `true` to disable all form styles.
/// @type Boolean
$form-disable-everything: false !default;

/// Set to `true` to disable the `Formset` component styles
/// @type Boolean
$disable-fieldset: $form-disable-everything !default;

/// Set to `true` to disable the `FormMessage`/`FormMessageContainer` component
/// styles. This also includes the `messageProps` on other form components.
///
/// @type Boolean
$disable-message: $form-disable-everything !default;

/// Set to `true` to disable all the `Label` styles
/// @type Boolean
$disable-label: $form-disable-everything !default;

/// Set to `true` to disable only the floating `Label` styles
/// @type Boolean
$disable-floating-label: $form-disable-everything !default;

/// Set to `true` to disable the `gap` property on a `Label`.
/// @type Boolean
$disable-label-gap: $form-disable-everything !default;

/// Set to `true` to disable the `reversed` styles on a `Label`.
/// @type Boolean
$disable-label-reversed: $form-disable-everything !default;

/// Set to `true` to disable the `stacked` styles for a `Label`.
/// @type Boolean
$disable-label-stacked: $form-disable-everything !default;

/// Set to `true` to disable the `stacked` and `reversed` styles for a `Label`.
/// @type Boolean
$disable-label-stacked-reversed: $form-disable-everything !default;

/// Set to `true` to disable the `TextField` styles
/// @type Boolean
$disable-text-field: $form-disable-everything !default;

/// Set to `true` to disable the `TextArea` styles
/// @type Boolean
$disable-textarea: $form-disable-everything !default;

/// Set to `true` to disable the `Password` styles
/// @type Boolean
$disable-password: $disable-text-field !default;

/// Set to `true` if the addon props will not be used with the `TextField` or
/// `TextArea` components or the `visibilityIcon` prop for the `Password`
/// component.
/// @type Boolean
$disable-text-field-addon: $disable-text-field and $disable-password and
  $disable-textarea !default;

/// Set to `true` if the `::placeholder` text should not automatically ellipsis
/// when there is text overflow.
/// @type Boolean
$disable-placeholder-ellipsis: false !default;

/// Set to `true` to disable the `TextFieldContainer` dense styles.
/// @type Boolean
$disable-text-field-container-dense: false !default;

/// Set to `true` to disable the `Select` styles.
/// @type Boolean
$disable-select: $form-disable-everything !default;

/// Set to `true` to disable the `Option` styles.
/// @type Boolean
$disable-option: $disable-select !default;

/// Set to `true` to disable the `NativeSelect` styles.
/// @type Boolean
$disable-native-select: $form-disable-everything !default;

/// Set to `true` to disable the `multiselect` styles for the `NativeSelect`.
/// @type Boolean
$disable-native-select-multiple: $form-disable-everything !default;

/// Set to `true` to disable the `Checkbox` styles.
/// @type Boolean
$disable-checkbox: $form-disable-everything !default;

/// Set to `true` to disable the `Radio` styles.
/// @type Boolean
$disable-radio: $form-disable-everything !default;

/// Set to `true` to if the `Checkbox` and `Radio` components will always
/// be controlled providing a `checked` prop. This feature flag adds a few more
/// styles to support switching between the icons based on the `input` checked
/// state without JS.
///
/// @type Boolean
$disable-uncontrolled-input-toggles: false !default;

/// Set to `true` to disable the `Switch` styles.
/// @type Boolean
$disable-switch: $form-disable-everything !default;

/// Set to `true` to disable the `CircularProgress` rendered within a `Switch`
/// styles.
/// @type Boolean
$disable-switch-circular-progress: progress.$disable-circular !default;

/// Set to `true` to disable the icon rendered within a `Switch` styles.
/// @type Boolean
$disable-switch-icon: false !default;

/// Set to `true` to disable the `MenuItemCheckbox` styles.
/// @type Boolean
$disable-menu-item-checkbox: $disable-checkbox !default;

/// Set to `true` to disable the `MenuItemRadio` styles.
/// @type Boolean
$disable-menu-item-radio: $disable-radio !default;

/// Set to `true` to disable the `MenuItemSwitch` styles.
/// @type Boolean
$disable-menu-item-switch: $disable-switch !default;

/// Set to `true` to disable the `Slider` styles.
/// @type Boolean
$disable-slider: $form-disable-everything !default;

/// Set to `true` to disable the horizontal `Slider` styles.
/// @type Boolean
$disable-horizontal-slider: $form-disable-everything !default;

/// Set to `true` to disable the vertical `Slider` styles.
/// @type Boolean
$disable-vertical-slider: $form-disable-everything !default;

/// Set to `true` to disable the two-thumb `Slider` styles.
/// @type Boolean
$disable-range-slider: $form-disable-everything !default;

/// Set to `true` to disable the `Slider` styles show the current value in a
/// tooltip.
/// @type Boolean
$disable-discrete-slider: $form-disable-everything !default;

/// Set to `true` to disable the `Slider` styles that show the tick marks below
/// the slider track.
/// @type Boolean
$disable-discrete-slider-marks: $disable-discrete-slider !default;

/// Set to `true` to disable the `Slider` styles that display a label with each
/// tick mark below the slider track.
/// @type Boolean
$disable-discrete-slider-marks-labels: $disable-discrete-slider-marks !default;

/// Set to `true` if the `theme="filled"` will not be used in the app.
///
/// @type Boolean
$disable-text-field-filled-theme: $form-disable-everything !default;

/// Set to `true` if the `theme="outline"` will not be used in the app.
///
/// NOTE: This would require updating the `FORM_CONFIG.theme` value since this
/// is the default theme.
///
/// @type Boolean
$disable-text-field-outlined-theme: $form-disable-everything !default;

/// Set to `true` if the `theme="underline"` will not be used in the app.
///
/// NOTE: If the `$form-theme` is set to `filled`, this will always be `true`
/// since it they depend on the same styles.
///
/// @type Boolean
$disable-text-field-underlined-theme: $form-disable-everything !default;

/// Set to `true` if the inline counter for `TextField`/`TextArea`/`Password`
/// will not be used.
///
/// @type Boolean
$disable-text-field-counter: $form-disable-everything !default;

/// Set to `true` if the underlined theme will not animate from the left.
///
/// NOTE: This would require updating the `FORM_CONFIG.underlineDirection`
/// value since this is the default.
///
/// @type Boolean
$disable-text-field-underline-left: $form-disable-everything !default;

/// Set to `true` if the underlined theme will not animate from the center.
///
/// @type Boolean
$disable-text-field-underline-center: $form-disable-everything !default;

/// Set to `true` if the underlined theme will not animate from the right.
///
/// @type Boolean
$disable-text-field-underline-right: $form-disable-everything !default;

/// Set to `true` if the `TextArea` does not need to support the
/// `resize="auto"` behavior.
///
/// @type Boolean
$disable-textarea-resizing-rows: $form-disable-everything !default;

/// Set to `true` if the `resize="horizontal"` will not be used for the
/// `TextArea`.
/// @type Boolean
$disable-textarea-resize-horizontal: $form-disable-everything !default;

/// Set to `true` if the `resize="vertical"` will not be used for the
/// `TextArea`.
/// @type Boolean
$disable-textarea-resize-vertical: $form-disable-everything !default;

/// The spacing between elements in a `Label`.
///
/// @see $disable-label-gap
/// @type Number
$label-gap: icon.$spacing !default;

/// The default `Label` font size.
///
/// @type Number
$label-font-size: 1em !default;

/// The default `Label` typography.
///
/// @type Map
$label-typography: map.merge(
  typography.$body-1-styles,
  (
    font-size: $label-font-size,
  )
) !default;

/// The distance from the top of the floating label container to position the `Label`
/// while not active.
///
/// @type Number
$label-floating-top: 1rem !default;

/// The distance from the top of the floating label container to position the `Label`
/// while not active and the `dense` prop was enabled.
///
/// @type Number
$label-floating-top-dense: 0.9rem !default;

/// The `transform: scale()` value to apply to the floating label while not active.
/// @type Number
$label-floating-scale: 0.75 !default;

/// The amount of padding to apply to a floating label. This is used to "cover"
/// the outline and add some general spacing.
///
/// @type Number
$label-floating-padding: 0.25rem !default;

/// The default typography for the `FormMessage` component.
/// @type Map
$form-message-typography-styles: map.merge(
  typography.$body-2-styles,
  (
    font-size: 0.75rem,
  )
) !default;

/// The `gap` between elements in the `FormMessageCounter` component .
///
/// @type Number
$form-message-counter-spacing: icon.$spacing !default;

/// The  `margin-top` for the `FormMessage` component.
/// @type Number
$form-message-margin-top: 0.5rem !default;

/// The `margin-bottom` for the `FormMessage` component.
///
/// @type Number
$form-message-margin-bottom: 1rem !default;

/// The `min-height` for the `FormMessage` component.
/// @type Number
$form-message-min-height: 2rem !default;

/// The default `TextField` typography
/// @type Map
$text-field-typography: map.merge(
  typography.$base-font-styles,
  map.merge(
    typography.$body-1-styles,
    (
      font-size: 1em,
    )
  )
) !default;

/// The default `TextField` height.
/// @type Number
$text-field-height: 3rem !default;

/// The default `TextField` height when the `dense` prop is enabled.
/// @type Number
$text-field-dense-height: 2.5rem !default;

/// The default `TextField` height when there is a `label` prop.
/// @type Number
$text-field-label-height: 3.5rem !default;

/// The default `TextField` height when there is a `label` and `dense` prop.
/// @type Number
$text-field-label-dense-height: 3.25rem !default;

/// The `border-radius` for a `TextField`.
/// @type Number
$text-field-border-radius: 0.25rem !default;

/// The `border-width` for a `TextField`.
/// @type Number
$text-field-border-width: 1px !default;

/// The `border-width` for a `TextField` while active or focused.
/// @type Number
$text-field-border-width-active: 2px !default;

/// The amount of horizontal padding to apply to a `TextField` with the
/// `theme="filled"`.
/// @type Number
$text-field-filled-padding: 0.75rem !default;

/// The amount of horizontal padding to apply to a `TextField` with the
/// `theme="outline"`.
/// @type Number
$text-field-outlined-padding: 1rem !default;

/// The amount of horizontal padding to apply to a `TextField` with the
/// `theme="underline"`.
///
/// @type Number
$text-field-underlined-padding: null !default;

/// The amount of height to apply to a `TextField` while the
/// `theme="underline"` and a `label` has not been provided.
///
/// Set this to `null` to disable these styles.
///
/// @type Number
$text-field-underlined-placeholder-height: 2.5rem !default;

/// The amount of padding-top to apply to a `TextField` while the
/// `theme="underline"` and a `label` has not been provided.
///
/// This will be ignored if the `$text-field-underlined-placeholder-height` is
/// `null`.
///
/// @type Number
$text-field-underlined-placeholder-padding-top: 0.5rem !default;

/// The amount of padding-top to apply to addons in a `TextField` while the
/// `theme="underline"`.
///
/// This will be ignored if the `$text-field-underlined-placeholder-height` is
/// `null`.
///
/// @type Number
$text-field-underlined-placeholder-addon-padding-top: 0.25rem !default;

/// The amount of padding-top to apply to the `TextFieldContainer` while the
/// `theme="underline"` and a `label` was provided.
///
/// NOTE: This is the default height of the label with line-height
///
/// @type Number
$text-field-underlined-label-padding-top: 1.5rem !default;

/// The position in the `TextFieldContainer` for a `Label` while the
/// `theme="underline"`.
///
/// @type Number
$text-field-underlined-label-left-offset: icon.$spacing !default;

/// Set this to `null` if not using `<TextField type="color" />` since this is
/// used to apply a `min-width` to color inputs.
///
/// @type Number
$text-field-color-min-width: 5rem !default;

/// The gap to apply between addon elements if multiple were provided.
/// i.e. `leftAddon={<><FavoriteIcon /><CloseIcon /></>}`
///
/// @type Number
$text-field-addon-gap: 0.25rem !default;

/// The amount of margin to apply to addons when the `TextField`
/// `theme="underline"`.
/// @type Number
$text-field-addon-margin: icon.$spacing !default;

/// The amount of spacing between a `TextField` addon and the `<input>`
/// element.
///
/// @type Number
$text-field-addon-spacing: icon.get-var(spacing) !default;

/// The border-color for a `theme="outline"` `TextField` in the light theme.
/// @type Color
$text-field-light-border-color: rgba(#000, 0.12) !default;

/// The border-color for a `theme="outline"` `TextField` in the dark theme.
/// @type Color
$text-field-dark-border-color: rgba(#fff, 0.5) !default;

/// The default border-color for a `theme="outline"` `TextField`.
/// @type Color
$text-field-border-color: theme.get-default-color(
  $text-field-light-border-color,
  $text-field-dark-border-color
) !default;

/// The border-color for a `theme="outline"` `TextField` in the light theme
/// while hovering.
///
/// @type Color
$text-field-light-hover-border-color: rgba(#000, 0.87) !default;

/// The border-color for a `theme="outline"` `TextField` in the dark theme
/// while hovering.
///
/// @type Color
$text-field-dark-hover-border-color: rgba(#fff, 0.87) !default;

/// The default border-color for a `theme="outline"` `TextField` while
/// hovering.
///
/// @type Color
$text-field-hover-border-color: theme.get-default-color(
  $text-field-light-hover-border-color,
  $text-field-dark-hover-border-color
) !default;

/// The background color for `theme="filled"` `TextField` in the light theme.
/// @type Color
$text-field-light-filled-background-color: colors.$grey-100 !default;

/// The background color for `theme="filled"` `TextField` in the dark theme.
/// @type Color
$text-field-dark-filled-background-color: #424242 !default;

/// The default background color for `theme="filled"` `TextField`.
/// @type Color
$text-field-filled-background-color: theme.get-default-color(
  $text-field-light-filled-background-color,
  $text-field-dark-filled-background-color
) !default;

/// The default position for addons within a `TextArea`.
/// @type Number
$textarea-addon-top: 1rem !default;

/// The default vertical padding to apply to `TextArea` which is useful when
/// there is a scrollbar visible. This should normally be enough so that the
/// floating label does not cover the content.
///
/// @type Number
$textarea-vertical-padding: 0.75rem !default;

/// The `padding-left` to apply to a `Password` when there is a visibility
/// icon.
/// @type Number
$password-visibility-toggle-spacing: 0.25rem !default;

/// The addon position within a `NativeSelect`.
/// @type Number
$native-select-addon-top: 1rem !default;

/// The padding to apply to a multiselect `NativeSelect`.
/// @type Number
$native-select-multiple-padding: 0.75rem !default;

/// The padding to apply to a multiselect `NativeSelect` when the
/// `theme="underline"`.
///
/// @type Number
$native-select-multiple-underline-padding: 1.5rem !default;

/// The default icon size for a selected `Option`.
/// @type Number
$option-selected-icon-size: 1rem !default;

/// The default `Option` styles while selected.
/// @type Map
$option-selected-styles: (
  --rmd-icon-color: currentcolor,
  background-color: colors.$blue-900,
  color: colors.$white,
) !default;

/// The `padding-left` to apply to an `Option` when the `disableSelectedIcon`
/// prop has not been enabled.
///
/// @type Number
$option-padding-left: list.$item-horizontal-padding - math.div(
    icon.$size - $option-selected-icon-size,
    2
  ) !default;

/// The spacing between the selected icon and the `Option` content.
/// @type Number
$option-selected-icon-spacing: $option-padding-left !default;

/// The default border-radius for `Checkbox` and `Radio` components.
/// @type Number
$input-toggle-border-radius: 50% !default;

/// The amount of padding to apply around the `Checkbox` and `Radio` icons
/// @type Number
$input-toggle-padding: 0.5em !default;

/// The `Checkbox` and `Radio` size to use when `size="small"`.
///
/// @type Number
$input-toggle-small-size: 1rem !default;

/// The `Checkbox` and `Radio` size to use when `size="dense"`.
///
/// @type Number
$input-toggle-dense-size: icon.$dense-size !default;

/// The `Checkbox` and `Radio` size to use when `size="normal"`.
///
/// @type Number
$input-toggle-normal-size: icon.$size !default;

/// The `Checkbox` and `Radio` size to use when `size="large"`.
///
/// @type Number
$input-toggle-large-size: 2rem !default;

/// The opacity to apply to a `Switch` while disabled.
/// @type Number
$switch-disabled-opacity: 0.5 !default;

/// The `Switch` ball size.
/// @type Number
$switch-ball-size: 1.25em !default;

/// The `Switch` border radius.
/// @type Number
$switch-ball-border-radius: 50% !default;

/// The distance from the `left` and `right` of the `Switch` track to display
/// the ball.
///
/// @type Number
$switch-ball-offset: 0.25em !default;

/// The default `Switch` ball background color.
/// @type Color
$switch-ball-background-color: color.adjust(
  colors.$white,
  $lightness: -5%
) !default;

/// The height of the `Switch` clickable area.
/// @type Number
$switch-track-height: 1em !default;

/// The width of the `Switch` clickable area.
/// @type Number
$switch-track-width: 2.25em !default;

/// The border radius for the `Switch` clickable area.
/// @type Number
$switch-track-border-radius: 0.5em !default;

/// The amount of vertical padding to apply to the `Switch` component.
/// @type Number
$switch-track-vertical-padding: 0.75em !default;

/// The amount of horizontal padding to apply to the `Switch` component.
/// @type Number
$switch-track-horizontal-padding: 0.875em !default;

/// The background color to apply to the `SwitchTrack` in the light theme.
/// @type Color
$switch-track-light-background-color: colors.$grey-400 !default;

/// The background color to apply to the `SwitchTrack` in the dark theme.
/// @type Color
$switch-track-dark-background-color: if(
  theme.$disable-dark-elevation,
  $switch-track-light-background-color,
  map.get(theme.$dark-elevation-colors, 24)
) !default;

/// The default background color to apply to the `SwitchTrack`.
/// @type Color
$switch-track-background-color: theme.get-default-color(
  $switch-track-light-background-color,
  $switch-track-dark-background-color
) !default;

/// The default size for an icon within the `Switch` ball.
/// @type Number
$switch-icon-size: 1em !default;

/// The `circular-stroke-width` to use for a `CircularProgress` rendered within
/// a `Switch` ball.
///
/// @type Number
$switch-circular-progress-width: 12 !default;

/// The `circular-size` to use for a `CircularProgress` rendered within a
/// `Switch` ball.
///
/// @type Number
$switch-circular-progress-size: 1em !default;

/// The `height` of the `Slider`'s track while horizontal or the `width` while
/// vertical.
///
/// @type Number
$slider-size: 2rem !default;

/// The default `height` for a vertical `Slider`.
/// @type Number
$slider-vertical-size: 15rem !default;

/// The default color for a `Slider` and is applied to:
/// - The Slider "thumb",
/// - The active slider track
/// - The inactive slider track (with opacity applied)
///
/// If more color customization is required, set this to `null` and configure
/// the `$slider-track-active-color`, `$slider-track-active-opacity`,
/// `$slider-track-inactive-color`, and `$slider-track-inactive-opacity`
/// instead.
///
/// @see $slider-track-active-color
/// @see $slider-track-active-opacity
/// @see $slider-track-inactive-color
/// @see $slider-track-inactive-opacity
/// @type Color
$slider-track-color: theme.theme-get-var(primary-color) !default;

/// The height/width of the `Slider` track representing the current value. This
/// should normally be greater than or equal to the `$slider-size`.
///
/// @see $slider-size
/// @type Number
$slider-track-active-size: 0.375rem !default;

/// Set this value if additional control is required or the `Slider` active
/// color.
///
/// @see $slider-track-color
/// @type Color
$slider-track-active-color: null !default;

/// An optional opacity value to apply to the active `Slider` color.
///
/// @see $slider-track-color
/// @type Color
$slider-track-active-opacity: null !default;

/// The `z-index` for the active `Slider` track. This normally shouldn't need
/// to be changed but should be greater than the
/// `$slider-track-inactive-z-index`.
///
/// @see $slider-track-inactive-z-index
/// @type Number
$slider-track-active-z-index: 2 !default;

/// The height/width for the inactive `Slider` track.
///
/// @type Number
$slider-track-inactive-size: 0.25rem !default;

/// Set this value if additional control is required or the `Slider` inactive
/// color.
///
/// @see $slider-track-color
/// @type Number
$slider-track-inactive-color: null !default;

/// The opacity to apply to the `Slider` inactive track background color.
///
/// @see $slider-track-color
/// @type Number
$slider-track-inactive-opacity: 0.5 !default;

/// The `z-index` for the inactive `Slider` track. This normally shouldn't need
/// to be changed but should be less than the `$slider-track-active-z-index`
///
/// @see $slider-track-active-z-index
/// @type Number
$slider-track-inactive-z-index: 1 !default;

/// The background-color to apply to a `Slider` track while disabled.
///
/// @type Color
$slider-track-disabled-color: theme.theme-get-var(text-disabled-color) !default;

/// The default height of a discrete `Slider` tick mark.
/// @type Number
$slider-mark-height: $slider-track-inactive-size !default;

/// The default width of a discrete `Slider` tick mark.
/// @type Number
$slider-mark-width: $slider-track-inactive-size !default;

/// The default border-radius for a discrete `Slider` tick mark.
/// @type Number
$slider-mark-border-radius: 50% !default;

/// The light theme `Slider` tick mark color.
/// @type Color
$slider-mark-light-active-color: theme.theme-get-var(on-primary-color) !default;

/// The dark theme `Slider` tick mark color.
/// @type Color
$slider-mark-dark-active-color: $slider-mark-light-active-color !default;

/// The light theme `Slider` tick mark opacity.
/// @type Number
$slider-mark-light-active-opacity: 0.38 !default;

/// The dark theme `Slider` tick mark opacity.
/// @type Number
$slider-mark-dark-active-opacity: 0.38 !default;

/// The default `Slider` tick mark color.
/// @type Color
$slider-mark-active-color: theme.get-default-color(
  $slider-mark-light-active-color,
  $slider-mark-dark-active-color
) !default;

/// The default `Slider` tick mark opacity.
/// @type Number
$slider-mark-active-opacity: theme.get-default-color(
  $slider-mark-light-active-opacity,
  $slider-mark-dark-active-opacity
) !default;

/// The light theme color for a `Slider` mark that is not covered by the active
/// `Slider` track.
/// @type Color
$slider-mark-light-inactive-color: colors.$black !default;

/// The dark theme color for a `Slider` mark that is not covered by the active
/// `Slider` track.
/// @type Color
$slider-mark-dark-inactive-color: colors.$white !default;

/// The default color for a `Slider` mark that is not covered by the active
/// `Slider` track.
///
/// @type Color
$slider-mark-inactive-color: theme.get-default-color(
  $slider-mark-light-inactive-color,
  $slider-mark-dark-inactive-color
) !default;

/// The default opacity to apply to the light theme `Slider` mark.
/// @type Number
$slider-mark-light-inactive-opacity: 1 !default;

/// The default opacity to apply to the dark theme `Slider` mark.
/// @type Number
$slider-mark-dark-inactive-opacity: 0.8 !default;

/// The default opacity to apply to the `Slider` mark.
/// @type Number
$slider-mark-inactive-opacity: theme.get-default-color(
  $slider-mark-light-inactive-opacity,
  $slider-mark-dark-inactive-opacity
) !default;

/// The z-index for an inactive `Slider` mark.
/// @type Number
$slider-mark-inactive-z-index: 1 !default;

/// The z-index for an active `Slider` mark.
/// @type Number
$slider-mark-active-z-index: $slider-track-active-z-index + 1 !default;

/// The size for the `Slider` thumb.
/// @type Number
$slider-thumb-size: 1.25rem !default;

/// The `border-radius` for the `Slider` thumb.
/// @type Number
$slider-thumb-border-radius: 50% !default;

/// The amount of opacity to apply to the focused/active state of the `Slider`
/// thumb.
///
/// @see $slider-thumb-focus-scale
/// @see $slider-thumb-active-scale
/// @type Number
$slider-thumb-bubble-opacity: 0.3 !default;

/// The `z-index` for the `Slider` thumb.
/// @type Number
$slider-thumb-z-index: $slider-track-active-z-index !default;

/// The size of the focused state for a `Slider` thumb.
///
/// @see $slider-thumb-bubble-opacity
/// @type Number
$slider-thumb-focus-scale: 2 !default;

/// The size of the active state for a `Slider` thumb.
///
/// @see $slider-thumb-bubble-opacity
/// @type Number
$slider-thumb-active-scale: 2.5 !default;

/// The size of a disabled `Slider` thumb.
///
/// @see $slider-thumb-mask-scale
/// @type Number
$slider-thumb-disabled-scale: 0.5 !default;

/// The size of a disabled `Slider` thumb which is used to apply the spacing
/// between the track and thumb. This should be larger than the
/// `$slider-thumb-disabled-scale`
///
/// @see $slider-thumb-disabled-scale
/// @type Number
$slider-thumb-mask-scale: 0.8 !default;

/// The disabled color for a `Slider` thumb.
/// @type Color
$slider-thumb-disabled-color: $slider-track-disabled-color !default;

/// The discrete `Slider` tooltip caret size which is generated using `border`.
/// @type Number
$slider-tooltip-caret-size: 0.3rem !default;

/// The top/left for the discrete `Slider` tooltip.
/// @type Number
$slider-tooltip-offset: -($slider-thumb-size + icon.$spacing) !default;

/// The `z-index` for the discrete `Slider` tooltip.
/// @type Number
$slider-tooltip-z-index: 0 !default;

/// The amount of padding to apply around the `Slider` component and also the
/// "touch" area for the `Slider`. This should generally be at least 1/2 the
/// `$slider-thumb-size` so it does not overlap other elements.
///
/// @type Number
$slider-container-padding: $slider-thumb-size * 0.5 !default;

/// The amount of spacing between a `Slider` addon and the `SliderTrack`.
/// @type Number
$slider-container-addon-spacing: $slider-thumb-size !default;

/// The `transition-duration` to apply to the `Slider` while the next value
/// should animate.
/// @type Number
$slider-transition-duration: transition.$linear-duration !default;

/// The `transition-timing-function` to apply to the `Slider` while the next
/// value should animate.
/// @type Number
$slider-transition-timing-function: transition.$linear-timing-function !default;

/// internal variable helpers
/// @access private
/// @type Boolean
$_disable-text-field-container: $disable-text-field and $disable-password and
  $disable-textarea and $disable-select and $disable-native-select;

/// The available configurable css variables and mostly used internally for the
/// `get-var`, `set-var`, and `use-var` utils.
/// @type List
$form-variables: (
  active-color,
  focus-color,
  addon-top,
  addon-spacing,
  addon-margin-top,
  addon-left-offset,
  label-floating-top,
  label-left-offset,
  label-top-offset,
  label-active-padding,
  label-active-background-color,
  text-field-height,
  text-field-padding-left,
  text-field-padding-right,
  text-field-padding-top,
  text-field-border-color,
  text-field-hover-border-color,
  text-field-filled-color,
  text-field-filled-padding,
  text-field-outlined-padding,
  text-field-underlined-padding,
  textarea-height,
  textarea-padding,
  switch-track-background-color,
  switch-ball-background-color,
  slider-color,
  slider-active-color,
  slider-inactive-color,
  slider-size,
  slider-active-size,
  slider-inactive-size,
  slider-vertical-size,
  slider-offset-1,
  slider-offset-2,
  slider-tooltip-scale,
  slider-tooltip-translate,
  slider-mark-offset,
  slider-mark-active-color,
  slider-mark-active-opacity,
  slider-mark-inactive-color,
  slider-mark-inactive-opacity
);

/// @param {String} name - The supported variable name
/// @param {any} fallback [null] - An optional fallback value
/// @returns {String} a `var()` statement
@function form-get-var($name, $fallback: null) {
  $var: utils.get-var-name($form-variables, $name, "form");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

/// @param {String} name - The supported variable name
/// @param {any} value - The value to set the variable to. Supports `null` which
/// will just be a no-op.
@mixin form-set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($form-variables, $name, "form")}: #{$value};
  }
}

/// @param {String} property - The css property to apply the variable to
/// @param {String} name [$property] - The supported variable name
/// @param {any} fallback [null] - An optional fallback value if the variable
/// has not been set
@mixin form-use-var($property, $name: $property, $fallback: null) {
  #{$property}: form-get-var($name, $fallback);
}

/// Applies the light the variables based on feature flags
@mixin form-use-light-theme {
  @if not $form-disable-everything {
    @include form-set-var(
      text-field-border-color,
      $text-field-light-border-color
    );
    @include form-set-var(
      text-field-hover-border-color,
      $text-field-light-hover-border-color
    );
    @if not $disable-text-field-filled-theme {
      @include form-set-var(
        text-field-filled-color,
        $text-field-light-filled-background-color
      );
    }
    @if not $disable-switch {
      @include form-set-var(
        switch-track-background-color,
        $switch-track-light-background-color
      );
    }
  }

  @if not $disable-discrete-slider-marks {
    @if $slider-mark-light-active-color and
      $slider-mark-light-active-color !=
      $slider-mark-dark-active-color
    {
      @include form-set-var(
        slider-mark-active-color,
        $slider-mark-light-active-color
      );
    }

    @if $slider-mark-light-inactive-color and
      $slider-mark-light-inactive-color !=
      $slider-mark-dark-inactive-color
    {
      @include form-set-var(
        slider-mark-inactive-color,
        $slider-mark-light-inactive-color
      );
    }
    @if $slider-mark-light-inactive-opacity and
      $slider-mark-light-inactive-opacity !=
      $slider-mark-dark-inactive-opacity
    {
      @include form-set-var(
        slider-mark-inactive-opacity,
        $slider-mark-light-inactive-opacity
      );
    }
  }
}

/// Applies the dark the variables based on feature flags
@mixin form-use-dark-theme {
  @if not $form-disable-everything {
    @include form-set-var(
      text-field-border-color,
      $text-field-dark-border-color
    );
    @include form-set-var(
      text-field-hover-border-color,
      $text-field-dark-hover-border-color
    );
    @if not $disable-text-field-filled-theme {
      @include form-set-var(
        text-field-filled-color,
        $text-field-dark-filled-background-color
      );
    }
    @if not $disable-switch {
      @include form-set-var(
        switch-track-background-color,
        $switch-track-dark-background-color
      );
    }
  }

  @if not $disable-discrete-slider-marks {
    @if $slider-mark-dark-active-color and
      $slider-mark-light-active-color !=
      $slider-mark-dark-active-color
    {
      @include form-set-var(
        slider-mark-active-color,
        $slider-mark-dark-active-color
      );
    }

    @if $slider-mark-dark-inactive-color and
      $slider-mark-light-inactive-color !=
      $slider-mark-dark-inactive-color
    {
      @include form-set-var(
        slider-mark-inactive-color,
        $slider-mark-dark-inactive-color
      );
    }
    @if $slider-mark-dark-inactive-opacity and
      $slider-mark-light-inactive-opacity !=
      $slider-mark-dark-inactive-opacity
    {
      @include form-set-var(
        slider-mark-inactive-opacity,
        $slider-mark-dark-inactive-opacity
      );
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin form-message-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-form-message-container {
      display: flex;
      flex-direction: column;
      width: 100%;
    }

    .rmd-form-message {
      @include utils.map-to-styles($form-message-typography-styles);

      display: flex;
      margin: $form-message-margin-top 0 $form-message-margin-bottom;
      min-height: $form-message-min-height;

      @if not $disable-text-field-filled-theme {
        &--filled {
          @include form-use-var(padding-left, text-field-filled-padding);
          @include form-use-var(padding-right, text-field-filled-padding);
        }
      }

      @if not $disable-text-field-outlined-theme {
        &--outline {
          @include form-use-var(padding-left, text-field-outlined-padding);
          @include form-use-var(padding-right, text-field-outlined-padding);
        }
      }

      @if not $disable-text-field-underlined-theme {
        &--underline {
          @include form-use-var(padding-left, text-field-underlined-padding);
          @include form-use-var(padding-right, text-field-underlined-padding);
        }
      }

      &__message {
        margin: 0;
      }

      @if not $disable-text-field-counter {
        &__counter {
          flex-shrink: 0;
          margin-left: auto;
          padding-left: $form-message-counter-spacing;
          white-space: nowrap;

          @include utils.rtl {
            margin-left: 0;
            margin-right: auto;
            padding-left: 0;
            padding-right: $form-message-counter-spacing;
          }
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin label-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-label {
      @include utils.map-to-styles($label-typography);

      align-items: center;
      display: inline-flex;
      transition-duration: transition.$linear-duration;
      transition-property: background-color, transform;

      $active-selector: "&--active";
      @if not $_disable-text-field-container {
        $active-selector: $active-selector +
          ", .rmd-text-field-container:focus-within &";
      }

      #{$active-selector} {
        @include form-use-var(color, focus-color);
      }

      @if not $disable-floating-label {
        &--floating {
          left: 0;
          position: absolute;
          top: 0;
          transform: translate(
            form-get-var(text-field-padding-left),
            form-get-var(label-floating-top)
          );

          @include utils.rtl {
            left: auto;
            right: 0;
            transform: translate(
              utils.negate-var(form-get-var(text-field-padding-left)),
              form-get-var(label-floating-top)
            );
          }
        }

        &--floating-dense {
          @include form-set-var(label-floating-top, $label-floating-top-dense);
        }

        $floating-active-selector: "&--floating-active";
        @if not
          $disable-text-field or not
          $disable-password or not
          $disable-textarea or not
          $disable-select
        {
          // The label should automatically float while the input is not focused
          // and there is a value the label _should_ always be the next element.
          // However, password managers might inject an element in the DOM
          // before the label to display their way of autocompleting the field
          // so it also needs to support the label appearing anywhere after the
          // input instead of the next element. It should also ignore the select
          // field since it is more of a hidden input. Here are a few examples:
          //
          // ```html
          // <!-- Simple TextField with no password manager -->
          // <input class="rmd-text-field" type="text" />
          // <label class="rmd-label rmd-label--floating"></label>
          //
          // <!-- Simple TextField with password manager -->
          // <input class="rmd-text-field" type="text" />
          // <div style="position: relative !important; ...">...</div>
          // <label class="rmd-label rmd-label--floating"></label>
          //
          // <!-- Simple Select -->
          // <input class="rmd-select rmd-text-field" type="text" />
          // <span class="rmd-label rmd-label--floating"></span>
          // ```
          $valued-input: ", .rmd-text-field:where(:not(:placeholder-shown))";

          // so this targets the TextField with no password manager
          $valued-input-with-floating-label-next-element: $valued-input +
            " + &--floating";
          // this targets the TextField with a password manager and excludes the
          // Select
          $valued-input-with-floating-label-any-relative-element: $valued-input +
            " ~ :where(:not(.rmd-select)) ~ &--floating";

          $text-field-floating: $valued-input-with-floating-label-next-element +
            $valued-input-with-floating-label-any-relative-element;

          $floating-active-selector: $floating-active-selector +
            ", .rmd-text-field-container:focus-within &--floating" +
            $text-field-floating;
        }
        @if not $disable-native-select {
          $floating-active-selector: $floating-active-selector +
            ", .rmd-native-select[multiple] ~ &--floating" +
            ", .rmd-native-select:where(:not(:invalid)) ~ &--floating";
        }

        #{$floating-active-selector} {
          @include form-use-var(
            background-color,
            label-active-background-color
          );
          @include form-use-var(padding, label-active-padding);

          transform: scale($label-floating-scale)
            translate(
              form-get-var(label-left-offset),
              form-get-var(label-top-offset)
            );
          // need to add the `transform-origin` because of the scaling applied.
          // it'll change the position based on the size of the label otherwise
          transform-origin: 0 0;
          z-index: 1;

          @include utils.rtl {
            transform: scale($label-floating-scale)
              translate(
                utils.negate-var(form-get-var(label-left-offset)),
                form-get-var(label-top-offset)
              );
            transform-origin: 100% 0;
          }
        }
      }

      @if not $disable-label-gap {
        &--gap {
          gap: $label-gap;
        }
      }

      @if not $disable-label-reversed {
        &--reversed {
          flex-direction: row-reverse;
          // this makes it so the content is at the starting edge
          justify-content: flex-end;
        }
      }

      @if not $disable-label-stacked {
        &--stacked {
          flex-direction: column;
        }
      }

      @if not $disable-label-stacked-reversed {
        &--stacked-reversed {
          flex-direction: column-reverse;
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin text-field-container-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-text-field-container {
      @include form-use-var(height, text-field-height);

      align-items: center;
      display: flex;
      flex: 1 1 auto;
      position: relative;
      width: 100%;

      @if not $disable-text-field-container-dense {
        &--dense {
          @include form-set-var(text-field-height, $text-field-dense-height);
        }

        &--dense-label {
          @include form-set-var(
            text-field-height,
            $text-field-label-dense-height
          );
        }
      }

      &--inline {
        display: inline-flex;
        width: auto;
      }

      &--label {
        @include form-set-var(text-field-height, $text-field-label-height);
      }

      &--error {
        @if not $disable-text-field-addon {
          @include icon.set-var(color, currentcolor);
        }
        @include form-set-var(active-color, currentcolor);
        @include form-set-var(focus-color, currentcolor);

        @if not
          $disable-text-field-underlined-theme or not
          $disable-text-field-outlined-theme
        {
          @include form-set-var(
            text-field-border-color,
            theme.theme-get-var(error-color)
          );
          @include form-set-var(
            text-field-hover-border-color,
            theme.theme-get-var(error-color)
          );
        }
      }

      &--hoverable:hover {
        @include form-set-var(
          text-field-border-color,
          form-get-var(text-field-hover-border-color)
        );
      }

      @if not $disable-text-field-outlined-theme {
        &--outline {
          @include form-set-var(
            text-field-padding-left,
            form-get-var(text-field-outlined-padding)
          );
          @include form-set-var(
            text-field-padding-right,
            form-get-var(text-field-outlined-padding)
          );
          @include form-use-var(border-color, text-field-border-color);
          @if not $disable-text-field-addon {
            @include form-set-var(
              addon-left-offset,
              form-get-var(text-field-outlined-padding)
            );
          }

          @if not $disable-floating-label {
            @include form-set-var(
              label-left-offset,
              form-get-var(text-field-outlined-padding)
            );
            @include form-set-var(label-top-offset, -50%);
            @include form-set-var(
              label-active-padding,
              0 $label-floating-padding
            );
            @include form-set-var(
              label-active-background-color,
              theme.theme-get-var(background-color)
            );
          }

          border-radius: $text-field-border-radius;
          border-style: solid;
          border-width: $text-field-border-width;
        }

        &--outline:focus-within,
        &--outline-active {
          @include interaction.outline(
            $box-shadow: false,
            $color: interaction.get-var(focus-color),
            $outline-offset: false
          );

          @if not interaction.$disable-outline-offset {
            outline-offset: calc($text-field-border-width * -1);
          }
        }

        &--outline-error {
          @include interaction.set-var(focus-color, currentcolor);
        }

        @if not $disable-text-field-addon {
          &--outline-left {
            $distance: calc(
              icon.get-var(size) +
                form-get-var(text-field-outlined-padding) +
                form-get-var(addon-spacing)
            );

            @include form-set-var(text-field-padding-left, $distance);
          }

          &--outline-right {
            $distance: calc(
              icon.get-var(size) + calc(form-get-var(addon-spacing) * 2)
            );

            @include form-set-var(text-field-padding-right, $distance);
          }
        }
      }

      @if not $disable-text-field-filled-theme {
        &--filled {
          @include theme.theme-set-var(
            background-color,
            form-get-var(text-field-filled-color)
          );
          @include theme.theme-use-var(background-color);
          @include form-set-var(
            text-field-padding-left,
            $text-field-filled-padding
          );
          @include form-set-var(
            text-field-padding-right,
            $text-field-filled-padding
          );
          @if not $disable-floating-label {
            @include form-set-var(
              label-left-offset,
              $text-field-filled-padding + $label-floating-padding
            );
          }

          @if not $disable-text-field-addon {
            @include form-set-var(
              addon-left-offset,
              $text-field-filled-padding
            );
          }
        }
      }

      // the filled theme uses the same styles as underline
      @if not
        $disable-text-field-underlined-theme or not
        $disable-text-field-filled-theme
      {
        &--underline {
          @include form-use-var(border-color, text-field-border-color);

          border-bottom-style: solid;
          border-bottom-width: $text-field-border-width;

          @if $text-field-underlined-padding {
            @include form-set-var(
              text-field-padding-left,
              $text-field-underlined-padding
            );
            @include form-set-var(
              text-field-padding-right,
              $text-field-underlined-padding
            );
          }

          &::after {
            @include form-use-var(background-color, focus-color);

            bottom: -$text-field-border-width;
            content: "";
            height: $text-field-border-width-active;
            left: 0;
            position: absolute;
            right: 0;
            transform: scale(0);
            transition: transform
              transition.$linear-duration
              transition.$linear-timing-function;
            z-index: 1;
          }
        }

        @if $text-field-underlined-placeholder-height {
          &--underline-placeholder {
            @include form-set-var(
              text-field-padding-top,
              $text-field-underlined-placeholder-addon-padding-top
            );
            height: $text-field-underlined-placeholder-height;
          }

          &--underline-placeholder-only {
            @include form-set-var(
              text-field-padding-top,
              $text-field-underlined-placeholder-padding-top
            );
          }
        }

        &--underline-labelled {
          @include form-set-var(
            text-field-padding-top,
            $text-field-underlined-label-padding-top
          );
          @include form-set-var(addon-margin-top, $text-field-addon-margin);
        }

        @if not $disable-text-field-underline-left {
          &--underline-left::after {
            transform-origin: left;
          }
        }

        @if not $disable-text-field-underline-center {
          &--underline-center::after {
            transform-origin: center;
          }
        }

        @if not $disable-text-field-underline-right {
          &--underline-right::after {
            transform-origin: right;
          }
        }

        &:focus-within::after,
        &--underline-active::after {
          transform: scale(1);
        }

        @if not $disable-text-field-addon {
          $addon-offset: "#{icon.get-var(size)} + #{$text-field-underlined-label-left-offset * 2}";
          @if $text-field-underlined-padding {
            $addon-offset: "#{$addon-offset} + #{$text-field-underlined-padding}";
          }

          &--underline-left-addon {
            @include form-set-var(
              text-field-padding-left,
              calc(#{$addon-offset})
            );
          }

          &--underline-right-addon {
            @include form-set-var(
              text-field-padding-right,
              calc(#{$addon-offset})
            );
          }
        }
      }
    }
  }
}

/// @access private
@mixin _text-field-base-styles {
  @include utils.map-to-styles($text-field-typography);
  @include form-use-var(padding-left, text-field-padding-left);
  @include form-use-var(padding-right, text-field-padding-right);
  @include form-use-var(padding-top, text-field-padding-top);

  background-color: transparent;
  border-width: 0;
  color: inherit;
  flex: 1 1 auto;
  height: 100%;
  outline: none;
  width: 100%;
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin text-field-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-text-field {
      @include _text-field-base-styles;

      &[disabled] {
        @include theme.theme-use-var(color, text-disabled-color);
      }

      @if $text-field-color-min-width {
        &[type="color"] {
          min-width: $text-field-color-min-width;
        }
      }

      &::placeholder {
        @if not $disable-placeholder-ellipsis {
          @include typography.text-overflow;
        }

        @include theme.theme-use-var(color, text-secondary-color);
        // want to gain the same font styles as the input/textarea itself,
        // just apply different colors as needed instead. Can't just do font: inherit
        // since it'll break the styles in firefox.
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;

        // fix firefox setting opacity to 0.54 by default
        opacity: 1;

        // Note: doesn't look like firefox applies css transitions to placeholder text?
        transition: opacity transition.$linear-duration;
      }

      &[disabled]::placeholder {
        color: inherit;
      }

      &--placeholder-hidden:not(:focus)::placeholder {
        opacity: 0;
      }

      @include utils.rtl {
        @include form-use-var(padding-left, text-field-padding-right);
        @include form-use-var(padding-right, text-field-padding-left);
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin password-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-password {
      @include form-set-var(
        text-field-padding-right,
        $password-visibility-toggle-spacing
      );

      &__input {
        @include button.use-var(margin-right, icon-size);

        @include utils.rtl {
          @include button.use-var(margin-left, icon-size);

          margin-right: 0;
        }
      }

      &__toggle {
        position: absolute;
        right: 0;

        @include utils.rtl {
          left: 0;
          right: auto;
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin textarea-container-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-textarea-container {
      @include form-set-var(addon-top, $textarea-addon-top);

      height: auto;
      max-width: 100%;
      padding-top: calc(
        #{form-get-var(text-field-padding-top)} +
          #{form-get-var(textarea-padding)}
      );

      &--cursor:hover {
        // need to add this cursor back since the textarea container adds padding to
        // itself instead of the textarea so it loses this cursor. the container
        // element will still focus the textarea when clicked
        cursor: text;
      }

      @if not
        $disable-text-field-filled-theme or not
        $disable-text-field-underlined-theme
      {
        &--underline-labelled {
          @include form-set-var(textarea-padding, 0px);
          @include form-set-var(
            label-floating-top,
            $text-field-underlined-label-padding-top
          );
        }
      }

      @if not $disable-textarea-resizing-rows {
        &--height {
          height: calc(
            #{form-get-var(text-field-padding-top)} +
              #{form-get-var(textarea-padding)} +
              #{form-get-var(textarea-height)}
          );
        }

        &--animate {
          transition: height
            transition.$linear-duration
            transition.$linear-timing-function;
        }

        &__inner {
          height: form-get-var(textarea-height, 100%);
          width: 100%;

          &--animate {
            transition: height
              transition.$linear-duration
              transition.$linear-timing-function;
          }
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin textarea-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-textarea {
      @include form-set-var(text-field-padding-top, 0px);
      @include form-use-var(min-height, text-field-height);

      height: form-get-var(textarea-height, 100%);

      @if not $disable-textarea-resize-horizontal {
        &--rh {
          resize: horizontal;
        }
      }

      @if not $disable-textarea-resize-vertical {
        &--rv {
          resize: vertical;
        }
      }

      &--rn {
        overflow: hidden;
        resize: none;
      }

      // only want the textarea to be scrollable if there's a limit on the rows
      // since it'll flash the scrollbar on most OS during the height transition
      &--scrollable {
        overflow: auto;
      }

      @if not $disable-textarea-resizing-rows {
        &--mask {
          height: auto;
          left: 0;
          opacity: 0;
          overflow: hidden;
          pointer-events: none;
          position: absolute;
          right: 0;
          z-index: -1;
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin select-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-select-container {
      outline-style: none;
    }

    .rmd-selected-option {
      position: absolute;
    }

    .rmd-select {
      opacity: 0;

      // All these additional overrides are provided so that the select will have
      // the same sizing as a text field with the same props provided.
      @if not $disable-text-field-underlined-theme {
        &--underline {
          padding-right: 0;

          @include utils.rtl {
            @include form-use-var(padding-right, text-field-padding-left);

            padding-left: 0;
          }
        }
      }

      @if not $disable-text-field-outlined-theme {
        &--outline {
          @include form-use-var(padding-right, text-field-outlined-padding);
          @include utils.rtl {
            @include form-use-var(padding-left, text-field-outlined-padding);
            @include form-use-var(padding-right, text-field-padding-left);
          }
        }
      }

      @if not $disable-text-field-filled-theme {
        &--filled {
          @include form-use-var(padding-right, text-field-filled-padding);
          @include utils.rtl {
            @include form-use-var(padding-right, text-field-padding-left);

            @include form-use-var(padding-left, text-field-filled-padding);
          }
        }
      }

      // disable pointer events on touch devices so the soft keyboard does not
      // appear when clicking the select
      @media (hover: none) and (pointer: coarse) {
        pointer-events: none;
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin option-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-option {
      &--icon {
        padding-left: $option-padding-left;

        @include utils.rtl {
          @include list.use-var(padding-left, item-horizontal-padding);

          padding-right: $option-padding-left;
        }
      }

      &--selected {
        @include utils.map-to-styles($option-selected-styles);
      }

      &__icon {
        @include icon.set-var(spacing, $option-selected-icon-spacing);
        @include icon.set-var(size, $option-selected-icon-size);
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin native-select-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    @if not $disable-native-select-multiple {
      .rmd-native-select-container {
        &--multi {
          @include form-set-var(addon-top, $native-select-addon-top);
          @include form-use-var(min-height, text-field-height);

          height: auto;
        }

        &--padded {
          padding-top: $native-select-multiple-padding;
        }

        @if not
          $disable-text-field-filled-theme or not
          $disable-text-field-underlined-theme
        {
          &--underline {
            @include form-set-var(text-field-padding-top, 0);
          }

          &--underline-padded {
            padding-top: $native-select-multiple-underline-padding;
          }
        }
      }
    }

    .rmd-native-select {
      @include _text-field-base-styles;
      @include typography.text-overflow;

      appearance: none;

      &[disabled] {
        @include theme.theme-use-var(color, text-disabled-color);
      }

      &[multiple] {
        overflow: auto;
      }

      @include utils.rtl {
        @include form-use-var(padding-left, text-field-padding-right);
        @include form-use-var(padding-right, text-field-padding-left);
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin text-field-addon-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-text-field-addon {
      @if $text-field-addon-gap {
        @include box.set-var(gap, $text-field-addon-gap);
      }
      @if not
        $disable-text-field-filled-theme or not
        $disable-text-field-underlined-theme
      {
        @include form-use-var(margin-top, addon-margin-top);
      }

      // this makes it so that this container element is the same size as the
      // child (normally icons). without this, icons would have a height of 30.5px
      // and no longer be centered
      position: absolute;

      // Note: Can't use `:first-child` and `:last-child` since
      // password/autocomplete managers might add another element into the
      // `.rmd-text-field-container` which would prevent these styles from being
      // applied
      &--before {
        @include form-use-var(left, addon-left-offset);

        @include utils.rtl {
          @include form-use-var(right, addon-left-offset);
          left: auto;
        }
      }

      &--after {
        @include form-use-var(right, addon-spacing);

        @include utils.rtl {
          @include form-use-var(left, addon-spacing);
          right: auto;
        }
      }

      &--presentational {
        pointer-events: none;
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin hidden-input-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-hidden-input {
      height: 100%;
      inset: 0;
      margin: 0;
      opacity: 0;
      position: absolute;
      width: 100%;
      z-index: 1;

      &:not(:disabled):hover {
        cursor: pointer;
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin input-toggle-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-input-toggle {
      @include icon.set-var(color, currentcolor);
      @include interaction.surface(
        $focus-selector: if(
            utils.$disable-has-selectors or utils.$disable-focus-visible,
            "&:focus-within",
            "&:has(:focus-visible)"
          ),
        $keyboard-only-focus: utils.$disable-has-selectors or
          utils.$disable-focus-visible,
        $disabled-selector: "&--disabled",
        $higher-contrast: false
      );

      // stylelint-disable-next-line no-duplicate-selectors
      & {
        align-items: center;
        border-radius: $input-toggle-border-radius;
        display: inline-flex;
        flex-shrink: 0;
        justify-content: center;
        padding: $input-toggle-padding;
      }

      &--em {
        @include icon.set-var(size, 1em);
      }

      &--active {
        @include form-use-var(
          color,
          active-color,
          theme.theme-color-var-fallback($form-active-color)
        );
      }

      @if $input-toggle-small-size {
        &--small {
          font-size: $input-toggle-small-size;
        }
      }

      @if $input-toggle-dense-size {
        &--dense {
          font-size: $input-toggle-dense-size;
        }
      }

      @if $input-toggle-normal-size {
        &--normal {
          font-size: $input-toggle-normal-size;
        }
      }

      @if $input-toggle-large-size {
        &--large {
          font-size: $input-toggle-large-size;
        }
      }

      @if not $disable-uncontrolled-input-toggles {
        &--uncontrolled {
          $icon-color-selector: ".rmd-hidden-input:where(:checked:not(:disabled)) ~ .rmd-icon";
          $unchecked-icon-selector: "~ :nth-child(-n + 1 of .rmd-icon)";
          $checked-icon-selector: "~ :nth-child(n + 2 of .rmd-icon)";
          // make sure the active color from the label also applies to the icon when
          // checked
          .rmd-label--active & #{$icon-color-selector} {
            @include form-use-var(color, focus-color);
          }

          // make sure the error color applies to the icon when checked
          &:where(:not(.rmd-error-color)) #{$icon-color-selector} {
            @include form-use-var(
              color,
              active-color,
              theme.theme-color-var-fallback($form-active-color)
            );
          }

          // when the input is checked, hide the first icon (unchecked state)
          // when the input is not checked, hide the second icon (checked state)
          .rmd-hidden-input:checked #{$unchecked-icon-selector},
          .rmd-hidden-input:not(:checked) #{$checked-icon-selector} {
            opacity: 0;
            position: absolute;
          }
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin switch-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-switch {
      padding: $switch-track-vertical-padding $switch-track-horizontal-padding;

      &--clickable:hover {
        cursor: pointer;
      }

      &--current-color,
      &--current-color .rmd-switch__input:checked + .rmd-switch__ball {
        @include form-set-var(switch-ball-background-color, currentcolor);
      }

      &__input {
        @if utils.$disable-focus-visible {
          @include utils.keyboard-only {
            &:focus + .rmd-switch__ball::before {
              @include interaction.focus-styles;
            }
          }
        } @else {
          &:focus-visible + .rmd-switch__ball::before {
            @include interaction.focus-styles;
          }
        }

        &:disabled + .rmd-switch__ball {
          cursor: auto;

          &:hover::before {
            @include interaction.set-var(background-color, transparent);
          }
        }
      }

      &__track {
        @if not $disable-switch-circular-progress {
          @include progress.set-var(
            circular-stroke-width,
            $switch-circular-progress-width
          );
          @include progress.set-var(
            circular-size,
            $switch-circular-progress-size
          );
        }
        @if not $disable-switch-icon {
          @include icon.set-var(size, $switch-icon-size);
        }
        @include form-use-var(background-color, switch-track-background-color);

        border-radius: $switch-track-border-radius;
        height: $switch-track-height;
        position: relative;
        transition: background-color transition.$linear-duration
          transition.$linear-timing-function;
        width: $switch-track-width;

        &--disabled {
          opacity: $switch-disabled-opacity;
        }
      }

      &__ball {
        // The focus and disabled states are handled by the `.rmd-switch__input`'s
        // :focus and :disabled' states instead.
        @include interaction.surface(
          $focus-selector: null,
          $disabled-selector: null,
          $clickable: false
        );

        // stylelint-disable-next-line no-duplicate-selectors
        & {
          align-items: center;
          border-radius: $switch-ball-border-radius;
          display: flex;
          height: $switch-ball-size * 2;
          justify-content: center;
          left: calc(-50% + #{$switch-ball-offset});
          top: calc(-50% - #{$switch-ball-size - $switch-track-height});
          transition-duration: transition.$linear-duration;
          transition-property: background-color, transform;
          transition-timing-function: transition.$linear-timing-function;
          width: $switch-ball-size * 2;
          z-index: 1;
        }

        &::after {
          @include form-use-var(background-color, switch-ball-background-color);

          border-radius: inherit;
          box-shadow: box-shadows.box-shadow(1);
          content: "";
          height: $switch-ball-size;
          left: 25%;
          pointer-events: none;
          position: absolute;
          top: 25%;
          width: $switch-ball-size;
          z-index: 0;
        }

        $active-selector: ".rmd-switch__input:checked + &" +
          if($disable-menu-item-switch, "", ", &--active");

        #{$active-selector} {
          $offset: $switch-ball-size + $switch-ball-offset;

          @include form-set-var(
            switch-ball-background-color,
            form-get-var(
              active-color,
              theme.theme-color-var-fallback($form-active-color)
            )
          );

          transform: translateX($offset);

          @include utils.rtl {
            transform: translateX(-$offset);
          }
        }

        @include utils.rtl {
          left: auto;
          right: calc(-50% + #{$switch-ball-offset});
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin menu-item-input-toggle-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-menu-item-input-toggle {
      @if not $disable-menu-item-radio or not $disable-menu-item-switch {
        &__icon {
          // remove the padding since the icon isn't the click target anymore.
          padding: 0;

          // disable the hover states since it's handled by the ListItem instead
          &::before {
            content: none;
          }
        }
      }

      @if not $disable-menu-item-switch {
        // this makes it so that the spacing between the switch and the text
        // aligns with other menu items/icons
        &__track {
          @include icon.set-var(size, $switch-track-width);
        }

        // decrease the ball size and remove the hover states since it's handled
        // by the ListItem instead. without decreasing the ball size, horizontal
        // scrollbars will appear when the switch is checked
        &__ball {
          height: $switch-ball-size;
          left: -$switch-ball-offset;
          top: calc(50% - $switch-ball-size * 0.5);
          width: $switch-ball-size;

          &::before {
            content: none;
          }

          &::after {
            inset: 0;
          }

          @include utils.rtl {
            left: auto;
            right: -$switch-ball-offset;
          }
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin slider-styles($disable-layer: false) {
  @include utils.optional-layer(form, $disable-layer) {
    .rmd-slider-container {
      @if $slider-container-addon-spacing and
        $slider-container-addon-spacing !=
        icon.$spacing
      {
        @include icon.set-var(spacing, $slider-container-addon-spacing);
      }

      @include icon.use-var(gap, spacing);

      align-items: center;
      touch-action: none;

      @if not $disable-horizontal-slider {
        &--h {
          display: flex;
          width: 100%;
        }

        &--pad-left {
          padding-left: $slider-container-padding;
        }

        &--pad-right {
          padding-right: $slider-container-padding;
        }
      }

      @if not $disable-vertical-slider {
        &--v {
          display: inline-flex;
          flex-direction: column-reverse;
        }

        &--pad-top {
          padding-top: $slider-container-padding;
        }

        &--pad-bottom {
          padding-bottom: $slider-container-padding;
        }
      }
    }

    .rmd-slider-track {
      position: relative;

      &::before,
      &::after {
        @if $slider-track-color {
          @include form-use-var(
            background-color,
            slider-color,
            theme.theme-color-var-fallback($slider-track-color)
          );
        }

        content: "";
        pointer-events: none;
        position: absolute;
      }

      &::before {
        @if not $slider-track-color {
          @include form-use-var(background-color, slider-inactive-color);
        }

        opacity: $slider-track-inactive-opacity;
        z-index: $slider-track-inactive-z-index;
      }

      &::after {
        @if not $slider-track-color {
          @include form-use-var(background-color, slider-active-color);
        }

        opacity: $slider-track-active-opacity;
        z-index: $slider-track-active-z-index;
      }

      &--hoverable:hover {
        cursor: pointer;
      }

      &--animate::after {
        transition-duration: $slider-transition-duration;
        transition-timing-function: $slider-transition-timing-function;
      }

      @if $slider-track-color {
        &--disabled {
          @include form-set-var(slider-color, $slider-track-disabled-color);

          @if $slider-track-inactive-opacity {
            &::before {
              opacity: 1;
            }
          }

          &::after {
            @include form-set-var(slider-active-size, 0px);
            @if $slider-track-active-opacity {
              opacity: 1;
            }
          }
        }
      }

      @if not $disable-horizontal-slider {
        &--h {
          @include form-use-var(height, slider-size);

          align-items: center;
          display: flex;
          width: 100%;

          &::before {
            @include form-use-var(height, slider-inactive-size);

            width: 100%;
          }

          &::after {
            @include form-use-var(height, slider-active-size);
          }
        }

        &--h1::after {
          @include form-use-var(max-width, slider-offset-1);

          left: 0;
          transition-property: max-width;
          width: 100%;

          @include utils.rtl {
            left: auto;
            right: 0;
          }
        }

        @if not $disable-range-slider {
          &--h2::after {
            left: form-get-var(slider-offset-1);
            right: calc(100% - form-get-var(slider-offset-2));
            transition-property: left, right;
            will-change: left, right;

            @include utils.rtl {
              left: calc(100% - form-get-var(slider-offset-2));
              right: form-get-var(slider-offset-1);
            }
          }
        }
      }

      @if not $disable-vertical-slider {
        &--v {
          @include form-use-var(height, slider-vertical-size);
          @include form-use-var(width, slider-size);

          display: inline-flex;
          justify-content: center;

          &::before {
            @include form-use-var(width, slider-inactive-size);

            height: 100%;
          }

          &::after {
            @include form-use-var(width, slider-active-size);

            bottom: 0;
          }
        }

        // one thumb track horizontal styles
        &--v1::after {
          @include form-use-var(max-height, slider-offset-1);

          height: 100%;
          transition-property: max-height;
        }

        @if not $disable-range-slider {
          // two thumb track horizontal styles
          &--v2::after {
            @include form-use-var(bottom, slider-offset-1);

            top: calc(100% - #{form-get-var(slider-offset-2)});
            transition-property: bottom, top;
            will-change: bottom, top;
          }
        }
      }
    }

    .rmd-slider-thumb {
      @include form-use-var(
        background-color,
        if($slider-track-color, slider-color, slider-active-color),
        if(
          $slider-track-color,
          theme.theme-color-var-fallback($slider-track-color),
          null
        )
      );

      border-radius: $slider-thumb-border-radius;
      height: $slider-thumb-size;
      outline-style: none;
      position: absolute;
      width: $slider-thumb-size;
      z-index: $slider-thumb-z-index;

      &::after {
        @include utils.pseudo-element($z-index: null);

        background-color: inherit;
        opacity: $slider-thumb-bubble-opacity;
        transition: transform $slider-transition-duration
          $slider-transition-timing-function;
      }

      @if utils.$disable-focus-visible {
        @include utils.keyboard-only {
          &:focus::after {
            transform: scale($slider-thumb-focus-scale);
          }
        }
      } @else {
        &:focus-visible::after {
          transform: scale($slider-thumb-focus-scale);
        }
      }

      @include utils.mouse-hover(false) {
        &:hover::after,
        &--active::after,
        &--active:hover::after {
          transform: scale($slider-thumb-active-scale);
        }
      }

      &--animate {
        transition-duration: $slider-transition-duration;
        transition-timing-function: $slider-transition-timing-function;
      }

      &--disabled {
        background-color: $slider-thumb-disabled-color;

        // prevent hover effects like the "bubble"
        pointer-events: none;
      }

      &--mask {
        @include theme.theme-use-var(background-color);

        border-radius: 0;
      }

      @if not $disable-horizontal-slider {
        &--h {
          transform: translateX(-50%);
          transition-property: left;

          @include utils.rtl {
            transform: translateX(50%);
            transition-property: right;
          }
        }

        &--h1 {
          @include form-use-var(left, slider-offset-1);

          @include utils.rtl {
            @include form-use-var(right, slider-offset-1);

            left: auto;
          }
        }

        @if not $disable-range-slider {
          &--h2 {
            @include form-use-var(left, slider-offset-2);

            @include utils.rtl {
              @include form-use-var(right, slider-offset-2);

              left: auto;
            }
          }
        }

        &--disabled-h {
          transform: translateX(-50%) scale($slider-thumb-disabled-scale);

          @include utils.rtl {
            transform: translateX(50%) scale($slider-thumb-disabled-scale);
          }
        }

        &--mask-h {
          transform: translateX(-50%) scale($slider-thumb-mask-scale);

          @include utils.rtl {
            transform: translateX(50%) scale($slider-thumb-mask-scale);
          }
        }
      }

      @if not $disable-vertical-slider {
        &--v {
          // want the thumb to be aligned so that the center is at the current value.
          // without this transformation, the thumb's bottom side would be aligned
          // with the current value
          transform: translateY(50%);
          transition-property: bottom;
        }

        &--v1 {
          @include form-use-var(bottom, slider-offset-1);
        }

        @if not $disable-range-slider {
          &--v2 {
            @include form-use-var(bottom, slider-offset-2);
          }
        }

        &--disabled-v {
          transform: translateY(50%) scale($slider-thumb-disabled-scale);
        }

        &--mask-v {
          transform: translateY(50%) scale($slider-thumb-mask-scale);
        }
      }

      &__input {
        appearance: none;
        height: 0;
        opacity: 0;
        pointer-events: none;
        width: 0;
      }
    }

    @if not $disable-discrete-slider {
      .rmd-slider-tooltip {
        opacity: 1;
        position: absolute;
        z-index: $slider-tooltip-z-index;

        // this is used to generate the triangle
        &::after {
          border: $slider-tooltip-caret-size solid transparent;
          content: "";
          position: absolute;
        }

        &--animate {
          transition: transform
            $slider-transition-duration
            $slider-transition-timing-function;
        }

        @if not $disable-horizontal-slider {
          &--h {
            top: $slider-tooltip-offset;
            transform: translateX(form-get-var(slider-tooltip-translate))
              scale(form-get-var(slider-tooltip-scale));

            &::after {
              @include tooltip.use-var(border-top-color, background-color);

              left: 50%;
              top: 100%;
              transform: translateX(form-get-var(slider-tooltip-translate));
            }

            @include utils.rtl {
              @include form-set-var(slider-tooltip-translate, 50%);
            }
          }

          &--h-off {
            @include form-set-var(slider-tooltip-scale, 0);
          }

          // have to "duplicate" these styles since the `--h-off` would override the
          // `--h` styles due to css order.
          &--h-on {
            @include form-set-var(slider-tooltip-scale, 1);
          }
        }

        @if not $disable-vertical-slider {
          &--v {
            // going to force rendering always to the left even in RTL languages
            left: $slider-tooltip-offset;
            transform: translateY(50%) scale(1);

            &::after {
              @include tooltip.use-var(border-left-color, background-color);

              left: 100%;
              top: 50%;
              transform: translateY(-50%);
            }
          }

          &--v-off {
            transform: translateY(50%) scale(0);
          }

          // have to "duplicate" these styles since the `--v-off` would override the
          // `--v` styles due to css order.
          &--v-on {
            transform: translateY(50%) scale(1);
          }
        }
      }
    }

    @if not $disable-discrete-slider-marks {
      .rmd-slider-mark {
        border-radius: $slider-mark-border-radius;
        position: absolute;

        &--inactive {
          @include form-use-var(background-color, slider-mark-inactive-color);
          @include form-use-var(opacity, slider-mark-inactive-opacity);

          z-index: $slider-mark-inactive-z-index;
        }

        &--active {
          @include form-use-var(background-color, slider-mark-active-color);
          @include form-use-var(opacity, slider-mark-active-opacity);

          z-index: $slider-mark-active-z-index;
        }

        @if not $disable-horizontal-slider {
          &--h {
            @include form-use-var(left, slider-mark-offset);

            height: $slider-mark-height;
            top: 50%;
            transform: translateY(-50%);
            width: $slider-mark-width;

            @include utils.rtl {
              @include form-use-var(right, slider-mark-offset);

              left: auto;
            }
          }
        }

        @if not $disable-vertical-slider {
          &--v {
            @include form-use-var(bottom, slider-mark-offset);

            height: $slider-mark-width;
            transform: translateY(50%);
            width: $slider-mark-height;
          }
        }
      }
    }

    @if not $disable-discrete-slider-marks-labels {
      .rmd-slider-mark-label {
        position: absolute;

        @if not $disable-horizontal-slider {
          &--h {
            @include form-use-var(left, slider-mark-offset);

            top: 100%;
            transform: translateX(-50%);

            @include utils.rtl {
              @include form-use-var(right, slider-mark-offset);

              left: auto;
              transform: translateX(50%);
            }
          }
        }

        @if not $disable-vertical-slider {
          &--v {
            left: 100%;
            top: form-get-var(slider-mark-offset);
            transform: translateY(-50%);

            @include utils.rtl {
              left: auto;
              right: 100%;
            }
          }
        }
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin form-variables {
  @if not $form-disable-everything {
    @if not theme.is-theme-color-var($form-active-color) {
      @include form-set-var(active-color, $form-active-color);
    }
    @include form-set-var(focus-color, $form-focus-color);

    @if not $disable-label and not $disable-floating-label {
      @include form-set-var(label-floating-top, $label-floating-top);
      @include form-set-var(label-left-offset, 0px);
      @include form-set-var(label-top-offset, 0px);
      @include form-set-var(label-active-padding, 0px);
      @include form-set-var(label-active-background-color, transparent);
    }

    @if not
      $disable-text-field or not
      $disable-textarea or not
      $disable-select or not
      $disable-native-select
    {
      @if not $disable-text-field-filled-theme and $text-field-filled-padding {
        @include form-set-var(
          text-field-filled-padding,
          $text-field-filled-padding
        );
      }

      @if not
        $disable-text-field-outlined-theme and
        $text-field-outlined-padding
      {
        @include form-set-var(
          text-field-outlined-padding,
          $text-field-outlined-padding
        );
      }

      @if not
        $disable-text-field-underlined-theme and
        $text-field-underlined-padding
      {
        @include form-set-var(
          text-field-underlined-padding,
          $text-field-underlined-padding
        );
      }
    }

    @if not $disable-text-field {
      @include form-set-var(text-field-height, $text-field-height);
      @include form-set-var(text-field-padding-left, 0px);
      @include form-set-var(text-field-padding-right, 0px);
      @include form-set-var(text-field-padding-top, 0px);
      @include form-set-var(text-field-border-color, $text-field-border-color);
      @include form-set-var(
        text-field-hover-border-color,
        $text-field-hover-border-color
      );

      @include form-set-var(
        text-field-filled-color,
        $text-field-filled-background-color
      );
    }

    @if not $disable-textarea {
      @include form-set-var(textarea-height, $text-field-height);
      @include form-set-var(textarea-padding, $textarea-vertical-padding);
    }

    @if not $disable-text-field-addon {
      @include form-set-var(addon-top, auto);
      @include form-set-var(addon-margin-top, 0px);
      @include form-set-var(addon-left-offset, 0px);
      @include form-set-var(addon-spacing, $text-field-addon-spacing);
    }

    @if not $disable-switch {
      @include form-set-var(
        switch-track-background-color,
        $switch-track-background-color
      );
      @include form-set-var(
        switch-ball-background-color,
        $switch-ball-background-color
      );
    }

    @if not $disable-slider {
      @if not theme.is-theme-color-var($slider-track-color) {
        @include form-set-var(slider-color, $slider-track-color);
      }
      @include form-set-var(slider-active-color, $slider-track-active-color);
      @include form-set-var(
        slider-inactive-color,
        $slider-track-inactive-color
      );
      @include form-set-var(slider-size, $slider-size);
      @include form-set-var(slider-active-size, $slider-track-active-size);
      @include form-set-var(slider-inactive-size, $slider-track-inactive-size);
      @if not $disable-discrete-slider {
        @include form-set-var(slider-tooltip-scale, 1);
        @include form-set-var(slider-tooltip-translate, -50%);

        @if not $disable-discrete-slider-marks {
          @include form-set-var(slider-mark-offset, 0%);
          @include form-set-var(
            slider-mark-active-color,
            $slider-mark-active-color
          );
          @include form-set-var(
            slider-mark-active-opacity,
            $slider-mark-active-opacity
          );
          @include form-set-var(
            slider-mark-inactive-color,
            $slider-mark-inactive-color
          );
          @include form-set-var(
            slider-mark-inactive-opacity,
            $slider-mark-inactive-opacity
          );
        }
      }

      @if not $disable-vertical-slider {
        @include form-set-var(slider-vertical-size, $slider-vertical-size);
      }
    }
  }
}

/// Generates all the styles based on feature flags.
///
/// @param {Boolean} disable-layer [false] - Set this to `true` to disable the
/// layer behavior
@mixin form-styles($disable-layer: false) {
  @if not $form-disable-everything {
    @include utils.optional-layer(form, $disable-layer) {
      @include theme.default-system-theme {
        @include form-use-dark-theme;
      }

      @if not $disable-fieldset {
        .rmd-fieldset {
          &--unstyled {
            border: 0;
            margin: 0;
            min-width: 0; // just so it can shrink correctly in flex or grid
            padding: 0;
          }

          &--full-width {
            flex: 1 1 auto;
            width: 100%;
          }
        }
      }

      @if not $disable-label {
        @include label-styles(true);
      }

      @if not $disable-message {
        @include form-message-styles(true);
      }

      @if not $_disable-text-field-container {
        @include text-field-container-styles(true);
      }

      @if not
        $disable-text-field or not
        $disable-password or not
        $disable-textarea
      {
        @include text-field-styles(true);
      }

      @if not $disable-password {
        @include password-styles(true);
      }

      @if not $disable-textarea {
        @include textarea-container-styles(true);
        @include textarea-styles(true);
      }

      @if not $disable-select {
        @include select-styles(true);
      }

      @if not $disable-option {
        @include option-styles(true);
      }

      @if not $disable-native-select {
        @include native-select-styles(true);
      }

      @if not $disable-text-field-addon {
        @include text-field-addon-styles(true);
      }

      @if not $disable-checkbox or not $disable-radio or not $disable-switch {
        @include hidden-input-styles(true);
        @include input-toggle-styles(true);
      }

      @if not $disable-switch {
        @include switch-styles(true);
      }

      @if not
        $disable-menu-item-checkbox or not
        $disable-menu-item-radio or not
        $disable-menu-item-switch
      {
        @include menu-item-input-toggle-styles(true);
      }

      @if not $disable-slider {
        @include slider-styles(true);
      }
    }
  }
}
