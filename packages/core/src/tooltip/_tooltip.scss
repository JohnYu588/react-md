@use "sass:map";
@use "../utils";
@use "../theme/colors";
@use "../transition/transition";
@use "../typography/typography";

$disable-everything: false !default;
$disable-vertical: false !default;
$disable-horizontal: false !default;
$disable-above: $disable-vertical !default;
$disable-below: $disable-vertical !default;
$disable-left: $disable-horizontal !default;
$disable-right: $disable-horizontal !default;
$disable-dense: false !default;

$background-color: #616161 !default;
$color: colors.$white !default;

$typography: map.merge(
  typography.$body-1-styles,
  (
    letter-spacing: null,
  )
) !default;
$border-radius: 0.25rem !default;
$z-index: utils.$temporary-element-z-index + 20 !default;
$max-width: 15rem !default;
$min-height: 2rem !default;
$horizontal-padding: 1rem !default;
$vertical-padding: 0.5625rem !default;
$spacing: 1.5rem !default;

$dense-spacing: 0.875rem !default;
$dense-typography: (
  font-size: 0.625rem,
  line-height: 0.825rem,
) !default;
$dense-min-height: 1.375rem !default;
$dense-horizontal-padding: 0.5rem !default;
$dense-vertical-padding: 0.375rem !default;

$enter-duration: transition.$linear-duration !default;
$enter-timing-function: transition.$deceleration-timing-function !default;
$leave-duration: transition.$linear-duration !default;
$leave-timing-function: transition.$acceleration-timing-function !default;
$transition-distance: 0.5rem !default;

$variables: (background-color, color, spacing);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "tooltip");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "tooltip")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(background-color, $background-color);
    @include set-var(color, $color);

    // do not include spacing
  }
}

@mixin styles($disable-layer: false) {
  @if not $disable-everything {
    @include utils.optional-layer(tooltip, $disable-layer) {
      .rmd-tooltip {
        @include utils.map-to-styles($typography);
        @include use-var(background-color);
        @include use-var(color);

        border-radius: $border-radius;
        max-width: $max-width;
        min-height: $min-height;
        opacity: 0;
        overflow: hidden;
        overflow-wrap: anywhere;
        padding: $vertical-padding $horizontal-padding;
        pointer-events: none;
        position: fixed;
        text-transform: none;
        user-select: none;
        z-index: $z-index;

        @if not $disable-dense {
          &--dense {
            @include utils.map-to-styles($dense-typography);
            @include set-var(spacing, $dense-spacing);

            min-height: $dense-min-height;
            padding: $dense-vertical-padding $dense-horizontal-padding;
          }
        }

        @if not $disable-above {
          &--above {
            transform: translateY(-$transition-distance);
          }
        }

        @if not $disable-below {
          &--below {
            transform: translateY($transition-distance);
          }
        }

        @if not $disable-left {
          &--left {
            transform: translateX(-$transition-distance);
          }
        }

        @if not $disable-right {
          &--right {
            transform: translateX($transition-distance);
          }
        }

        &--visible {
          opacity: 1;
          transform: none;
        }

        &--enter {
          transition:
            opacity $enter-duration,
            transform $enter-duration * 2;
          transition-timing-function: $enter-timing-function;
        }

        &--exit {
          transition: opacity $leave-duration $leave-timing-function;
        }

        &--exit-active {
          opacity: 0;
        }
      }
    }
  }
}
