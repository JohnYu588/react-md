@use "sass:map";
@use "../utils";
@use "../box-shadows";
@use "../media-queries/media-queries";
@use "../transition/transition";

$disable-everything: false !default;
$disable-position-left: false !default;
$disable-position-right: false !default;
$disable-position-bottom: false !default;
$disable-position-top: false !default;

$elevation: 2 !default;
$raised-elevation: 16 !default;

$enter-duration: transition.$enter-duration !default;
$enter-timing-function: transition.$deceleration-timing-function !default;
$leave-duration: transition.$leave-duration !default;
$leave-timing-function: transition.$acceleration-timing-function !default;

$z-index: 5 !default;
$raised-z-index: utils.$temporary-element-z-index !default;

$static-width: 16rem !default;
$touch-margin: 3.5rem !default;
$touch-width: calc(100vw - #{$touch-margin}) !default;

$max-height: 100% !default;
$touch-max-height: calc(100% - #{$touch-margin}) !default;
$recommended-min-height: 3.5rem !default;
$recommended-max-height: 50% !default;

$variables: (
  height,
  width,
  max-height,
  touch-width,
  touch-max-height,
  static-width,
  transform-offscreen,
  z-index
);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "sheet");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "sheet")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(touch-width, $touch-width);
    @include set-var(touch-max-height, $touch-max-height);
    @include set-var(static-width, $static-width);
    @include set-var(z-index, $z-index);
  }
}

@mixin styles($disable-layer: false) {
  @if not $disable-everything {
    @include utils.optional-layer(sheet, $disable-layer) {
      .rmd-sheet {
        @include box-shadows.box-shadow($elevation);
        @include use-var(height);
        @include use-var(max-height);
        @include use-var(width);
        @include use-var(z-index);

        overflow: auto;
        position: fixed;

        @if not $disable-position-left or not $disable-position-right {
          &--horizontal {
            bottom: 0;
            top: 0;
          }
        }

        @if not $disable-position-bottom or not $disable-position-top {
          &--vertical {
            left: 0;
            right: 0;
          }
        }

        &--raised {
          @include set-var(z-index, $raised-z-index);
          @include box-shadows.box-shadow($raised-elevation);
        }

        @if not $disable-position-left {
          &--left {
            @include utils.auto-rtl(left, 0) {
              @include set-var(transform-offscreen, translate3d(100%, 0, 0));
            }
            @include set-var(transform-offscreen, translate3d(-100%, 0, 0));
          }
        }

        @if not $disable-position-right {
          &--right {
            @include utils.auto-rtl(right, 0) {
              @include set-var(transform-offscreen, translate3d(-100%, 0, 0));
            }
            @include set-var(transform-offscreen, translate3d(100%, 0, 0));
          }
        }

        @if not $disable-position-bottom {
          &--bottom {
            @include set-var(transform-offscreen, translate3d(0, 100%, 0));

            bottom: 0;
          }
        }

        @if not $disable-position-top {
          &--top {
            @include set-var(transform-offscreen, translate3d(0, -100%, 0));

            top: 0;
          }
        }

        &--touch-width {
          @include set-var(width, get-var(touch-width));
        }

        &--static-width {
          @include set-var(width, get-var(static-width));
        }

        &--media-width {
          @include media-queries.tablet-media {
            @include set-var(width, get-var(static-width));
          }

          @include set-var(width, get-var(touch-width));
        }

        &--viewport-height {
          @include set-var(max-height, $max-height);
        }

        &--touchable-height {
          @include set-var(max-height, get-var(touch-max-height));
        }

        &--recommended-height {
          max-height: $recommended-max-height;
          min-height: $recommended-min-height;
        }

        &--offscreen {
          @include use-var(transform, transform-offscreen);
        }

        &--hidden {
          box-shadow: none;
        }

        &--visible {
          transform: translate3d(0, 0, 0);
        }

        &--enter {
          transition: transform $enter-duration $enter-timing-function;
        }

        &--exit {
          transition: transform $leave-duration $leave-timing-function;
        }
      }
    }
  }
}
