@use "sass:map";
@use "../utils";
@use "../theme/theme";
@use "../avatar/avatar";
@use "../icon/icon";
@use "../divider/divider";
@use "../interaction/interaction";
@use "../typography/typography";

$disable-everything: false !default;
$disable-horizontal: false !default;
$disable-item-disabled-color: false !default;
$disable-item-disabled-opacity: false !default;
$disable-item-avatar: false;
$disable-item-media: false !default;
$disable-item-media-large: false !default;
$disable-medium-height: false !default;
$disable-large-height: false !default;
$disable-extra-large-height: false !default;
$disable-multiline-clamp: false !default;
$disable-multiline-height: true !default;
$disable-item-link-styles: false !default;

$disable-subheader: false !default;
$disable-subheader-inset: false !default;

$item-secondary-text-line-height: 1.42857 !default;
$item-secondary-text-multiline-max-height: 3rem !default;

$vertical-padding: 0.5rem !default;
$dense-vertical-padding: 0.25rem !default;

$horizontal-padding: 0 !default;
$dense-horizontal-padding: $horizontal-padding !default;

$dense-font-size: 0.8125rem !default;
$typography-styles: map.merge(
  typography.$subtitle-1-styles,
  (
    line-height: map.get(typography.$body-1-styles, line-height),
  )
) !default;

$item-disabled-opacity: 0.5 !default;
$item-vertical-padding: 0.5rem !default;
$item-horizontal-padding: 1rem !default;
$item-height: 3rem !default;
$item-dense-height: 2.5rem !default;
$item-medium-height: 3.5rem !default;
$item-dense-medium-height: 3rem !default;
$item-large-height: 4rem !default;
$item-dense-large-height: 3.5rem !default;
$item-extra-large-height: 4.5rem !default;
$item-dense-extra-large-height: 4rem !default;
$item-multiline-clamp: 2 !default;
$item-multiline-height: 5.5rem !default;
$item-dense-multiline-height: 5rem !default;

$item-media-spacing: 1rem !default;
$item-media-size: 3.5rem !default;
$item-media-large-size: 6.25rem !default;

$item-keyline: 4.5rem !default;

$variables: (
  horizontal-padding,
  vertical-padding,
  item-keyline,
  item-horizontal-padding,
  item-vertical-padding,
  item-height,
  item-medium-height,
  item-large-height,
  item-extra-large-height,
  item-multiline-height,
  item-media-size,
  item-media-spacing,
  item-text-multiline-height,
  item-multiline-clamp
);

@function get-var($name, $fallback: null) {
  $var: utils.get-var-name($variables, $name, "list");
  @if $fallback {
    @return var(#{$var}, #{$fallback});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  @if $value {
    #{utils.get-var-name($variables, $name, "list")}: #{$value};
  }
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin _addon-spacing($subtract) {
  $keyline: get-var(item-keyline);
  $padding: get-var(item-horizontal-padding);

  @include icon.set-var(
    spacing,
    calc(#{$keyline} - #{$padding} - #{$subtract})
  );
}

@mixin variables {
  @if not $disable-everything {
    @include set-var(horizontal-padding, $horizontal-padding);
    @include set-var(vertical-padding, $vertical-padding);
    @include set-var(item-horizontal-padding, $item-horizontal-padding);
    @include set-var(item-vertical-padding, $item-vertical-padding);
    @include set-var(item-keyline, $item-keyline);

    @include set-var(item-height, $item-height);
    @if not $disable-medium-height {
      @include set-var(item-medium-height, $item-medium-height);
    }
    @if not $disable-large-height {
      @include set-var(item-large-height, $item-large-height);
    }
    @if not $disable-extra-large-height {
      @include set-var(item-extra-large-height, $item-extra-large-height);
    }
    @if not $disable-multiline-clamp {
      @include set-var(item-multiline-clamp, $item-multiline-clamp);
    }
    @if not $disable-multiline-height {
      @include set-var(item-multiline-height, $item-multiline-height);
      @include set-var(
        item-text-multiline-height,
        $item-secondary-text-multiline-max-height
      );
    }

    @if not $disable-item-media {
      @include set-var(item-media-size, $item-media-size);
      @include set-var(item-media-spacing, $item-media-spacing);
    }
  }
}

@mixin styles {
  @if not $disable-everything {
    .rmd-list {
      @include utils.map-to-styles($typography-styles);
      @include divider.set-var(inset, get-var(item-keyline));

      list-style: none;
      margin: 0;
      padding: get-var(vertical-padding) get-var(horizontal-padding);

      @if not $disable-horizontal {
        &--horizontal {
          display: flex;
          flex-wrap: nowrap;
          max-width: 100%;
          overflow: auto;
          padding: get-var(horizontal-padding) get-var(vertical-padding);
        }
      }
    }

    .rmd-list-item {
      @include use-var(min-height, item-height);

      align-items: center;
      display: flex;
      padding: get-var(item-vertical-padding) get-var(item-horizontal-padding);

      &--clickable {
        @include interaction.surface(
          $disabled-selector: '&[aria-disabled="true"]'
        );
      }

      @if not $disable-item-link-styles {
        &--link {
          color: inherit;
          text-decoration: none;
        }
      }

      @if not $disable-item-disabled-color {
        &--disabled-color {
          @include theme.theme-set-var(
            text-secondary-color,
            theme.theme-get-var(text-disabled-color)
          );
          @include theme.theme-use-var(color, text-disabled-color);
        }
      }

      @if not $disable-item-disabled-opacity {
        &--disabled-opacity {
          opacity: $item-disabled-opacity;
        }
      }

      @if not $disable-medium-height {
        &--medium {
          @include set-var(item-height, get-var(item-medium-height));
        }
      }

      @if not $disable-large-height {
        &--large {
          @include set-var(item-height, get-var(item-large-height));
        }
      }

      @if not $disable-extra-large-height {
        &--extra-large {
          @include set-var(item-height, get-var(item-extra-large-height));
        }
      }

      @if not $disable-multiline-height {
        &--multiline {
          @include set-var(item-height, get-var(item-multiline-height));
        }
      }

      &__text {
        @include typography.text-overflow;
        @include utils.rtl {
          margin-left: auto;
        }

        display: block;
        flex-grow: 1;

        &--secondary {
          @include theme.theme-use-var(color, text-secondary-color);
        }

        @if not $disable-multiline-clamp {
          &--clamped {
            @include typography.line-clamp(get-var(item-multiline-clamp));
            @if not $disable-multiline-height {
              @include use-var(max-height, item-text-multiline-height);
            }

            line-height: $item-secondary-text-line-height;
            white-space: normal;
          }
        }
      }

      &__addon {
        flex-shrink: 0;

        &--top {
          align-self: flex-start;
        }

        &--bottom {
          align-self: flex-end;
        }

        &--before {
          @include _addon-spacing(icon.get-var(size));
        }

        @if not $disable-item-avatar {
          &--avatar-before {
            @include _addon-spacing(avatar.get-var(size));
          }
        }

        @if not $disable-item-media {
          &--media {
            @include icon.set-var(spacing, get-var(item-media-spacing));
            @include use-var(width, item-media-size);
          }

          &--media-centered {
            align-items: center;
            display: flex;
            justify-content: center;
          }

          @if not $disable-item-media-large {
            &--media-large {
              @include set-var(item-media-size, $item-media-large-size);
            }
          }
        }
      }
    }

    @if not $disable-subheader {
      .rmd-list-subheader {
        @include utils.map-to-styles(typography.$subtitle-2-styles);
        @include theme.theme-use-var(color, text-secondary-color);
        @include use-var(height, item-height);

        align-items: center;
        display: flex;
        padding: get-var(item-vertical-padding)
          get-var(item-horizontal-padding);

        @if not $disable-subheader-inset {
          &--inset {
            @include utils.rtl {
              @include use-var(padding-left, item-horizontal-padding);
              @include use-var(padding-right, item-keyline);
            }

            @include use-var(padding-left, item-keyline);
          }
        }
      }
    }
  }
}
