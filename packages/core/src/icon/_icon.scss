@use "sass:color";
@use "sass:map";
@use "../theme/theme";
@use "../transition/transition";
@use "../utils";

$disable-font: false !default;
$disable-svg: false !default;
$disable-symbol: false !default;
$disable-dense: false !default;
$disable-inline: false !default;
$disable-spacing-before: false !default;
$disable-spacing-after: false !default;
$disable-spacing-above: false !default;
$disable-spacing-below: false !default;
$disable-rotator: false !default;

$light-theme-color: color.adjust(#000, $lightness: 46%) !default;
$dark-theme-color: color.adjust(#fff, $lightness: -30%) !default;

$color: theme.get-default-color($light-theme-color, $dark-theme-color) !default;

$size: 1.5rem !default;
$dense-size: 1.25rem !default;

$symbol-fill: 0 !default;
$symbol-weight: 400 !default;
$symbol-grade: 0 !default;
$symbol-optical-size: 48 !default;

$_validated-fill: utils.validate((0, 1), $symbol-fill, "$symbol-fill");
$_validated_weight: utils.validate(
  (100 200 300 400 500 600 700),
  $symbol-weight,
  "$symbol-weight"
);
$_validated_grade: utils.validate((-25 0 200), $symbol-grade, "$symbol-grade");
$_validated_optical-size: utils.validate(
  (20 24 40 48),
  $symbol-optical-size,
  "$symbol-optical-size"
);

$spacing: 0.5rem !default;

$rotate-from: 0deg !default;
$rotate-to: 180deg !default;
$rotate-duration: transition.$linear-duration !default;

$var-lookup: (
  color: (
    var: --rmd-icon-color,
    value: $color,
  ),
  size: (
    var: --rmd-icon-size,
    value: $size,
  ),
  spacing: (
    var: --rmd-icon-spacing,
    value: $spacing,
  ),
  rotate-from: (
    var: --rmd-icon-rotate-from,
    value: $rotate-from,
  ),
  rotate-to: (
    var: --rmd-icon-rotate-to,
    value: $rotate-to,
  ),
  symbol-fill: (
    var: --rmd-symbol-fill,
    value: $symbol-fill,
  ),
  symbol-grade: (
    var: --rmd-symbol-grad,
    value: $symbol-grade,
  ),
  symbol-weight: (
    var: --rmd-symbol-wght,
    value: $symbol-weight,
  ),
  symbol-optical-size: (
    var: --rmd-symbol-opsz,
    value: $symbol-optical-size,
  ),
);

@function get-var($name, $fallback: null) {
  $found: utils.validate($var-lookup, $name, "icon var");
  $var: map.get($found, var);
  $value: if($fallback, $fallback, map.get($found, value));

  @if $value {
    @return var(#{$var}, #{$value});
  }

  @return var(#{$var});
}

@mixin set-var($name, $value) {
  $var: map.get(utils.validate($var-lookup, $name, "icon var"), var);

  #{$var}: #{$value};
}

@mixin use-var($property, $name: $property, $fallback: null) {
  #{$property}: get-var($name, $fallback);
}

@mixin use-light-theme {
  @if not $disable-font or not $disable-svg {
    @include set-var(color, $light-theme-color);
  }
}

@mixin use-dark-theme {
  @if not $disable-font or not $disable-svg {
    @include set-var(color, $dark-theme-color);
  }
}

@mixin dense {
  @if $dense-size {
    @include set-var(size, $dense-size);
  }
}

@mixin styles {
  // shouldn't really use react-md without icons though...
  @if not $disable-font or not $disable-svg and not $disable-symbol {
    @include theme.default-system-theme {
      @include use-dark-theme;
    }

    .rmd-icon {
      @include use-var(font-size, size);
      @include use-var(color);

      // you normally don't want icons to shrink in flex containers.
      // update the icon manually instead.
      flex-shrink: 0;
      user-select: none;

      @if not $disable-font {
        &--font {
          text-align: center;
        }
      }

      @if not $disable-svg {
        &--svg {
          fill: currentcolor;
          height: 1em;
          width: 1em;
        }
      }

      @if not $disable-symbol {
        &--symbol {
          font-variation-settings:
            "FILL" get-var(symbol-fill),
            "wght" get-var(symbol-weight),
            "GRAD" get-var(symbol-grade),
            "opsz" get-var(symbol-optical-size);
        }
      }

      @if not $disable-inline {
        &--vab {
          vertical-align: bottom;
        }
      }

      @if not $disable-spacing-before {
        &--before {
          @include utils.auto-rtl(margin-right, get-var(spacing), 0);
        }
      }

      @if not $disable-spacing-after {
        &--after {
          @include utils.auto-rtl(margin-left, get-var(spacing), 0);
        }
      }

      @if not $disable-spacing-above {
        &--above {
          @include use-var(margin-top, spacing);
        }
      }

      @if not $disable-spacing-below {
        &--below {
          @include use-var(margin-bottom, spacing);
        }
      }

      @if not $disable-dense {
        &--dense {
          @include set-var(size, $dense-size);
        }
      }
    }
  }

  @if not $disable-rotator {
    .rmd-icon-rotator {
      transform: rotate(get-var(rotate-from));

      &--animate {
        transition: transform $rotate-duration linear;
      }

      &--rotated {
        transform: rotate(get-var(rotate-to));
      }
    }
  }
}
