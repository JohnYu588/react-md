@use '../variables' as *;

@use '@react-md/theme/dist/color-palette' as *;
@use 'react-md' with (
  $rmd-theme-primary: $primary-color,
  $rmd-theme-secondary: $secondary-color,
  $rmd-utils-auto-dense: true,
);

@include react-md.react-md-utils;

// sass-lint:disable no-duplicate-properties
:root {
  #{--code-color}: #{$rmd-pink-600};
  #{--sass-bg}: #{$rmd-grey-200};
  #{--sass-border}: #{$rmd-grey-400};
}

.dark-theme {
  @include react-md.rmd-theme-dark;

  #{--code-color}: #{$rmd-pink-400};
  #{--sass-bg}: #{rgba($rmd-black-base, 0.42)};
  #{--sass-border}: #{rgba($rmd-black-base, 0.87)};
}

.iframe {
  border: 0;
  border-radius: 0.25rem;
  height: 32rem;
  margin: 2rem auto;
  overflow: hidden;
  width: 100%;
}

.blockquote {
  $border-style: 0.25em solid react-md.rmd-divider-theme-var(background-color);

  @include react-md.rmd-theme(color, text-secondary-on-background);
  @include react-md.rmd-typography(subtitle-1);
  @include react-md.rmd-utils-rtl-auto(border-left, $border-style);

  font-style: italic;
  margin: 1em 0;
  padding: 0.5em 1em;
  position: relative;

  p:only-child {
    margin: 0;
  }

  p:last-child {
    margin-bottom: 0;
  }
}

.heading {
  @include react-md.rmd-utils-phone-media {
    // decrease font size and line-height so it can fit on mobile screens. this
    // should match the size in Markdown.module.scss
    &.rmd-typography--headline-2 {
      @include react-md.rmd-typography-value(
        headline-4,
        font-size,
        line-height
      );
    }
  }

  @include react-md.rmd-utils-tablet-media {
    margin-left: -1em;
    padding-left: 1em;
  }

  position: relative;

  &:hover .heading__link {
    opacity: 1;
  }

  &--no-margin-top {
    margin-top: 0;
  }

  &__link {
    @include react-md.rmd-icon-theme(color);
    @include react-md.rmd-utils-hide-focus-outline;
    @include react-md.rmd-utils-desktop-media {
      display: block;
    }
    @include react-md.rmd-states-focus-shadow;

    &::before {
      @include react-md.rmd-states-surface-base;

      margin: -0.25rem;
    }

    display: none;
    left: 0;
    opacity: 0;
    position: absolute;
    text-decoration: none;
    transition: opacity react-md.$rmd-transition-standard-time;

    &:hover,
    &:focus {
      text-decoration: underline;
    }

    &:focus {
      opacity: 1;
    }
  }

  &__toc {
    margin-bottom: 0.25em;

    + ul {
      margin: 0;
      padding-bottom: 2em;

      p {
        margin: 0;
      }

      a,
      li {
        @include react-md.rmd-typography(headline-6);
      }
    }
  }
}

.code {
  @include react-md.rmd-typography(body-1);

  font-family: 'Source Code Pro', Consolas, Monaco, monospace;

  &--block {
    background-color: $solarized-base-03;
    color: $solarized-base-1;

    // always enforce ltr for blocked code
    direction: ltr;
    margin: 0.5em 0;
    overflow: auto;
    padding: 1em;

    &::selection,
    *::selection {
      background-color: $solarized-base-02;
    }

    // to help with the collapse transition on expandable code, update it so
    // that only the vertical overflow is hidden.
    &.rmd-collapse--no-overflow {
      overflow-y: hidden;
    }
  }

  &--inline {
    &::before,
    &::after {
      content: '\`';
    }

    color: var(--code-color);
    white-space: pre-wrap;
  }

  &--no-wrap {
    white-space: nowrap;
  }

  &--counted {
    padding-left: 3em;
    position: relative;
  }

  &__lines {
    border-right: 1px solid $solarized-base-01;
    display: flex;
    flex-direction: column;
    left: 0;
    padding-right: 0.25em;
    pointer-events: none;
    position: absolute;
    text-align: right;
    width: 2.5em;
  }
}

// prismjs custom theme
// this is _basically_ my current vim theme, but not aas good since
// Prism doesn't have as many tokenizers
.token {
  position: relative;
  z-index: 1;

  &.comment,
  &.doctype {
    color: $solarized-base-01;
  }

  &.keyword {
    color: $solarized-green;
  }

  &.punctuation {
    color: $solarized-base-01;
  }

  &.inserted,
  &.string,
  .language-tsx &.attr-value {
    color: $solarized-cyan;
  }

  &.tag,
  &.selector,
  &.class-name,
  // fixes mixins/functions
  .language-scss &.function,
  // fixes variables
  .language-scss &.variable {
    color: $solarized-blue;
  }

  &.attr-name,
  &.property,
  &.builtin {
    color: $solarized-yellow;
  }

  &.script,
  &.interpolation,
  // to fix interfaces
  .language-ts &.keyword + .class-name,
  .language-tsx &.keyword + .class-name {
    color: $solarized-base-1;
  }

  // fixes property colors
  .language-scss &.keyword,
  // for npm install
  .language-shell &.function {
    color: $solarized-orange;
  }

  &.deleted,
  &.boolean,
  &.number,
  &.interpolation-punctuation {
    color: $solarized-red;
  }

  &.important,
  &.bold {
    font-weight: map-get(react-md.$rmd-typography-font-weights, bold);
  }

  &.italic {
    font-style: italic;
  }

  &.entity {
    cursor: help;
  }
}
